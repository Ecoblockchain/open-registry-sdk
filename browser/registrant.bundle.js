/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar ProtoBuf = __webpack_require__(1);\nvar Promise = __webpack_require__(9).Promise;\nvar OrUtils = __webpack_require__(15);\nvar builder = ProtoBuf.loadJson(__webpack_require__(47));\nvar Schema = builder.build('Schema').Schema;\nvar builder = ProtoBuf.loadJson(__webpack_require__(47));\nvar Schema = builder.build(\"Schema\").Schema;\n\nfunction Registrant(provider, registryAddress, registrarAddress) {\n  if (provider) {\n    this.registry = provider.getRegistry(registryAddress);\n    this.registrar = provider.getRegistrar(registrarAddress);\n    this.address = provider.getAddress();\n    this.web3 = provider.getWeb3();\n  }\n}\n\nRegistrant.prototype.createThing = function (thing, schemaIndex) {\n  if (!schemaIndex) {\n    schemaIndex = 1;\n  }\n  var self = this;\n  return new Promise(function (fulfill, reject) {\n    self.registry.schemas.call(schemaIndex, { from: self.address }, function (error, protoBufferSchema) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var builder = ProtoBuf.loadProto(Schema.decodeHex(protoBufferSchema).get('definition'));\n      var Thing = builder.build(\"Thing\");\n      var dataProto = new Thing(thing.data);\n      var dataChunks = OrUtils.bytes32Array.slice(dataProto.encodeHex());\n\n      if (thing.identities.length == 0) {\n        console.error('Error, no identities supplied.');\n        reject('Error, no identities supplied.');\n        return;\n      }\n      if (!OrUtils.urn.check(thing.identities)) {\n        console.error('Error, identities format is invalid. Details: https://github.com/chronicled/open-registry-ethereum/wiki');\n        reject('Error, identities format is invalid.');\n        return;\n      }\n      var encodedIdentities = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(thing.identities));\n\n      self.registry.createThing(encodedIdentities, dataChunks, schemaIndex, { from: self.address, gas: 2000000 }, function (err, data) {\n        if (err) {\n          console.error(err);\n          reject(err);\n          return;\n        }\n        fulfill(data);\n      });\n    });\n  });\n};\n\n// things is the array of Thing objects with 2 parameters: identities, data\n// same schemaIndex will be used for all the items\nRegistrant.prototype.createThings = function (things, schemaIndex) {\n  if (!schemaIndex) {\n    schemaIndex = 1;\n  }\n  var self = this;\n  return new Promise(function (fulfill, reject) {\n    self.registry.schemas.call(schemaIndex, { from: self.address }, function (error, protoBufferSchema) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      if (protoBufferSchema.slice(0, 2) == '0x') {\n        protoBufferSchema = protoBufferSchema.slice(2);\n      }\n      // Pack data into chunked hex bytes32 packets using ProtoBuffer\n      // var schema = Schema.decodeHex(protoBufferSchema);\n      var builder = ProtoBuf.loadProto(Schema.decodeHex(protoBufferSchema).get('definition'));\n      var Thing = builder.build(\"Thing\");\n\n      var idsChunks = [];\n      var idsPerThing = [];\n      var dataLength = [];\n      var dataChunks = [];\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = things[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var thing = _step.value;\n\n          if (!OrUtils.urn.check(thing.identities)) {\n            console.error('Error, identities format is invalid. Details: https://github.com/chronicled/open-registry-ethereum/wiki', thing.identities);\n            reject('Error, identities format is invalid.');\n            return;\n          }\n          idsPerThing.push(thing.identities.length);\n          var encodedIdentities = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(thing.identities));\n          idsChunks = idsChunks.concat(encodedIdentities);\n\n          var chunks = OrUtils.bytes32Array.slice(new Thing(thing.data).encodeHex());\n          dataChunks = dataChunks.concat(chunks);\n          dataLength.push(chunks.length);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      ;\n\n      self.registry.createThings(idsChunks, idsPerThing, dataChunks, dataLength, schemaIndex, { from: self.address, gas: 2000000 }, function (err, data) {\n        if (err) {\n          console.error(err);\n          reject(err);\n          return;\n        }\n        fulfill(data);\n      });\n    });\n  });\n};\n\nRegistrant.prototype.updateThingData = function (identity, data, schemaIndex) {\n  if (!schemaIndex) {\n    schemaIndex = 1;\n  }\n  var self = this;\n  return new Promise(function (fulfill, reject) {\n    self.registry.schemas.call(schemaIndex, { from: self.address }, function (error, protoBufferSchema) {\n      if (error) {\n        console.error(error);\n        reject(error);\n        return;\n      }\n\n      var builder = ProtoBuf.loadProto(Schema.decodeHex(protoBufferSchema).get('definition'));\n      var Thing = builder.build(\"Thing\");\n      var dataProto = new Thing(thing.data);\n      var dataChunks = OrUtils.bytes32Array.slice(dataProto.encodeHex());\n\n      var encodedIdentity = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(identity));\n\n      self.registry.updateThingData(encodedIdentity, dataChunks, schemaIndex, { from: self.address, gas: 2000000 }, function (err, data) {\n        if (err) {\n          console.error(err);\n          reject(err);\n          return;\n        }\n        fulfill(data);\n      });\n    });\n  });\n};\n\nRegistrant.prototype.addIdentities = function (identity, newIdentities) {\n  var self = this;\n  return new Promise(function (fulfill, reject) {\n    var encodedIdentity = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(identity));\n    if (!OrUtils.urn.check(newIdentities)) {\n      console.error('Error, identities format is invalid. Details: https://github.com/chronicled/open-registry-ethereum/wiki', newIdentities);\n      reject('Error, identities format is invalid.');\n      return;\n    }\n    var encodedNewIdentities = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(newIdentities));\n\n    self.registry.addIdentities(encodedIdentity, encodedNewIdentities, { from: self.address, gas: 2000000 }, function (err, data) {\n      if (err) {\n        console.error(err);\n        reject(err);\n        return;\n      }\n      fulfill(data);\n    });\n  });\n};\n\nRegistrant.prototype.setThingValid = function (identity, isValid) {\n  var self = this;\n  return new Promise(function (fulfill, reject) {\n    var encodedIdentity = OrUtils.urn.packer.encodeAndChunk(OrUtils.common.compressAll(identity));\n    self.registry.setThingValid(encodedIdentity, isValid, { from: self.address, gas: 2000000 }, function (err, data) {\n      if (err) {\n        console.error(err);\n        reject(err);\n        return;\n      }\n      fulfill(data);\n    });\n  });\n};\n\nRegistrant.prototype.getTransactionResult = function (transactionHash) {\n  var self = this;\n  return waitForTx(transactionHash, this.web3).then(function (transactionData) {\n    var events = transactionData.logs.filter(function (log) {\n      return log.address === self.registryAddress;\n    });\n    if (events.length == 0) {\n      throw 'Transaction ran out of gas.';\n    }\n    var errors = events.filter(function (log) {\n      return log.topics[0] === '0xe887de22eef9e399f405f7821ce61fcbe181b8acba1709d9b1360af087485401';\n    });\n    if (errors.length == 0) {\n      return true;\n    }\n    var errorMessages = errors.map(function (log) {\n      switch (self.web3.toDecimal(log.data.slice(0, 66))) {\n        case 1:\n          return 'Identity collision, already assigned to another Thing.';\n        case 2:\n          return 'Not found, identity does not exist.';\n        case 3:\n          return 'Unauthorized, modification only by owner.';\n        case 4:\n          return 'Unknown schema specified.';\n        case 5:\n          return 'Incorrect input, at least one identity is required.';\n        case 6:\n          return 'Incorrect input, data is required.';\n        case 7:\n          return 'Incorrect format of the identity, schema length and identity length cannot be empty.';\n        case 8:\n          return 'Incorrect format of the identity, identity must be padded with trailing 0s.';\n      }\n    });\n    throw errorMessages;\n  });\n};\n\nfunction waitForTx(txHash, web3) {\n  function checkTX(resolve) {\n    web3.eth.getTransactionReceipt(txHash, function (error, txData) {\n      if (txData) {\n        resolve(txData);\n      } else {\n        setTimeout(checkTX, 100, resolve);\n      }\n    });\n  }\n  return new Promise(function (resolve, _reject) {\n    setTimeout(checkTX, 100, resolve);\n  });\n}\n\nmodule.exports = Registrant;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/registrant.js\n ** module id = 0\n ** module chunks = 2\n **/\n//# sourceURL=webpack:///./lib/registrant.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, module) {\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n *//**\r\n * @license protobuf.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/protobuf.js for details\r\n */(function(global,factory){/* AMD */if(\"function\"==='function'&&__webpack_require__(4)[\"amd\"])!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));/* CommonJS */else if(\"function\"===\"function\"&&( false?\"undefined\":_typeof(module))===\"object\"&&module&&module[\"exports\"])module[\"exports\"]=factory(__webpack_require__(5),true);/* Global */else(global[\"dcodeIO\"]=global[\"dcodeIO\"]||{})[\"ProtoBuf\"]=factory(global[\"dcodeIO\"][\"ByteBuffer\"]);})(undefined,function(ByteBuffer,isCommonJS){\"use strict\";/**\r\n     * The ProtoBuf namespace.\r\n     * @exports ProtoBuf\r\n     * @namespace\r\n     * @expose\r\n     */var ProtoBuf={};/**\r\n     * @type {!function(new: ByteBuffer, ...[*])}\r\n     * @expose\r\n     */ProtoBuf.ByteBuffer=ByteBuffer;/**\r\n     * @type {?function(new: Long, ...[*])}\r\n     * @expose\r\n     */ProtoBuf.Long=ByteBuffer.Long||null;/**\r\n     * ProtoBuf.js version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.VERSION=\"5.0.1\";/**\r\n     * Wire types.\r\n     * @type {Object.<string,number>}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES={};/**\r\n     * Varint wire type.\r\n     * @type {number}\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.VARINT=0;/**\r\n     * Fixed 64 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.BITS64=1;/**\r\n     * Length delimited wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.LDELIM=2;/**\r\n     * Start group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.STARTGROUP=3;/**\r\n     * End group wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.ENDGROUP=4;/**\r\n     * Fixed 32 bits wire type.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.WIRE_TYPES.BITS32=5;/**\r\n     * Packable wire types.\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.PACKABLE_WIRE_TYPES=[ProtoBuf.WIRE_TYPES.VARINT,ProtoBuf.WIRE_TYPES.BITS64,ProtoBuf.WIRE_TYPES.BITS32];/**\r\n     * Types.\r\n     * @dict\r\n     * @type {!Object.<string,{name: string, wireType: number, defaultValue: *}>}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.TYPES={// According to the protobuf spec.\n\"int32\":{name:\"int32\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:0},\"uint32\":{name:\"uint32\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:0},\"sint32\":{name:\"sint32\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:0},\"int64\":{name:\"int64\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:ProtoBuf.Long?ProtoBuf.Long.ZERO:undefined},\"uint64\":{name:\"uint64\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:ProtoBuf.Long?ProtoBuf.Long.UZERO:undefined},\"sint64\":{name:\"sint64\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:ProtoBuf.Long?ProtoBuf.Long.ZERO:undefined},\"bool\":{name:\"bool\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:false},\"double\":{name:\"double\",wireType:ProtoBuf.WIRE_TYPES.BITS64,defaultValue:0},\"string\":{name:\"string\",wireType:ProtoBuf.WIRE_TYPES.LDELIM,defaultValue:\"\"},\"bytes\":{name:\"bytes\",wireType:ProtoBuf.WIRE_TYPES.LDELIM,defaultValue:null// overridden in the code, must be a unique instance\n},\"fixed32\":{name:\"fixed32\",wireType:ProtoBuf.WIRE_TYPES.BITS32,defaultValue:0},\"sfixed32\":{name:\"sfixed32\",wireType:ProtoBuf.WIRE_TYPES.BITS32,defaultValue:0},\"fixed64\":{name:\"fixed64\",wireType:ProtoBuf.WIRE_TYPES.BITS64,defaultValue:ProtoBuf.Long?ProtoBuf.Long.UZERO:undefined},\"sfixed64\":{name:\"sfixed64\",wireType:ProtoBuf.WIRE_TYPES.BITS64,defaultValue:ProtoBuf.Long?ProtoBuf.Long.ZERO:undefined},\"float\":{name:\"float\",wireType:ProtoBuf.WIRE_TYPES.BITS32,defaultValue:0},\"enum\":{name:\"enum\",wireType:ProtoBuf.WIRE_TYPES.VARINT,defaultValue:0},\"message\":{name:\"message\",wireType:ProtoBuf.WIRE_TYPES.LDELIM,defaultValue:null},\"group\":{name:\"group\",wireType:ProtoBuf.WIRE_TYPES.STARTGROUP,defaultValue:null}};/**\r\n     * Valid map key types.\r\n     * @type {!Array.<!Object.<string,{name: string, wireType: number, defaultValue: *}>>}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.MAP_KEY_TYPES=[ProtoBuf.TYPES[\"int32\"],ProtoBuf.TYPES[\"sint32\"],ProtoBuf.TYPES[\"sfixed32\"],ProtoBuf.TYPES[\"uint32\"],ProtoBuf.TYPES[\"fixed32\"],ProtoBuf.TYPES[\"int64\"],ProtoBuf.TYPES[\"sint64\"],ProtoBuf.TYPES[\"sfixed64\"],ProtoBuf.TYPES[\"uint64\"],ProtoBuf.TYPES[\"fixed64\"],ProtoBuf.TYPES[\"bool\"],ProtoBuf.TYPES[\"string\"],ProtoBuf.TYPES[\"bytes\"]];/**\r\n     * Minimum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.ID_MIN=1;/**\r\n     * Maximum field id.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ProtoBuf.ID_MAX=0x1FFFFFFF;/**\r\n     * If set to `true`, field names will be converted from underscore notation to camel case. Defaults to `false`.\r\n     *  Must be set prior to parsing.\r\n     * @type {boolean}\r\n     * @expose\r\n     */ProtoBuf.convertFieldsToCamelCase=false;/**\r\n     * By default, messages are populated with (setX, set_x) accessors for each field. This can be disabled by\r\n     *  setting this to `false` prior to building messages.\r\n     * @type {boolean}\r\n     * @expose\r\n     */ProtoBuf.populateAccessors=true;/**\r\n     * By default, messages are populated with default values if a field is not present on the wire. To disable\r\n     *  this behavior, set this setting to `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */ProtoBuf.populateDefaults=true;/**\n     * @alias ProtoBuf.Util\n     * @expose\n     */ProtoBuf.Util=function(){\"use strict\";/**\n         * ProtoBuf utilities.\n         * @exports ProtoBuf.Util\n         * @namespace\n         */var Util={};/**\n         * Flag if running in node or not.\n         * @type {boolean}\n         * @const\n         * @expose\n         */Util.IS_NODE=!!((typeof process===\"undefined\"?\"undefined\":_typeof(process))==='object'&&process+''==='[object process]'&&!process['browser']);/**\n         * Constructs a XMLHttpRequest object.\n         * @return {XMLHttpRequest}\n         * @throws {Error} If XMLHttpRequest is not supported\n         * @expose\n         */Util.XHR=function(){// No dependencies please, ref: http://www.quirksmode.org/js/xmlhttp.html\nvar XMLHttpFactories=[function(){return new XMLHttpRequest();},function(){return new ActiveXObject(\"Msxml2.XMLHTTP\");},function(){return new ActiveXObject(\"Msxml3.XMLHTTP\");},function(){return new ActiveXObject(\"Microsoft.XMLHTTP\");}];/** @type {?XMLHttpRequest} */var xhr=null;for(var i=0;i<XMLHttpFactories.length;i++){try{xhr=XMLHttpFactories[i]();}catch(e){continue;}break;}if(!xhr)throw Error(\"XMLHttpRequest is not supported\");return xhr;};/**\n         * Fetches a resource.\n         * @param {string} path Resource path\n         * @param {function(?string)=} callback Callback receiving the resource's contents. If omitted the resource will\n         *   be fetched synchronously. If the request failed, contents will be null.\n         * @return {?string|undefined} Resource contents if callback is omitted (null if the request failed), else undefined.\n         * @expose\n         */Util.fetch=function(path,callback){if(callback&&typeof callback!='function')callback=null;if(Util.IS_NODE){var fs=__webpack_require__(7);if(callback){fs.readFile(path,function(err,data){if(err)callback(null);else callback(\"\"+data);});}else try{return fs.readFileSync(path);}catch(e){return null;}}else{var xhr=Util.XHR();xhr.open('GET',path,callback?true:false);// xhr.setRequestHeader('User-Agent', 'XMLHTTP/1.0');\nxhr.setRequestHeader('Accept','text/plain');if(typeof xhr.overrideMimeType==='function')xhr.overrideMimeType('text/plain');if(callback){xhr.onreadystatechange=function(){if(xhr.readyState!=4)return;if(/* remote */xhr.status==200||/* local */xhr.status==0&&typeof xhr.responseText==='string')callback(xhr.responseText);else callback(null);};if(xhr.readyState==4)return;xhr.send(null);}else{xhr.send(null);if(/* remote */xhr.status==200||/* local */xhr.status==0&&typeof xhr.responseText==='string')return xhr.responseText;return null;}}};/**\n         * Converts a string to camel case.\n         * @param {string} str\n         * @returns {string}\n         * @expose\n         */Util.toCamelCase=function(str){return str.replace(/_([a-zA-Z])/g,function($0,$1){return $1.toUpperCase();});};return Util;}();/**\r\n     * Language expressions.\r\n     * @type {!Object.<string,!RegExp>}\r\n     * @expose\r\n     */ProtoBuf.Lang={// Characters always ending a statement\nDELIM:/[\\s\\{\\}=;:\\[\\],'\"\\(\\)<>]/g,// Field rules\nRULE:/^(?:required|optional|repeated|map)$/,// Field types\nTYPE:/^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/,// Names\nNAME:/^[a-zA-Z_][a-zA-Z_0-9]*$/,// Type definitions\nTYPEDEF:/^[a-zA-Z][a-zA-Z_0-9]*$/,// Type references\nTYPEREF:/^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,// Fully qualified type references\nFQTYPEREF:/^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/,// All numbers\nNUMBER:/^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/,// Decimal numbers\nNUMBER_DEC:/^(?:[1-9][0-9]*|0)$/,// Hexadecimal numbers\nNUMBER_HEX:/^0[xX][0-9a-fA-F]+$/,// Octal numbers\nNUMBER_OCT:/^0[0-7]+$/,// Floating point numbers\nNUMBER_FLT:/^([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/,// Booleans\nBOOL:/^(?:true|false)$/i,// Id numbers\nID:/^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,// Negative id numbers (enum values)\nNEGID:/^\\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/,// Whitespaces\nWHITESPACE:/\\s/,// All strings\nSTRING:/(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,// Double quoted strings\nSTRING_DQ:/(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,// Single quoted strings\nSTRING_SQ:/(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g};/**\r\n     * @alias ProtoBuf.DotProto\r\n     * @expose\r\n     */ProtoBuf.DotProto=function(ProtoBuf,Lang){\"use strict\";/**\r\n         * Utilities to parse .proto files.\r\n         * @exports ProtoBuf.DotProto\r\n         * @namespace\r\n         */var DotProto={};/**\r\n         * Constructs a new Tokenizer.\r\n         * @exports ProtoBuf.DotProto.Tokenizer\r\n         * @class prototype tokenizer\r\n         * @param {string} proto Proto to tokenize\r\n         * @constructor\r\n         */var Tokenizer=function Tokenizer(proto){/**\r\n             * Source to parse.\r\n             * @type {string}\r\n             * @expose\r\n             */this.source=proto+\"\";/**\r\n             * Current index.\r\n             * @type {number}\r\n             * @expose\r\n             */this.index=0;/**\r\n             * Current line.\r\n             * @type {number}\r\n             * @expose\r\n             */this.line=1;/**\r\n             * Token stack.\r\n             * @type {!Array.<string>}\r\n             * @expose\r\n             */this.stack=[];/**\r\n             * Opening character of the current string read, if any.\r\n             * @type {?string}\r\n             * @private\r\n             */this._stringOpen=null;};/**\r\n         * @alias ProtoBuf.DotProto.Tokenizer.prototype\r\n         * @inner\r\n         */var TokenizerPrototype=Tokenizer.prototype;/**\r\n         * Reads a string beginning at the current index.\r\n         * @return {string}\r\n         * @private\r\n         */TokenizerPrototype._readString=function(){var re=this._stringOpen==='\"'?Lang.STRING_DQ:Lang.STRING_SQ;re.lastIndex=this.index-1;// Include the open quote\nvar match=re.exec(this.source);if(!match)throw Error(\"unterminated string\");this.index=re.lastIndex;this.stack.push(this._stringOpen);this._stringOpen=null;return match[1];};/**\r\n         * Gets the next token and advances by one.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */TokenizerPrototype.next=function(){if(this.stack.length>0)return this.stack.shift();if(this.index>=this.source.length)return null;if(this._stringOpen!==null)return this._readString();var repeat,prev,next;do{repeat=false;// Strip white spaces\nwhile(Lang.WHITESPACE.test(next=this.source.charAt(this.index))){if(next==='\\n')++this.line;if(++this.index===this.source.length)return null;}// Strip comments\nif(this.source.charAt(this.index)==='/'){++this.index;if(this.source.charAt(this.index)==='/'){// Line\nwhile(this.source.charAt(++this.index)!=='\\n'){if(this.index==this.source.length)return null;}++this.index;++this.line;repeat=true;}else if((next=this.source.charAt(this.index))==='*'){/* Block */do{if(next==='\\n')++this.line;if(++this.index===this.source.length)return null;prev=next;next=this.source.charAt(this.index);}while(prev!=='*'||next!=='/');++this.index;repeat=true;}else return'/';}}while(repeat);if(this.index===this.source.length)return null;// Read the next token\nvar end=this.index;Lang.DELIM.lastIndex=0;var delim=Lang.DELIM.test(this.source.charAt(end++));if(!delim)while(end<this.source.length&&!Lang.DELIM.test(this.source.charAt(end))){++end;}var token=this.source.substring(this.index,this.index=end);if(token==='\"'||token===\"'\")this._stringOpen=token;return token;};/**\r\n         * Peeks for the next token.\r\n         * @return {?string} Token or `null` on EOF\r\n         * @expose\r\n         */TokenizerPrototype.peek=function(){if(this.stack.length===0){var token=this.next();if(token===null)return null;this.stack.push(token);}return this.stack[0];};/**\r\n         * Skips a specific token and throws if it differs.\r\n         * @param {string} expected Expected token\r\n         * @throws {Error} If the actual token differs\r\n         */TokenizerPrototype.skip=function(expected){var actual=this.next();if(actual!==expected)throw Error(\"illegal '\"+actual+\"', '\"+expected+\"' expected\");};/**\r\n         * Omits an optional token.\r\n         * @param {string} expected Expected optional token\r\n         * @returns {boolean} `true` if the token exists\r\n         */TokenizerPrototype.omit=function(expected){if(this.peek()===expected){this.next();return true;}return false;};/**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Tokenizer(index/length)\"\r\n         * @expose\r\n         */TokenizerPrototype.toString=function(){return\"Tokenizer (\"+this.index+\"/\"+this.source.length+\" at line \"+this.line+\")\";};/**\r\n         * @alias ProtoBuf.DotProto.Tokenizer\r\n         * @expose\r\n         */DotProto.Tokenizer=Tokenizer;/**\r\n         * Constructs a new Parser.\r\n         * @exports ProtoBuf.DotProto.Parser\r\n         * @class prototype parser\r\n         * @param {string} source Source\r\n         * @constructor\r\n         */var Parser=function Parser(source){/**\r\n             * Tokenizer.\r\n             * @type {!ProtoBuf.DotProto.Tokenizer}\r\n             * @expose\r\n             */this.tn=new Tokenizer(source);/**\r\n             * Whether parsing proto3 or not.\r\n             * @type {boolean}\r\n             */this.proto3=false;};/**\r\n         * @alias ProtoBuf.DotProto.Parser.prototype\r\n         * @inner\r\n         */var ParserPrototype=Parser.prototype;/**\r\n         * Parses the source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */ParserPrototype.parse=function(){var topLevel={\"name\":\"[ROOT]\",// temporary\n\"package\":null,\"messages\":[],\"enums\":[],\"imports\":[],\"options\":{},\"services\":[]// \"syntax\": undefined\n};var token,head=true,weak;try{while(token=this.tn.next()){switch(token){case'package':if(!head||topLevel[\"package\"]!==null)throw Error(\"unexpected 'package'\");token=this.tn.next();if(!Lang.TYPEREF.test(token))throw Error(\"illegal package name: \"+token);this.tn.skip(\";\");topLevel[\"package\"]=token;break;case'import':if(!head)throw Error(\"unexpected 'import'\");token=this.tn.peek();if(token===\"public\"||(weak=token===\"weak\"))// token ignored\nthis.tn.next();token=this._readString();this.tn.skip(\";\");if(!weak)// import ignored\ntopLevel[\"imports\"].push(token);break;case'syntax':if(!head)throw Error(\"unexpected 'syntax'\");this.tn.skip(\"=\");if((topLevel[\"syntax\"]=this._readString())===\"proto3\")this.proto3=true;this.tn.skip(\";\");break;case'message':this._parseMessage(topLevel,null);head=false;break;case'enum':this._parseEnum(topLevel);head=false;break;case'option':this._parseOption(topLevel);break;case'service':this._parseService(topLevel);break;case'extend':this._parseExtend(topLevel);break;default:throw Error(\"unexpected '\"+token+\"'\");}}}catch(e){e.message=\"Parse error at line \"+this.tn.line+\": \"+e.message;throw e;}delete topLevel[\"name\"];return topLevel;};/**\r\n         * Parses the specified source.\r\n         * @returns {!Object}\r\n         * @throws {Error} If the source cannot be parsed\r\n         * @expose\r\n         */Parser.parse=function(source){return new Parser(source).parse();};// ----- Conversion ------\n/**\r\n         * Converts a numerical string to an id.\r\n         * @param {string} value\r\n         * @param {boolean=} mayBeNegative\r\n         * @returns {number}\r\n         * @inner\r\n         */function mkId(value,mayBeNegative){var id=-1,sign=1;if(value.charAt(0)=='-'){sign=-1;value=value.substring(1);}if(Lang.NUMBER_DEC.test(value))id=parseInt(value);else if(Lang.NUMBER_HEX.test(value))id=parseInt(value.substring(2),16);else if(Lang.NUMBER_OCT.test(value))id=parseInt(value.substring(1),8);else throw Error(\"illegal id value: \"+(sign<0?'-':'')+value);id=sign*id|0;// Force to 32bit\nif(!mayBeNegative&&id<0)throw Error(\"illegal id value: \"+(sign<0?'-':'')+value);return id;}/**\r\n         * Converts a numerical string to a number.\r\n         * @param {string} val\r\n         * @returns {number}\r\n         * @inner\r\n         */function mkNumber(val){var sign=1;if(val.charAt(0)=='-'){sign=-1;val=val.substring(1);}if(Lang.NUMBER_DEC.test(val))return sign*parseInt(val,10);else if(Lang.NUMBER_HEX.test(val))return sign*parseInt(val.substring(2),16);else if(Lang.NUMBER_OCT.test(val))return sign*parseInt(val.substring(1),8);else if(val==='inf')return sign*Infinity;else if(val==='nan')return NaN;else if(Lang.NUMBER_FLT.test(val))return sign*parseFloat(val);throw Error(\"illegal number value: \"+(sign<0?'-':'')+val);}// ----- Reading ------\n/**\r\n         * Reads a string.\r\n         * @returns {string}\r\n         * @private\r\n         */ParserPrototype._readString=function(){var value=\"\",token,delim;do{delim=this.tn.next();if(delim!==\"'\"&&delim!=='\"')throw Error(\"illegal string delimiter: \"+delim);value+=this.tn.next();this.tn.skip(delim);token=this.tn.peek();}while(token==='\"'||token==='\"');// multi line?\nreturn value;};/**\r\n         * Reads a value.\r\n         * @param {boolean=} mayBeTypeRef\r\n         * @returns {number|boolean|string}\r\n         * @private\r\n         */ParserPrototype._readValue=function(mayBeTypeRef){var token=this.tn.peek(),value;if(token==='\"'||token===\"'\")return this._readString();this.tn.next();if(Lang.NUMBER.test(token))return mkNumber(token);if(Lang.BOOL.test(token))return token.toLowerCase()==='true';if(mayBeTypeRef&&Lang.TYPEREF.test(token))return token;throw Error(\"illegal value: \"+token);};// ----- Parsing constructs -----\n/**\r\n         * Parses a namespace option.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {boolean=} isList\r\n         * @private\r\n         */ParserPrototype._parseOption=function(parent,isList){var token=this.tn.next(),custom=false;if(token==='('){custom=true;token=this.tn.next();}if(!Lang.TYPEREF.test(token))// we can allow options of the form google.protobuf.* since they will just get ignored anyways\n// if (!/google\\.protobuf\\./.test(token)) // FIXME: Why should that not be a valid typeref?\nthrow Error(\"illegal option name: \"+token);var name=token;if(custom){// (my_method_option).foo, (my_method_option), some_method_option, (foo.my_option).bar\nthis.tn.skip(')');name='('+name+')';token=this.tn.peek();if(Lang.FQTYPEREF.test(token)){name+=token;this.tn.next();}}this.tn.skip('=');this._parseOptionValue(parent,name);if(!isList)this.tn.skip(\";\");};/**\r\n         * Sets an option on the specified options object.\r\n         * @param {!Object.<string,*>} options\r\n         * @param {string} name\r\n         * @param {string|number|boolean} value\r\n         * @inner\r\n         */function setOption(options,name,value){if(typeof options[name]==='undefined')options[name]=value;else{if(!Array.isArray(options[name]))options[name]=[options[name]];options[name].push(value);}}/**\r\n         * Parses an option value.\r\n         * @param {!Object} parent\r\n         * @param {string} name\r\n         * @private\r\n         */ParserPrototype._parseOptionValue=function(parent,name){var token=this.tn.peek();if(token!=='{'){// Plain value\nsetOption(parent[\"options\"],name,this._readValue(true));}else{// Aggregate options\nthis.tn.skip(\"{\");while((token=this.tn.next())!=='}'){if(!Lang.NAME.test(token))throw Error(\"illegal option name: \"+name+\".\"+token);if(this.tn.omit(\":\"))setOption(parent[\"options\"],name+\".\"+token,this._readValue(true));else this._parseOptionValue(parent,name+\".\"+token);}}};/**\r\n         * Parses a service definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @private\r\n         */ParserPrototype._parseService=function(parent){var token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal service name at line \"+this.tn.line+\": \"+token);var name=token;var svc={\"name\":name,\"rpc\":{},\"options\":{}};this.tn.skip(\"{\");while((token=this.tn.next())!=='}'){if(token===\"option\")this._parseOption(svc);else if(token==='rpc')this._parseServiceRPC(svc);else throw Error(\"illegal service token: \"+token);}this.tn.omit(\";\");parent[\"services\"].push(svc);};/**\r\n         * Parses a RPC service definition of the form ['rpc', name, (request), 'returns', (response)].\r\n         * @param {!Object} svc Service definition\r\n         * @private\r\n         */ParserPrototype._parseServiceRPC=function(svc){var type=\"rpc\",token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal rpc service method name: \"+token);var name=token;var method={\"request\":null,\"response\":null,\"request_stream\":false,\"response_stream\":false,\"options\":{}};this.tn.skip(\"(\");token=this.tn.next();if(token.toLowerCase()===\"stream\"){method[\"request_stream\"]=true;token=this.tn.next();}if(!Lang.TYPEREF.test(token))throw Error(\"illegal rpc service request type: \"+token);method[\"request\"]=token;this.tn.skip(\")\");token=this.tn.next();if(token.toLowerCase()!==\"returns\")throw Error(\"illegal rpc service request type delimiter: \"+token);this.tn.skip(\"(\");token=this.tn.next();if(token.toLowerCase()===\"stream\"){method[\"response_stream\"]=true;token=this.tn.next();}method[\"response\"]=token;this.tn.skip(\")\");token=this.tn.peek();if(token==='{'){this.tn.next();while((token=this.tn.next())!=='}'){if(token==='option')this._parseOption(method);else throw Error(\"illegal rpc service token: \"+token);}this.tn.omit(\";\");}else this.tn.skip(\";\");if(typeof svc[type]==='undefined')svc[type]={};svc[type][name]=method;};/**\r\n         * Parses a message definition.\r\n         * @param {!Object} parent Parent definition\r\n         * @param {!Object=} fld Field definition if this is a group\r\n         * @returns {!Object}\r\n         * @private\r\n         */ParserPrototype._parseMessage=function(parent,fld){var isGroup=!!fld,token=this.tn.next();var msg={\"name\":\"\",\"fields\":[],\"enums\":[],\"messages\":[],\"options\":{},\"services\":[],\"oneofs\":{}// \"extensions\": undefined\n};if(!Lang.NAME.test(token))throw Error(\"illegal \"+(isGroup?\"group\":\"message\")+\" name: \"+token);msg[\"name\"]=token;if(isGroup){this.tn.skip(\"=\");fld[\"id\"]=mkId(this.tn.next());msg[\"isGroup\"]=true;}token=this.tn.peek();if(token==='['&&fld)this._parseFieldOptions(fld);this.tn.skip(\"{\");while((token=this.tn.next())!=='}'){if(Lang.RULE.test(token))this._parseMessageField(msg,token);else if(token===\"oneof\")this._parseMessageOneOf(msg);else if(token===\"enum\")this._parseEnum(msg);else if(token===\"message\")this._parseMessage(msg);else if(token===\"option\")this._parseOption(msg);else if(token===\"service\")this._parseService(msg);else if(token===\"extensions\")msg[\"extensions\"]=this._parseExtensionRanges();else if(token===\"reserved\")this._parseIgnored();// TODO\nelse if(token===\"extend\")this._parseExtend(msg);else if(Lang.TYPEREF.test(token)){if(!this.proto3)throw Error(\"illegal field rule: \"+token);this._parseMessageField(msg,\"optional\",token);}else throw Error(\"illegal message token: \"+token);}this.tn.omit(\";\");parent[\"messages\"].push(msg);return msg;};/**\r\n         * Parses an ignored statement.\r\n         * @private\r\n         */ParserPrototype._parseIgnored=function(){while(this.tn.peek()!==';'){this.tn.next();}this.tn.skip(\";\");};/**\r\n         * Parses a message field.\r\n         * @param {!Object} msg Message definition\r\n         * @param {string} rule Field rule\r\n         * @param {string=} type Field type if already known (never known for maps)\r\n         * @returns {!Object} Field descriptor\r\n         * @private\r\n         */ParserPrototype._parseMessageField=function(msg,rule,type){if(!Lang.RULE.test(rule))throw Error(\"illegal message field rule: \"+rule);var fld={\"rule\":rule,\"type\":\"\",\"name\":\"\",\"options\":{},\"id\":0};var token;if(rule===\"map\"){if(type)throw Error(\"illegal type: \"+type);this.tn.skip('<');token=this.tn.next();if(!Lang.TYPE.test(token)&&!Lang.TYPEREF.test(token))throw Error(\"illegal message field type: \"+token);fld[\"keytype\"]=token;this.tn.skip(',');token=this.tn.next();if(!Lang.TYPE.test(token)&&!Lang.TYPEREF.test(token))throw Error(\"illegal message field: \"+token);fld[\"type\"]=token;this.tn.skip('>');token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal message field name: \"+token);fld[\"name\"]=token;this.tn.skip(\"=\");fld[\"id\"]=mkId(this.tn.next());token=this.tn.peek();if(token==='[')this._parseFieldOptions(fld);this.tn.skip(\";\");}else{type=typeof type!=='undefined'?type:this.tn.next();if(type===\"group\"){// \"A [legacy] group simply combines a nested message type and a field into a single declaration. In your\n// code, you can treat this message just as if it had a Result type field called result (the latter name is\n// converted to lower-case so that it does not conflict with the former).\"\nvar grp=this._parseMessage(msg,fld);if(!/^[A-Z]/.test(grp[\"name\"]))throw Error('illegal group name: '+grp[\"name\"]);fld[\"type\"]=grp[\"name\"];fld[\"name\"]=grp[\"name\"].toLowerCase();this.tn.omit(\";\");}else{if(!Lang.TYPE.test(type)&&!Lang.TYPEREF.test(type))throw Error(\"illegal message field type: \"+type);fld[\"type\"]=type;token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal message field name: \"+token);fld[\"name\"]=token;this.tn.skip(\"=\");fld[\"id\"]=mkId(this.tn.next());token=this.tn.peek();if(token===\"[\")this._parseFieldOptions(fld);this.tn.skip(\";\");}}msg[\"fields\"].push(fld);return fld;};/**\r\n         * Parses a message oneof.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */ParserPrototype._parseMessageOneOf=function(msg){var token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal oneof name: \"+token);var name=token,fld;var fields=[];this.tn.skip(\"{\");while((token=this.tn.next())!==\"}\"){fld=this._parseMessageField(msg,\"optional\",token);fld[\"oneof\"]=name;fields.push(fld[\"id\"]);}this.tn.omit(\";\");msg[\"oneofs\"][name]=fields;};/**\r\n         * Parses a set of field option definitions.\r\n         * @param {!Object} fld Field definition\r\n         * @private\r\n         */ParserPrototype._parseFieldOptions=function(fld){this.tn.skip(\"[\");var token,first=true;while((token=this.tn.peek())!==']'){if(!first)this.tn.skip(\",\");this._parseOption(fld,true);first=false;}this.tn.next();};/**\r\n         * Parses an enum.\r\n         * @param {!Object} msg Message definition\r\n         * @private\r\n         */ParserPrototype._parseEnum=function(msg){var enm={\"name\":\"\",\"values\":[],\"options\":{}};var token=this.tn.next();if(!Lang.NAME.test(token))throw Error(\"illegal name: \"+token);enm[\"name\"]=token;this.tn.skip(\"{\");while((token=this.tn.next())!=='}'){if(token===\"option\")this._parseOption(enm);else{if(!Lang.NAME.test(token))throw Error(\"illegal name: \"+token);this.tn.skip(\"=\");var val={\"name\":token,\"id\":mkId(this.tn.next(),true)};token=this.tn.peek();if(token===\"[\")this._parseFieldOptions({\"options\":{}});this.tn.skip(\";\");enm[\"values\"].push(val);}}this.tn.omit(\";\");msg[\"enums\"].push(enm);};/**\r\n         * Parses extension / reserved ranges.\r\n         * @returns {!Array.<!Array.<number>>}\r\n         * @private\r\n         */ParserPrototype._parseExtensionRanges=function(){var ranges=[];var token,range,value;do{range=[];while(true){token=this.tn.next();switch(token){case\"min\":value=ProtoBuf.ID_MIN;break;case\"max\":value=ProtoBuf.ID_MAX;break;default:value=mkNumber(token);break;}range.push(value);if(range.length===2)break;if(this.tn.peek()!==\"to\"){range.push(value);break;}this.tn.next();}ranges.push(range);}while(this.tn.omit(\",\"));this.tn.skip(\";\");return ranges;};/**\r\n         * Parses an extend block.\r\n         * @param {!Object} parent Parent object\r\n         * @private\r\n         */ParserPrototype._parseExtend=function(parent){var token=this.tn.next();if(!Lang.TYPEREF.test(token))throw Error(\"illegal extend reference: \"+token);var ext={\"ref\":token,\"fields\":[]};this.tn.skip(\"{\");while((token=this.tn.next())!=='}'){if(Lang.RULE.test(token))this._parseMessageField(ext,token);else if(Lang.TYPEREF.test(token)){if(!this.proto3)throw Error(\"illegal field rule: \"+token);this._parseMessageField(ext,\"optional\",token);}else throw Error(\"illegal extend token: \"+token);}this.tn.omit(\";\");parent[\"messages\"].push(ext);return ext;};// ----- General -----\n/**\r\n         * Returns a string representation of this parser.\r\n         * @returns {string}\r\n         */ParserPrototype.toString=function(){return\"Parser at line \"+this.tn.line;};/**\r\n         * @alias ProtoBuf.DotProto.Parser\r\n         * @expose\r\n         */DotProto.Parser=Parser;return DotProto;}(ProtoBuf,ProtoBuf.Lang);/**\r\n     * @alias ProtoBuf.Reflect\r\n     * @expose\r\n     */ProtoBuf.Reflect=function(ProtoBuf){\"use strict\";/**\r\n         * Reflection types.\r\n         * @exports ProtoBuf.Reflect\r\n         * @namespace\r\n         */var Reflect={};/**\r\n         * Constructs a Reflect base class.\r\n         * @exports ProtoBuf.Reflect.T\r\n         * @constructor\r\n         * @abstract\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         */var T=function T(builder,parent,name){/**\r\n             * Builder reference.\r\n             * @type {!ProtoBuf.Builder}\r\n             * @expose\r\n             */this.builder=builder;/**\r\n             * Parent object.\r\n             * @type {?ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */this.parent=parent;/**\r\n             * Object name in namespace.\r\n             * @type {string}\r\n             * @expose\r\n             */this.name=name;/**\r\n             * Fully qualified class name\r\n             * @type {string}\r\n             * @expose\r\n             */this.className;};/**\r\n         * @alias ProtoBuf.Reflect.T.prototype\r\n         * @inner\r\n         */var TPrototype=T.prototype;/**\r\n         * Returns the fully qualified name of this object.\r\n         * @returns {string} Fully qualified name as of \".PATH.TO.THIS\"\r\n         * @expose\r\n         */TPrototype.fqn=function(){var name=this.name,ptr=this;do{ptr=ptr.parent;if(ptr==null)break;name=ptr.name+\".\"+name;}while(true);return name;};/**\r\n         * Returns a string representation of this Reflect object (its fully qualified name).\r\n         * @param {boolean=} includeClass Set to true to include the class name. Defaults to false.\r\n         * @return String representation\r\n         * @expose\r\n         */TPrototype.toString=function(includeClass){return(includeClass?this.className+\" \":\"\")+this.fqn();};/**\r\n         * Builds this type.\r\n         * @throws {Error} If this type cannot be built directly\r\n         * @expose\r\n         */TPrototype.build=function(){throw Error(this.toString(true)+\" cannot be built directly\");};/**\r\n         * @alias ProtoBuf.Reflect.T\r\n         * @expose\r\n         */Reflect.T=T;/**\r\n         * Constructs a new Namespace.\r\n         * @exports ProtoBuf.Reflect.Namespace\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {?ProtoBuf.Reflect.Namespace} parent Namespace parent\r\n         * @param {string} name Namespace name\r\n         * @param {Object.<string,*>=} options Namespace options\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */var Namespace=function Namespace(builder,parent,name,options,syntax){T.call(this,builder,parent,name);/**\r\n             * @override\r\n             */this.className=\"Namespace\";/**\r\n             * Children inside the namespace.\r\n             * @type {!Array.<ProtoBuf.Reflect.T>}\r\n             */this.children=[];/**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             */this.options=options||{};/**\r\n             * Syntax level (e.g., proto2 or proto3).\r\n             * @type {!string}\r\n             */this.syntax=syntax||\"proto2\";};/**\r\n         * @alias ProtoBuf.Reflect.Namespace.prototype\r\n         * @inner\r\n         */var NamespacePrototype=Namespace.prototype=Object.create(T.prototype);/**\r\n         * Returns an array of the namespace's children.\r\n         * @param {ProtoBuf.Reflect.T=} type Filter type (returns instances of this type only). Defaults to null (all children).\r\n         * @return {Array.<ProtoBuf.Reflect.T>}\r\n         * @expose\r\n         */NamespacePrototype.getChildren=function(type){type=type||null;if(type==null)return this.children.slice();var children=[];for(var i=0,k=this.children.length;i<k;++i){if(this.children[i]instanceof type)children.push(this.children[i]);}return children;};/**\r\n         * Adds a child to the namespace.\r\n         * @param {ProtoBuf.Reflect.T} child Child\r\n         * @throws {Error} If the child cannot be added (duplicate)\r\n         * @expose\r\n         */NamespacePrototype.addChild=function(child){var other;if(other=this.getChild(child.name)){// Try to revert camelcase transformation on collision\nif(other instanceof Message.Field&&other.name!==other.originalName&&this.getChild(other.originalName)===null)other.name=other.originalName;// Revert previous first (effectively keeps both originals)\nelse if(child instanceof Message.Field&&child.name!==child.originalName&&this.getChild(child.originalName)===null)child.name=child.originalName;else throw Error(\"Duplicate name in namespace \"+this.toString(true)+\": \"+child.name);}this.children.push(child);};/**\r\n         * Gets a child by its name or id.\r\n         * @param {string|number} nameOrId Child name or id\r\n         * @return {?ProtoBuf.Reflect.T} The child or null if not found\r\n         * @expose\r\n         */NamespacePrototype.getChild=function(nameOrId){var key=typeof nameOrId==='number'?'id':'name';for(var i=0,k=this.children.length;i<k;++i){if(this.children[i][key]===nameOrId)return this.children[i];}return null;};/**\r\n         * Resolves a reflect object inside of this namespace.\r\n         * @param {string|!Array.<string>} qn Qualified name to resolve\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types, defaults to `false`\r\n         * @return {?ProtoBuf.Reflect.Namespace} The resolved type or null if not found\r\n         * @expose\r\n         */NamespacePrototype.resolve=function(qn,excludeNonNamespace){var part=typeof qn==='string'?qn.split(\".\"):qn,ptr=this,i=0;if(part[i]===\"\"){// Fully qualified name, e.g. \".My.Message'\nwhile(ptr.parent!==null){ptr=ptr.parent;}i++;}var child;do{do{if(!(ptr instanceof Reflect.Namespace)){ptr=null;break;}child=ptr.getChild(part[i]);if(!child||!(child instanceof Reflect.T)||excludeNonNamespace&&!(child instanceof Reflect.Namespace)){ptr=null;break;}ptr=child;i++;}while(i<part.length);if(ptr!=null)break;// Found\n// Else search the parent\nif(this.parent!==null)return this.parent.resolve(qn,excludeNonNamespace);}while(ptr!=null);return ptr;};/**\r\n         * Determines the shortest qualified name of the specified type, if any, relative to this namespace.\r\n         * @param {!ProtoBuf.Reflect.T} t Reflection type\r\n         * @returns {string} The shortest qualified name or, if there is none, the fqn\r\n         * @expose\r\n         */NamespacePrototype.qn=function(t){var part=[],ptr=t;do{part.unshift(ptr.name);ptr=ptr.parent;}while(ptr!==null);for(var len=1;len<=part.length;len++){var qn=part.slice(part.length-len);if(t===this.resolve(qn,t instanceof Reflect.Namespace))return qn.join(\".\");}return t.fqn();};/**\r\n         * Builds the namespace and returns the runtime counterpart.\r\n         * @return {Object.<string,Function|Object>} Runtime namespace\r\n         * @expose\r\n         */NamespacePrototype.build=function(){/** @dict */var ns={};var children=this.children;for(var i=0,k=children.length,child;i<k;++i){child=children[i];if(child instanceof Namespace)ns[child.name]=child.build();}if(Object.defineProperty)Object.defineProperty(ns,\"$options\",{\"value\":this.buildOpt()});return ns;};/**\r\n         * Builds the namespace's '$options' property.\r\n         * @return {Object.<string,*>}\r\n         */NamespacePrototype.buildOpt=function(){var opt={},keys=Object.keys(this.options);for(var i=0,k=keys.length;i<k;++i){var key=keys[i],val=this.options[keys[i]];// TODO: Options are not resolved, yet.\n// if (val instanceof Namespace) {\n//     opt[key] = val.build();\n// } else {\nopt[key]=val;// }\n}return opt;};/**\r\n         * Gets the value assigned to the option with the specified name.\r\n         * @param {string=} name Returns the option value if specified, otherwise all options are returned.\r\n         * @return {*|Object.<string,*>}null} Option value or NULL if there is no such option\r\n         */NamespacePrototype.getOption=function(name){if(typeof name==='undefined')return this.options;return typeof this.options[name]!=='undefined'?this.options[name]:null;};/**\r\n         * @alias ProtoBuf.Reflect.Namespace\r\n         * @expose\r\n         */Reflect.Namespace=Namespace;/**\r\n         * Constructs a new Element implementation that checks and converts values for a\r\n         * particular field type, as appropriate.\r\n         *\r\n         * An Element represents a single value: either the value of a singular field,\r\n         * or a value contained in one entry of a repeated field or map field. This\r\n         * class does not implement these higher-level concepts; it only encapsulates\r\n         * the low-level typechecking and conversion.\r\n         *\r\n         * @exports ProtoBuf.Reflect.Element\r\n         * @param {{name: string, wireType: number}} type Resolved data type\r\n         * @param {ProtoBuf.Reflect.T|null} resolvedType Resolved type, if relevant\r\n         * (e.g. submessage field).\r\n         * @param {boolean} isMapKey Is this element a Map key? The value will be\r\n         * converted to string form if so.\r\n         * @param {string} syntax Syntax level of defining message type, e.g.,\r\n         * proto2 or proto3.\r\n         * @constructor\r\n         */var Element=function Element(type,resolvedType,isMapKey,syntax){/**\r\n             * Element type, as a string (e.g., int32).\r\n             * @type {{name: string, wireType: number}}\r\n             */this.type=type;/**\r\n             * Element type reference to submessage or enum definition, if needed.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             */this.resolvedType=resolvedType;/**\r\n             * Element is a map key.\r\n             * @type {boolean}\r\n             */this.isMapKey=isMapKey;/**\r\n             * Syntax level of defining message type, e.g., proto2 or proto3.\r\n             * @type {string}\r\n             */this.syntax=syntax;if(isMapKey&&ProtoBuf.MAP_KEY_TYPES.indexOf(type)<0)throw Error(\"Invalid map key type: \"+type.name);};var ElementPrototype=Element.prototype;/**\r\n         * Obtains a (new) default value for the specified type.\r\n         * @param type {string|{name: string, wireType: number}} Field type\r\n         * @returns {*} Default value\r\n         * @inner\r\n         */function mkDefault(type){if(typeof type==='string')type=ProtoBuf.TYPES[type];if(typeof type.defaultValue==='undefined')throw Error(\"default value for type \"+type.name+\" is not supported\");if(type==ProtoBuf.TYPES[\"bytes\"])return new ByteBuffer(0);return type.defaultValue;}/**\r\n         * Returns the default value for this field in proto3.\r\n         * @function\r\n         * @param type {string|{name: string, wireType: number}} the field type\r\n         * @returns {*} Default value\r\n         */Element.defaultFieldValue=mkDefault;/**\r\n         * Makes a Long from a value.\r\n         * @param {{low: number, high: number, unsigned: boolean}|string|number} value Value\r\n         * @param {boolean=} unsigned Whether unsigned or not, defaults to reuse it from Long-like objects or to signed for\r\n         *  strings and numbers\r\n         * @returns {!Long}\r\n         * @throws {Error} If the value cannot be converted to a Long\r\n         * @inner\r\n         */function mkLong(value,unsigned){if(value&&typeof value.low==='number'&&typeof value.high==='number'&&typeof value.unsigned==='boolean'&&value.low===value.low&&value.high===value.high)return new ProtoBuf.Long(value.low,value.high,typeof unsigned==='undefined'?value.unsigned:unsigned);if(typeof value==='string')return ProtoBuf.Long.fromString(value,unsigned||false,10);if(typeof value==='number')return ProtoBuf.Long.fromNumber(value,unsigned||false);throw Error(\"not convertible to Long\");}/**\r\n         * Checks if the given value can be set for an element of this type (singular\r\n         * field or one element of a repeated field or map).\r\n         * @param {*} value Value to check\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be verified for this element slot\r\n         * @expose\r\n         */ElementPrototype.verifyValue=function(value){var self=this;function fail(val,msg){throw Error(\"Illegal value for \"+self.toString(true)+\" of type \"+self.type.name+\": \"+val+\" (\"+msg+\")\");}switch(this.type){// Signed 32bit\ncase ProtoBuf.TYPES[\"int32\"]:case ProtoBuf.TYPES[\"sint32\"]:case ProtoBuf.TYPES[\"sfixed32\"]:// Account for !NaN: value === value\nif(typeof value!=='number'||value===value&&value%1!==0)fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not an integer\");return value>4294967295?value|0:value;// Unsigned 32bit\ncase ProtoBuf.TYPES[\"uint32\"]:case ProtoBuf.TYPES[\"fixed32\"]:if(typeof value!=='number'||value===value&&value%1!==0)fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not an integer\");return value<0?value>>>0:value;// Signed 64bit\ncase ProtoBuf.TYPES[\"int64\"]:case ProtoBuf.TYPES[\"sint64\"]:case ProtoBuf.TYPES[\"sfixed64\"]:{if(ProtoBuf.Long)try{return mkLong(value,false);}catch(e){fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),e.message);}else fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"requires Long.js\");}// Unsigned 64bit\ncase ProtoBuf.TYPES[\"uint64\"]:case ProtoBuf.TYPES[\"fixed64\"]:{if(ProtoBuf.Long)try{return mkLong(value,true);}catch(e){fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),e.message);}else fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"requires Long.js\");}// Bool\ncase ProtoBuf.TYPES[\"bool\"]:if(typeof value!=='boolean')fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not a boolean\");return value;// Float\ncase ProtoBuf.TYPES[\"float\"]:case ProtoBuf.TYPES[\"double\"]:if(typeof value!=='number')fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not a number\");return value;// Length-delimited string\ncase ProtoBuf.TYPES[\"string\"]:if(typeof value!=='string'&&!(value&&value instanceof String))fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not a string\");return\"\"+value;// Convert String object to string\n// Length-delimited bytes\ncase ProtoBuf.TYPES[\"bytes\"]:if(ByteBuffer.isByteBuffer(value))return value;return ByteBuffer.wrap(value,\"base64\");// Constant enum value\ncase ProtoBuf.TYPES[\"enum\"]:{var values=this.resolvedType.getChildren(ProtoBuf.Reflect.Enum.Value);for(i=0;i<values.length;i++){if(values[i].name==value)return values[i].id;else if(values[i].id==value)return values[i].id;}if(this.syntax==='proto3'){// proto3: just make sure it's an integer.\nif(typeof value!=='number'||value===value&&value%1!==0)fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not an integer\");if(value>4294967295||value<0)fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"not in range for uint32\");return value;}else{// proto2 requires enum values to be valid.\nfail(value,\"not a valid enum value\");}}// Embedded message\ncase ProtoBuf.TYPES[\"group\"]:case ProtoBuf.TYPES[\"message\"]:{if(!value||(typeof value===\"undefined\"?\"undefined\":_typeof(value))!=='object')fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"object expected\");if(value instanceof this.resolvedType.clazz)return value;if(value instanceof ProtoBuf.Builder.Message){// Mismatched type: Convert to object (see: https://github.com/dcodeIO/ProtoBuf.js/issues/180)\nvar obj={};for(var i in value){if(value.hasOwnProperty(i))obj[i]=value[i];}value=obj;}// Else let's try to construct one from a key-value object\nreturn new this.resolvedType.clazz(value);// May throw for a hundred of reasons\n}}// We should never end here\nthrow Error(\"[INTERNAL] Illegal value for \"+this.toString(true)+\": \"+value+\" (undefined type \"+this.type+\")\");};/**\r\n         * Calculates the byte length of an element on the wire.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If the value cannot be calculated\r\n         * @expose\r\n         */ElementPrototype.calculateLength=function(id,value){if(value===null)return 0;// Nothing to encode\n// Tag has already been written\nvar n;switch(this.type){case ProtoBuf.TYPES[\"int32\"]:return value<0?ByteBuffer.calculateVarint64(value):ByteBuffer.calculateVarint32(value);case ProtoBuf.TYPES[\"uint32\"]:return ByteBuffer.calculateVarint32(value);case ProtoBuf.TYPES[\"sint32\"]:return ByteBuffer.calculateVarint32(ByteBuffer.zigZagEncode32(value));case ProtoBuf.TYPES[\"fixed32\"]:case ProtoBuf.TYPES[\"sfixed32\"]:case ProtoBuf.TYPES[\"float\"]:return 4;case ProtoBuf.TYPES[\"int64\"]:case ProtoBuf.TYPES[\"uint64\"]:return ByteBuffer.calculateVarint64(value);case ProtoBuf.TYPES[\"sint64\"]:return ByteBuffer.calculateVarint64(ByteBuffer.zigZagEncode64(value));case ProtoBuf.TYPES[\"fixed64\"]:case ProtoBuf.TYPES[\"sfixed64\"]:return 8;case ProtoBuf.TYPES[\"bool\"]:return 1;case ProtoBuf.TYPES[\"enum\"]:return ByteBuffer.calculateVarint32(value);case ProtoBuf.TYPES[\"double\"]:return 8;case ProtoBuf.TYPES[\"string\"]:n=ByteBuffer.calculateUTF8Bytes(value);return ByteBuffer.calculateVarint32(n)+n;case ProtoBuf.TYPES[\"bytes\"]:if(value.remaining()<0)throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");return ByteBuffer.calculateVarint32(value.remaining())+value.remaining();case ProtoBuf.TYPES[\"message\"]:n=this.resolvedType.calculate(value);return ByteBuffer.calculateVarint32(n)+n;case ProtoBuf.TYPES[\"group\"]:n=this.resolvedType.calculate(value);return n+ByteBuffer.calculateVarint32(id<<3|ProtoBuf.WIRE_TYPES.ENDGROUP);}// We should never end here\nthrow Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");};/**\r\n         * Encodes a value to the specified buffer. Does not encode the key.\r\n         * @param {number} id Field number\r\n         * @param {*} value Field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the value cannot be encoded\r\n         * @expose\r\n         */ElementPrototype.encodeValue=function(id,value,buffer){if(value===null)return buffer;// Nothing to encode\n// Tag has already been written\nswitch(this.type){// 32bit signed varint\ncase ProtoBuf.TYPES[\"int32\"]:// \"If you use int32 or int64 as the type for a negative number, the resulting varint is always ten bytes\n// long – it is, effectively, treated like a very large unsigned integer.\" (see #122)\nif(value<0)buffer.writeVarint64(value);else buffer.writeVarint32(value);break;// 32bit unsigned varint\ncase ProtoBuf.TYPES[\"uint32\"]:buffer.writeVarint32(value);break;// 32bit varint zig-zag\ncase ProtoBuf.TYPES[\"sint32\"]:buffer.writeVarint32ZigZag(value);break;// Fixed unsigned 32bit\ncase ProtoBuf.TYPES[\"fixed32\"]:buffer.writeUint32(value);break;// Fixed signed 32bit\ncase ProtoBuf.TYPES[\"sfixed32\"]:buffer.writeInt32(value);break;// 64bit varint as-is\ncase ProtoBuf.TYPES[\"int64\"]:case ProtoBuf.TYPES[\"uint64\"]:buffer.writeVarint64(value);// throws\nbreak;// 64bit varint zig-zag\ncase ProtoBuf.TYPES[\"sint64\"]:buffer.writeVarint64ZigZag(value);// throws\nbreak;// Fixed unsigned 64bit\ncase ProtoBuf.TYPES[\"fixed64\"]:buffer.writeUint64(value);// throws\nbreak;// Fixed signed 64bit\ncase ProtoBuf.TYPES[\"sfixed64\"]:buffer.writeInt64(value);// throws\nbreak;// Bool\ncase ProtoBuf.TYPES[\"bool\"]:if(typeof value==='string')buffer.writeVarint32(value.toLowerCase()==='false'?0:!!value);else buffer.writeVarint32(value?1:0);break;// Constant enum value\ncase ProtoBuf.TYPES[\"enum\"]:buffer.writeVarint32(value);break;// 32bit float\ncase ProtoBuf.TYPES[\"float\"]:buffer.writeFloat32(value);break;// 64bit float\ncase ProtoBuf.TYPES[\"double\"]:buffer.writeFloat64(value);break;// Length-delimited string\ncase ProtoBuf.TYPES[\"string\"]:buffer.writeVString(value);break;// Length-delimited bytes\ncase ProtoBuf.TYPES[\"bytes\"]:if(value.remaining()<0)throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value.remaining()+\" bytes remaining\");var prevOffset=value.offset;buffer.writeVarint32(value.remaining());buffer.append(value);value.offset=prevOffset;break;// Embedded message\ncase ProtoBuf.TYPES[\"message\"]:var bb=new ByteBuffer().LE();this.resolvedType.encode(value,bb);buffer.writeVarint32(bb.offset);buffer.append(bb.flip());break;// Legacy group\ncase ProtoBuf.TYPES[\"group\"]:this.resolvedType.encode(value,buffer);buffer.writeVarint32(id<<3|ProtoBuf.WIRE_TYPES.ENDGROUP);break;default:// We should never end here\nthrow Error(\"[INTERNAL] Illegal value to encode in \"+this.toString(true)+\": \"+value+\" (unknown type)\");}return buffer;};/**\r\n         * Decode one element value from the specified buffer.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number} wireType The field wire type\r\n         * @param {number} id The field number\r\n         * @return {*} Decoded value\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */ElementPrototype.decode=function(buffer,wireType,id){if(wireType!=this.type.wireType)throw Error(\"Unexpected wire type for element\");var value,nBytes;switch(this.type){// 32bit signed varint\ncase ProtoBuf.TYPES[\"int32\"]:return buffer.readVarint32()|0;// 32bit unsigned varint\ncase ProtoBuf.TYPES[\"uint32\"]:return buffer.readVarint32()>>>0;// 32bit signed varint zig-zag\ncase ProtoBuf.TYPES[\"sint32\"]:return buffer.readVarint32ZigZag()|0;// Fixed 32bit unsigned\ncase ProtoBuf.TYPES[\"fixed32\"]:return buffer.readUint32()>>>0;case ProtoBuf.TYPES[\"sfixed32\"]:return buffer.readInt32()|0;// 64bit signed varint\ncase ProtoBuf.TYPES[\"int64\"]:return buffer.readVarint64();// 64bit unsigned varint\ncase ProtoBuf.TYPES[\"uint64\"]:return buffer.readVarint64().toUnsigned();// 64bit signed varint zig-zag\ncase ProtoBuf.TYPES[\"sint64\"]:return buffer.readVarint64ZigZag();// Fixed 64bit unsigned\ncase ProtoBuf.TYPES[\"fixed64\"]:return buffer.readUint64();// Fixed 64bit signed\ncase ProtoBuf.TYPES[\"sfixed64\"]:return buffer.readInt64();// Bool varint\ncase ProtoBuf.TYPES[\"bool\"]:return!!buffer.readVarint32();// Constant enum value (varint)\ncase ProtoBuf.TYPES[\"enum\"]:// The following Builder.Message#set will already throw\nreturn buffer.readVarint32();// 32bit float\ncase ProtoBuf.TYPES[\"float\"]:return buffer.readFloat();// 64bit float\ncase ProtoBuf.TYPES[\"double\"]:return buffer.readDouble();// Length-delimited string\ncase ProtoBuf.TYPES[\"string\"]:return buffer.readVString();// Length-delimited bytes\ncase ProtoBuf.TYPES[\"bytes\"]:{nBytes=buffer.readVarint32();if(buffer.remaining()<nBytes)throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());value=buffer.clone();// Offset already set\nvalue.limit=value.offset+nBytes;buffer.offset+=nBytes;return value;}// Length-delimited embedded message\ncase ProtoBuf.TYPES[\"message\"]:{nBytes=buffer.readVarint32();return this.resolvedType.decode(buffer,nBytes);}// Legacy group\ncase ProtoBuf.TYPES[\"group\"]:return this.resolvedType.decode(buffer,-1,id);}// We should never end here\nthrow Error(\"[INTERNAL] Illegal decode type\");};/**\r\n         * Converts a value from a string to the canonical element type.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {string} str The string value\r\n         * @returns {*} The value\r\n         */ElementPrototype.valueFromString=function(str){if(!this.isMapKey){throw Error(\"valueFromString() called on non-map-key element\");}switch(this.type){case ProtoBuf.TYPES[\"int32\"]:case ProtoBuf.TYPES[\"sint32\"]:case ProtoBuf.TYPES[\"sfixed32\"]:case ProtoBuf.TYPES[\"uint32\"]:case ProtoBuf.TYPES[\"fixed32\"]:return this.verifyValue(parseInt(str));case ProtoBuf.TYPES[\"int64\"]:case ProtoBuf.TYPES[\"sint64\"]:case ProtoBuf.TYPES[\"sfixed64\"]:case ProtoBuf.TYPES[\"uint64\"]:case ProtoBuf.TYPES[\"fixed64\"]:// Long-based fields support conversions from string already.\nreturn this.verifyValue(str);case ProtoBuf.TYPES[\"bool\"]:return str===\"true\";case ProtoBuf.TYPES[\"string\"]:return this.verifyValue(str);case ProtoBuf.TYPES[\"bytes\"]:return ByteBuffer.fromBinary(str);}};/**\r\n         * Converts a value from the canonical element type to a string.\r\n         *\r\n         * It should be the case that `valueFromString(valueToString(val))` returns\r\n         * a value equivalent to `verifyValue(val)` for every legal value of `val`\r\n         * according to this element type.\r\n         *\r\n         * This may be used when the element must be stored or used as a string,\r\n         * e.g., as a map key on an Object.\r\n         *\r\n         * Legal only when isMapKey is true.\r\n         *\r\n         * @param {*} val The value\r\n         * @returns {string} The string form of the value.\r\n         */ElementPrototype.valueToString=function(value){if(!this.isMapKey){throw Error(\"valueToString() called on non-map-key element\");}if(this.type===ProtoBuf.TYPES[\"bytes\"]){return value.toString(\"binary\");}else{return value.toString();}};/**\r\n         * @alias ProtoBuf.Reflect.Element\r\n         * @expose\r\n         */Reflect.Element=Element;/**\r\n         * Constructs a new Message.\r\n         * @exports ProtoBuf.Reflect.Message\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} parent Parent message or namespace\r\n         * @param {string} name Message name\r\n         * @param {Object.<string,*>=} options Message options\r\n         * @param {boolean=} isGroup `true` if this is a legacy group\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */var Message=function Message(builder,parent,name,options,isGroup,syntax){Namespace.call(this,builder,parent,name,options,syntax);/**\r\n             * @override\r\n             */this.className=\"Message\";/**\r\n             * Extensions range.\r\n             * @type {!Array.<number>|undefined}\r\n             * @expose\r\n             */this.extensions=undefined;/**\r\n             * Runtime message class.\r\n             * @type {?function(new:ProtoBuf.Builder.Message)}\r\n             * @expose\r\n             */this.clazz=null;/**\r\n             * Whether this is a legacy group or not.\r\n             * @type {boolean}\r\n             * @expose\r\n             */this.isGroup=!!isGroup;// The following cached collections are used to efficiently iterate over or look up fields when decoding.\n/**\r\n             * Cached fields.\r\n             * @type {?Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */this._fields=null;/**\r\n             * Cached fields by id.\r\n             * @type {?Object.<number,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */this._fieldsById=null;/**\r\n             * Cached fields by name.\r\n             * @type {?Object.<string,!ProtoBuf.Reflect.Message.Field>}\r\n             * @private\r\n             */this._fieldsByName=null;};/**\r\n         * @alias ProtoBuf.Reflect.Message.prototype\r\n         * @inner\r\n         */var MessagePrototype=Message.prototype=Object.create(Namespace.prototype);/**\r\n         * Builds the message and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Message\r\n         * @param {boolean=} rebuild Whether to rebuild or not, defaults to false\r\n         * @return {ProtoBuf.Reflect.Message} Message class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */MessagePrototype.build=function(rebuild){if(this.clazz&&!rebuild)return this.clazz;// Create the runtime Message class in its own scope\nvar clazz=function(ProtoBuf,T){var fields=T.getChildren(ProtoBuf.Reflect.Message.Field),oneofs=T.getChildren(ProtoBuf.Reflect.Message.OneOf);/**\r\n                 * Constructs a new runtime Message.\r\n                 * @name ProtoBuf.Builder.Message\r\n                 * @class Barebone of all runtime messages.\r\n                 * @param {!Object.<string,*>|string} values Preset values\r\n                 * @param {...string} var_args\r\n                 * @constructor\r\n                 * @throws {Error} If the message cannot be created\r\n                 */var Message=function Message(values,var_args){ProtoBuf.Builder.Message.call(this);// Create virtual oneof properties\nfor(var i=0,k=oneofs.length;i<k;++i){this[oneofs[i].name]=null;}// Create fields and set default values\nfor(i=0,k=fields.length;i<k;++i){var field=fields[i];this[field.name]=field.repeated?[]:field.map?new ProtoBuf.Map(field):null;if((field.required||T.syntax==='proto3')&&field.defaultValue!==null)this[field.name]=field.defaultValue;}if(arguments.length>0){var value;// Set field values from a values object\nif(arguments.length===1&&values!==null&&(typeof values===\"undefined\"?\"undefined\":_typeof(values))==='object'&&(/* not _another_ Message */typeof values.encode!=='function'||values instanceof Message)&&/* not a repeated field */!Array.isArray(values)&&/* not a Map */!(values instanceof ProtoBuf.Map)&&/* not a ByteBuffer */!ByteBuffer.isByteBuffer(values)&&/* not an ArrayBuffer */!(values instanceof ArrayBuffer)&&/* not a Long */!(ProtoBuf.Long&&values instanceof ProtoBuf.Long)){this.$set(values);}else// Set field values from arguments, in declaration order\nfor(i=0,k=arguments.length;i<k;++i){if(typeof(value=arguments[i])!=='undefined')this.$set(fields[i].name,value);}// May throw\n}};/**\r\n                 * @alias ProtoBuf.Builder.Message.prototype\r\n                 * @inner\r\n                 */var MessagePrototype=Message.prototype=Object.create(ProtoBuf.Builder.Message.prototype);/**\r\n                 * Adds a value to a repeated field.\r\n                 * @name ProtoBuf.Builder.Message#add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */MessagePrototype.add=function(key,value,noAssert){var field=T._fieldsByName[key];if(!noAssert){if(!field)throw Error(this+\"#\"+key+\" is undefined\");if(!(field instanceof ProtoBuf.Reflect.Message.Field))throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true));// May throw if it's an enum or embedded message\nif(!field.repeated)throw Error(this+\"#\"+key+\" is not a repeated field\");value=field.verifyValue(value,true);}if(this[key]===null)this[key]=[];this[key].push(value);return this;};/**\r\n                 * Adds a value to a repeated field. This is an alias for {@link ProtoBuf.Builder.Message#add}.\r\n                 * @name ProtoBuf.Builder.Message#$add\r\n                 * @function\r\n                 * @param {string} key Field name\r\n                 * @param {*} value Value to add\r\n                 * @param {boolean=} noAssert Whether to assert the value or not (asserts by default)\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be added\r\n                 * @expose\r\n                 */MessagePrototype.$add=MessagePrototype.add;/**\r\n                 * Sets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field / proper value type, defaults to `false`\r\n                 * @returns {!ProtoBuf.Builder.Message} this\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */MessagePrototype.set=function(keyOrObj,value,noAssert){if(keyOrObj&&(typeof keyOrObj===\"undefined\"?\"undefined\":_typeof(keyOrObj))==='object'){noAssert=value;for(var ikey in keyOrObj){if(keyOrObj.hasOwnProperty(ikey)&&typeof(value=keyOrObj[ikey])!=='undefined')this.$set(ikey,value,noAssert);}return this;}var field=T._fieldsByName[keyOrObj];if(!noAssert){if(!field)throw Error(this+\"#\"+keyOrObj+\" is not a field: undefined\");if(!(field instanceof ProtoBuf.Reflect.Message.Field))throw Error(this+\"#\"+keyOrObj+\" is not a field: \"+field.toString(true));this[field.name]=value=field.verifyValue(value);// May throw\n}else this[keyOrObj]=value;if(field&&field.oneof){// Field is part of an OneOf (not a virtual OneOf field)\nvar currentField=this[field.oneof.name];// Virtual field references currently set field\nif(value!==null){if(currentField!==null&&currentField!==field.name)this[currentField]=null;// Clear currently set field\nthis[field.oneof.name]=field.name;// Point virtual field at this field\n}else if(/* value === null && */currentField===keyOrObj)this[field.oneof.name]=null;// Clear virtual field (current field explicitly cleared)\n}return this;};/**\r\n                 * Sets a field's value. This is an alias for [@link ProtoBuf.Builder.Message#set}.\r\n                 * @name ProtoBuf.Builder.Message#$set\r\n                 * @function\r\n                 * @param {string|!Object.<string,*>} keyOrObj String key or plain object holding multiple values\r\n                 * @param {(*|boolean)=} value Value to set if key is a string, otherwise omitted\r\n                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                 * @throws {Error} If the value cannot be set\r\n                 * @expose\r\n                 */MessagePrototype.$set=MessagePrototype.set;/**\r\n                 * Gets a field's value.\r\n                 * @name ProtoBuf.Builder.Message#get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @param {boolean=} noAssert Whether to not assert for an actual field, defaults to `false`\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */MessagePrototype.get=function(key,noAssert){if(noAssert)return this[key];var field=T._fieldsByName[key];if(!field||!(field instanceof ProtoBuf.Reflect.Message.Field))throw Error(this+\"#\"+key+\" is not a field: undefined\");if(!(field instanceof ProtoBuf.Reflect.Message.Field))throw Error(this+\"#\"+key+\" is not a field: \"+field.toString(true));return this[field.name];};/**\r\n                 * Gets a field's value. This is an alias for {@link ProtoBuf.Builder.Message#$get}.\r\n                 * @name ProtoBuf.Builder.Message#$get\r\n                 * @function\r\n                 * @param {string} key Key\r\n                 * @return {*} Value\r\n                 * @throws {Error} If there is no such field\r\n                 * @expose\r\n                 */MessagePrototype.$get=MessagePrototype.get;// Getters and setters\nfor(var i=0;i<fields.length;i++){var field=fields[i];// no setters for extension fields as these are named by their fqn\nif(field instanceof ProtoBuf.Reflect.Message.ExtensionField)continue;if(T.builder.options['populateAccessors'])(function(field){// set/get[SomeValue]\nvar Name=field.originalName.replace(/(_[a-zA-Z])/g,function(match){return match.toUpperCase().replace('_','');});Name=Name.substring(0,1).toUpperCase()+Name.substring(1);// set/get_[some_value] FIXME: Do we really need these?\nvar name=field.originalName.replace(/([A-Z])/g,function(match){return\"_\"+match;});/**\r\n                             * The current field's unbound setter function.\r\n                             * @function\r\n                             * @param {*} value\r\n                             * @param {boolean=} noAssert\r\n                             * @returns {!ProtoBuf.Builder.Message}\r\n                             * @inner\r\n                             */var setter=function setter(value,noAssert){this[field.name]=noAssert?value:field.verifyValue(value);return this;};/**\r\n                             * The current field's unbound getter function.\r\n                             * @function\r\n                             * @returns {*}\r\n                             * @inner\r\n                             */var getter=function getter(){return this[field.name];};if(T.getChild(\"set\"+Name)===null)/**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set[SomeField]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */MessagePrototype[\"set\"+Name]=setter;if(T.getChild(\"set_\"+name)===null)/**\r\n                                 * Sets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#set_[some_field]\r\n                                 * @function\r\n                                 * @param {*} value Value to set\r\n                                 * @param {boolean=} noAssert Whether to not assert the value, defaults to `false`\r\n                                 * @returns {!ProtoBuf.Builder.Message} this\r\n                                 * @abstract\r\n                                 * @throws {Error} If the value cannot be set\r\n                                 */MessagePrototype[\"set_\"+name]=setter;if(T.getChild(\"get\"+Name)===null)/**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get[SomeField]\r\n                                 * @function\r\n                                 * @abstract\r\n                                 * @return {*} The value\r\n                                 */MessagePrototype[\"get\"+Name]=getter;if(T.getChild(\"get_\"+name)===null)/**\r\n                                 * Gets a value. This method is present for each field, but only if there is no name conflict with\r\n                                 *  another field.\r\n                                 * @name ProtoBuf.Builder.Message#get_[some_field]\r\n                                 * @function\r\n                                 * @return {*} The value\r\n                                 * @abstract\r\n                                 */MessagePrototype[\"get_\"+name]=getter;})(field);}// En-/decoding\n/**\r\n                 * Encodes the message.\r\n                 * @name ProtoBuf.Builder.Message#$encode\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message#encode64\r\n                 * @see ProtoBuf.Builder.Message#encodeHex\r\n                 * @see ProtoBuf.Builder.Message#encodeAB\r\n                 */MessagePrototype.encode=function(buffer,noVerify){if(typeof buffer==='boolean')noVerify=buffer,buffer=undefined;var isNew=false;if(!buffer)buffer=new ByteBuffer(),isNew=true;var le=buffer.littleEndian;try{T.encode(this,buffer.LE(),noVerify);return(isNew?buffer.flip():buffer).LE(le);}catch(e){buffer.LE(le);throw e;}};/**\r\n                 * Encodes a message using the specified data payload.\r\n                 * @param {!Object.<string,*>} data Data payload\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @expose\r\n                 */Message.encode=function(data,buffer,noVerify){return new Message(data).encode(buffer,noVerify);};/**\r\n                 * Calculates the byte length of the message.\r\n                 * @name ProtoBuf.Builder.Message#calculate\r\n                 * @function\r\n                 * @returns {number} Byte length\r\n                 * @throws {Error} If the message cannot be calculated or if required fields are missing.\r\n                 * @expose\r\n                 */MessagePrototype.calculate=function(){return T.calculate(this);};/**\r\n                 * Encodes the varint32 length-delimited message.\r\n                 * @name ProtoBuf.Builder.Message#encodeDelimited\r\n                 * @function\r\n                 * @param {(!ByteBuffer|boolean)=} buffer ByteBuffer to encode to. Will create a new one and flip it if omitted.\r\n                 * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n                 * @return {!ByteBuffer} Encoded message as a ByteBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ByteBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.encodeDelimited=function(buffer,noVerify){var isNew=false;if(!buffer)buffer=new ByteBuffer(),isNew=true;var enc=new ByteBuffer().LE();T.encode(this,enc,noVerify).flip();buffer.writeVarint32(enc.remaining());buffer.append(enc);return isNew?buffer.flip():buffer;};/**\r\n                 * Directly encodes the message to an ArrayBuffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeAB\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.encodeAB=function(){try{return this.encode().toArrayBuffer();}catch(e){if(e[\"encoded\"])e[\"encoded\"]=e[\"encoded\"].toArrayBuffer();throw e;}};/**\r\n                 * Returns the message as an ArrayBuffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeAB}.\r\n                 * @name ProtoBuf.Builder.Message#toArrayBuffer\r\n                 * @function\r\n                 * @return {ArrayBuffer} Encoded message as ArrayBuffer\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded ArrayBuffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.toArrayBuffer=MessagePrototype.encodeAB;/**\r\n                 * Directly encodes the message to a node Buffer.\r\n                 * @name ProtoBuf.Builder.Message#encodeNB\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded, not running under node.js or if required fields are\r\n                 *  missing. The later still returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.encodeNB=function(){try{return this.encode().toBuffer();}catch(e){if(e[\"encoded\"])e[\"encoded\"]=e[\"encoded\"].toBuffer();throw e;}};/**\r\n                 * Returns the message as a node Buffer. This is an alias for {@link ProtoBuf.Builder.Message#encodeNB}.\r\n                 * @name ProtoBuf.Builder.Message#toBuffer\r\n                 * @function\r\n                 * @return {!Buffer}\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded node Buffer in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.toBuffer=MessagePrototype.encodeNB;/**\r\n                 * Directly encodes the message to a base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encode64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.encode64=function(){try{return this.encode().toBase64();}catch(e){if(e[\"encoded\"])e[\"encoded\"]=e[\"encoded\"].toBase64();throw e;}};/**\r\n                 * Returns the message as a base64 encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encode64}.\r\n                 * @name ProtoBuf.Builder.Message#toBase64\r\n                 * @function\r\n                 * @return {string} Base64 encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded base64 string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.toBase64=MessagePrototype.encode64;/**\r\n                 * Directly encodes the message to a hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message#encodeHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the underlying buffer cannot be encoded or if required fields are missing. The later\r\n                 *  still returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.encodeHex=function(){try{return this.encode().toHex();}catch(e){if(e[\"encoded\"])e[\"encoded\"]=e[\"encoded\"].toHex();throw e;}};/**\r\n                 * Returns the message as a hex encoded string. This is an alias for {@link ProtoBuf.Builder.Message#encodeHex}.\r\n                 * @name ProtoBuf.Builder.Message#toHex\r\n                 * @function\r\n                 * @return {string} Hex encoded string\r\n                 * @throws {Error} If the message cannot be encoded or if required fields are missing. The later still\r\n                 *  returns the encoded hex string in the `encoded` property on the error.\r\n                 * @expose\r\n                 */MessagePrototype.toHex=MessagePrototype.encodeHex;/**\r\n                 * Clones a message object or field value to a raw object.\r\n                 * @param {*} obj Object to clone\r\n                 * @param {boolean} binaryAsBase64 Whether to include binary data as base64 strings or as a buffer otherwise\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @param {!ProtoBuf.Reflect.T=} resolvedType The resolved field type if a field\r\n                 * @returns {*} Cloned object\r\n                 * @inner\r\n                 */function cloneRaw(obj,binaryAsBase64,longsAsStrings,resolvedType){if(obj===null||(typeof obj===\"undefined\"?\"undefined\":_typeof(obj))!=='object'){// Convert enum values to their respective names\nif(resolvedType&&resolvedType instanceof ProtoBuf.Reflect.Enum){var name=ProtoBuf.Reflect.Enum.getName(resolvedType.object,obj);if(name!==null)return name;}// Pass-through string, number, boolean, null...\nreturn obj;}// Convert ByteBuffers to raw buffer or strings\nif(ByteBuffer.isByteBuffer(obj))return binaryAsBase64?obj.toBase64():obj.toBuffer();// Convert Longs to proper objects or strings\nif(ProtoBuf.Long.isLong(obj))return longsAsStrings?obj.toString():ProtoBuf.Long.fromValue(obj);var clone;// Clone arrays\nif(Array.isArray(obj)){clone=[];obj.forEach(function(v,k){clone[k]=cloneRaw(v,binaryAsBase64,longsAsStrings,resolvedType);});return clone;}clone={};// Convert maps to objects\nif(obj instanceof ProtoBuf.Map){var it=obj.entries();for(var e=it.next();!e.done;e=it.next()){clone[obj.keyElem.valueToString(e.value[0])]=cloneRaw(e.value[1],binaryAsBase64,longsAsStrings,obj.valueElem.resolvedType);}return clone;}// Everything else is a non-null object\nvar type=obj.$type,field=undefined;for(var i in obj){if(obj.hasOwnProperty(i)){if(type&&(field=type.getChild(i)))clone[i]=cloneRaw(obj[i],binaryAsBase64,longsAsStrings,field.resolvedType);else clone[i]=cloneRaw(obj[i],binaryAsBase64,longsAsStrings);}}return clone;}/**\r\n                 * Returns the message's raw payload.\r\n                 * @param {boolean=} binaryAsBase64 Whether to include binary data as base64 strings instead of Buffers, defaults to `false`\r\n                 * @param {boolean} longsAsStrings Whether to encode longs as strings\r\n                 * @returns {Object.<string,*>} Raw payload\r\n                 * @expose\r\n                 */MessagePrototype.toRaw=function(binaryAsBase64,longsAsStrings){return cloneRaw(this,!!binaryAsBase64,!!longsAsStrings,this.$type);};/**\r\n                 * Encodes a message to JSON.\r\n                 * @returns {string} JSON string\r\n                 * @expose\r\n                 */MessagePrototype.encodeJSON=function(){return JSON.stringify(cloneRaw(this,/* binary-as-base64 */true,/* longs-as-strings */true,this.$type));};/**\r\n                 * Decodes a message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decode\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {(number|string)=} length Message length. Defaults to decode all the remainig data.\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 * @see ProtoBuf.Builder.Message.decode64\r\n                 * @see ProtoBuf.Builder.Message.decodeHex\r\n                 */Message.decode=function(buffer,length,enc){if(typeof length==='string')enc=length,length=-1;if(typeof buffer==='string')buffer=ByteBuffer.wrap(buffer,enc?enc:\"base64\");buffer=ByteBuffer.isByteBuffer(buffer)?buffer:ByteBuffer.wrap(buffer);// May throw\nvar le=buffer.littleEndian;try{var msg=T.decode(buffer.LE());buffer.LE(le);return msg;}catch(e){buffer.LE(le);throw e;}};/**\r\n                 * Decodes a varint32 length-delimited message from the specified buffer or string.\r\n                 * @name ProtoBuf.Builder.Message.decodeDelimited\r\n                 * @function\r\n                 * @param {!ByteBuffer|!ArrayBuffer|!Buffer|string} buffer Buffer to decode from\r\n                 * @param {string=} enc Encoding if buffer is a string: hex, utf8 (not recommended), defaults to base64\r\n                 * @return {ProtoBuf.Builder.Message} Decoded message or `null` if not enough bytes are available yet\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */Message.decodeDelimited=function(buffer,enc){if(typeof buffer==='string')buffer=ByteBuffer.wrap(buffer,enc?enc:\"base64\");buffer=ByteBuffer.isByteBuffer(buffer)?buffer:ByteBuffer.wrap(buffer);// May throw\nif(buffer.remaining()<1)return null;var off=buffer.offset,len=buffer.readVarint32();if(buffer.remaining()<len){buffer.offset=off;return null;}try{var msg=T.decode(buffer.slice(buffer.offset,buffer.offset+len).LE());buffer.offset+=len;return msg;}catch(err){buffer.offset+=len;throw err;}};/**\r\n                 * Decodes the message from the specified base64 encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decode64\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */Message.decode64=function(str){return Message.decode(str,\"base64\");};/**\r\n                 * Decodes the message from the specified hex encoded string.\r\n                 * @name ProtoBuf.Builder.Message.decodeHex\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are missing. The later still\r\n                 *  returns the decoded message with missing fields in the `decoded` property on the error.\r\n                 * @expose\r\n                 */Message.decodeHex=function(str){return Message.decode(str,\"hex\");};/**\r\n                 * Decodes the message from a JSON string.\r\n                 * @name ProtoBuf.Builder.Message.decodeJSON\r\n                 * @function\r\n                 * @param {string} str String to decode from\r\n                 * @return {!ProtoBuf.Builder.Message} Decoded message\r\n                 * @throws {Error} If the message cannot be decoded or if required fields are\r\n                 * missing.\r\n                 * @expose\r\n                 */Message.decodeJSON=function(str){return new Message(JSON.parse(str));};// Utility\n/**\r\n                 * Returns a string representation of this Message.\r\n                 * @name ProtoBuf.Builder.Message#toString\r\n                 * @function\r\n                 * @return {string} String representation as of \".Fully.Qualified.MessageName\"\r\n                 * @expose\r\n                 */MessagePrototype.toString=function(){return T.toString();};// Properties\n/**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */var $optionsS;// cc needs this\n/**\r\n                 * Message options.\r\n                 * @name ProtoBuf.Builder.Message#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */var $options;/**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message.$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */var $typeS;/**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Message#$type\r\n                 * @type {!ProtoBuf.Reflect.Message}\r\n                 * @expose\r\n                 */var $type;if(Object.defineProperty)Object.defineProperty(Message,'$options',{\"value\":T.buildOpt()}),Object.defineProperty(MessagePrototype,\"$options\",{\"value\":Message[\"$options\"]}),Object.defineProperty(Message,\"$type\",{\"value\":T}),Object.defineProperty(MessagePrototype,\"$type\",{\"value\":T});return Message;}(ProtoBuf,this);// Static enums and prototyped sub-messages / cached collections\nthis._fields=[];this._fieldsById={};this._fieldsByName={};for(var i=0,k=this.children.length,child;i<k;i++){child=this.children[i];if(child instanceof Enum||child instanceof Message||child instanceof Service){if(clazz.hasOwnProperty(child.name))throw Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+child.toString(true)+\" cannot override static property '\"+child.name+\"'\");clazz[child.name]=child.build();}else if(child instanceof Message.Field)child.build(),this._fields.push(child),this._fieldsById[child.id]=child,this._fieldsByName[child.name]=child;else if(!(child instanceof Message.OneOf)&&!(child instanceof Extension))// Not built\nthrow Error(\"Illegal reflect child of \"+this.toString(true)+\": \"+this.children[i].toString(true));}return this.clazz=clazz;};/**\r\n         * Encodes a runtime message's contents to the specified buffer.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @param {ByteBuffer} buffer ByteBuffer to write to\r\n         * @param {boolean=} noVerify Whether to not verify field values, defaults to `false`\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If required fields are missing or the message cannot be encoded for another reason\r\n         * @expose\r\n         */MessagePrototype.encode=function(message,buffer,noVerify){var fieldMissing=null,field;for(var i=0,k=this._fields.length,val;i<k;++i){field=this._fields[i];val=message[field.name];if(field.required&&val===null){if(fieldMissing===null)fieldMissing=field;}else field.encode(noVerify?val:field.verifyValue(val),buffer,message);}if(fieldMissing!==null){var err=Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+fieldMissing);err[\"encoded\"]=buffer;// Still expose what we got\nthrow err;}return buffer;};/**\r\n         * Calculates a runtime message's byte length.\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message to encode\r\n         * @returns {number} Byte length\r\n         * @throws {Error} If required fields are missing or the message cannot be calculated for another reason\r\n         * @expose\r\n         */MessagePrototype.calculate=function(message){for(var n=0,i=0,k=this._fields.length,field,val;i<k;++i){field=this._fields[i];val=message[field.name];if(field.required&&val===null)throw Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+field);else n+=field.calculate(val,message);}return n;};/**\r\n         * Skips all data until the end of the specified group has been reached.\r\n         * @param {number} expectedId Expected GROUPEND id\r\n         * @param {!ByteBuffer} buf ByteBuffer\r\n         * @returns {boolean} `true` if a value as been skipped, `false` if the end has been reached\r\n         * @throws {Error} If it wasn't possible to find the end of the group (buffer overrun or end tag mismatch)\r\n         * @inner\r\n         */function skipTillGroupEnd(expectedId,buf){var tag=buf.readVarint32(),// Throws on OOB\nwireType=tag&0x07,id=tag>>>3;switch(wireType){case ProtoBuf.WIRE_TYPES.VARINT:do{tag=buf.readUint8();}while((tag&0x80)===0x80);break;case ProtoBuf.WIRE_TYPES.BITS64:buf.offset+=8;break;case ProtoBuf.WIRE_TYPES.LDELIM:tag=buf.readVarint32();// reads the varint\nbuf.offset+=tag;// skips n bytes\nbreak;case ProtoBuf.WIRE_TYPES.STARTGROUP:skipTillGroupEnd(id,buf);break;case ProtoBuf.WIRE_TYPES.ENDGROUP:if(id===expectedId)return false;else throw Error(\"Illegal GROUPEND after unknown group: \"+id+\" (\"+expectedId+\" expected)\");case ProtoBuf.WIRE_TYPES.BITS32:buf.offset+=4;break;default:throw Error(\"Illegal wire type in unknown group \"+expectedId+\": \"+wireType);}return true;}/**\r\n         * Decodes an encoded message and returns the decoded message.\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {number=} length Message length. Defaults to decode all remaining data.\r\n         * @param {number=} expectedGroupEndId Expected GROUPEND id if this is a legacy group\r\n         * @return {ProtoBuf.Builder.Message} Decoded message\r\n         * @throws {Error} If the message cannot be decoded\r\n         * @expose\r\n         */MessagePrototype.decode=function(buffer,length,expectedGroupEndId){length=typeof length==='number'?length:-1;var start=buffer.offset,msg=new this.clazz(),tag,wireType,id,field;while(buffer.offset<start+length||length===-1&&buffer.remaining()>0){tag=buffer.readVarint32();wireType=tag&0x07;id=tag>>>3;if(wireType===ProtoBuf.WIRE_TYPES.ENDGROUP){if(id!==expectedGroupEndId)throw Error(\"Illegal group end indicator for \"+this.toString(true)+\": \"+id+\" (\"+(expectedGroupEndId?expectedGroupEndId+\" expected\":\"not a group\")+\")\");break;}if(!(field=this._fieldsById[id])){// \"messages created by your new code can be parsed by your old code: old binaries simply ignore the new field when parsing.\"\nswitch(wireType){case ProtoBuf.WIRE_TYPES.VARINT:buffer.readVarint32();break;case ProtoBuf.WIRE_TYPES.BITS32:buffer.offset+=4;break;case ProtoBuf.WIRE_TYPES.BITS64:buffer.offset+=8;break;case ProtoBuf.WIRE_TYPES.LDELIM:var len=buffer.readVarint32();buffer.offset+=len;break;case ProtoBuf.WIRE_TYPES.STARTGROUP:while(skipTillGroupEnd(id,buffer)){}break;default:throw Error(\"Illegal wire type for unknown field \"+id+\" in \"+this.toString(true)+\"#decode: \"+wireType);}continue;}if(field.repeated&&!field.options[\"packed\"]){msg[field.name].push(field.decode(wireType,buffer));}else if(field.map){var keyval=field.decode(wireType,buffer);msg[field.name].set(keyval[0],keyval[1]);}else{msg[field.name]=field.decode(wireType,buffer);if(field.oneof){// Field is part of an OneOf (not a virtual OneOf field)\nvar currentField=msg[field.oneof.name];// Virtual field references currently set field\nif(currentField!==null&&currentField!==field.name)msg[currentField]=null;// Clear currently set field\nmsg[field.oneof.name]=field.name;// Point virtual field at this field\n}}}// Check if all required fields are present and set default values for optional fields that are not\nfor(var i=0,k=this._fields.length;i<k;++i){field=this._fields[i];if(msg[field.name]===null){if(this.syntax===\"proto3\"){// Proto3 sets default values by specification\nmsg[field.name]=field.defaultValue;}else if(field.required){var err=Error(\"Missing at least one required field for \"+this.toString(true)+\": \"+field.name);err[\"decoded\"]=msg;// Still expose what we got\nthrow err;}else if(ProtoBuf.populateDefaults&&field.defaultValue!==null)msg[field.name]=field.defaultValue;}}return msg;};/**\r\n         * @alias ProtoBuf.Reflect.Message\r\n         * @expose\r\n         */Reflect.Message=Message;/**\r\n         * Constructs a new Message Field.\r\n         * @exports ProtoBuf.Reflect.Message.Field\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string?} keytype Key data type, if any.\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {Object.<string,*>=} options Options\r\n         * @param {!ProtoBuf.Reflect.Message.OneOf=} oneof Enclosing OneOf\r\n         * @param {string?} syntax The syntax level of this definition (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */var Field=function Field(builder,message,rule,keytype,type,name,id,options,oneof,syntax){T.call(this,builder,message,name);/**\r\n             * @override\r\n             */this.className=\"Message.Field\";/**\r\n             * Message field required flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */this.required=rule===\"required\";/**\r\n             * Message field repeated flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */this.repeated=rule===\"repeated\";/**\r\n             * Message field map flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */this.map=rule===\"map\";/**\r\n             * Message field key type. Type reference string if unresolved, protobuf\r\n             * type if resolved. Valid only if this.map === true, null otherwise.\r\n             * @type {string|{name: string, wireType: number}|null}\r\n             * @expose\r\n             */this.keyType=keytype||null;/**\r\n             * Message field type. Type reference string if unresolved, protobuf type if\r\n             * resolved. In a map field, this is the value type.\r\n             * @type {string|{name: string, wireType: number}}\r\n             * @expose\r\n             */this.type=type;/**\r\n             * Resolved type reference inside the global namespace.\r\n             * @type {ProtoBuf.Reflect.T|null}\r\n             * @expose\r\n             */this.resolvedType=null;/**\r\n             * Unique message field id.\r\n             * @type {number}\r\n             * @expose\r\n             */this.id=id;/**\r\n             * Message field options.\r\n             * @type {!Object.<string,*>}\r\n             * @dict\r\n             * @expose\r\n             */this.options=options||{};/**\r\n             * Default value.\r\n             * @type {*}\r\n             * @expose\r\n             */this.defaultValue=null;/**\r\n             * Enclosing OneOf.\r\n             * @type {?ProtoBuf.Reflect.Message.OneOf}\r\n             * @expose\r\n             */this.oneof=oneof||null;/**\r\n             * Syntax level of this definition (e.g., proto3).\r\n             * @type {string}\r\n             * @expose\r\n             */this.syntax=syntax||'proto2';/**\r\n             * Original field name.\r\n             * @type {string}\r\n             * @expose\r\n             */this.originalName=this.name;// Used to revert camelcase transformation on naming collisions\n/**\r\n             * Element implementation. Created in build() after types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */this.element=null;/**\r\n             * Key element implementation, for map fields. Created in build() after\r\n             * types are resolved.\r\n             * @type {ProtoBuf.Element}\r\n             * @expose\r\n             */this.keyElement=null;// Convert field names to camel case notation if the override is set\nif(this.builder.options['convertFieldsToCamelCase']&&!(this instanceof Message.ExtensionField))this.name=ProtoBuf.Util.toCamelCase(this.name);};/**\r\n         * @alias ProtoBuf.Reflect.Message.Field.prototype\r\n         * @inner\r\n         */var FieldPrototype=Field.prototype=Object.create(T.prototype);/**\r\n         * Builds the field.\r\n         * @override\r\n         * @expose\r\n         */FieldPrototype.build=function(){this.element=new Element(this.type,this.resolvedType,false,this.syntax);if(this.map)this.keyElement=new Element(this.keyType,undefined,true,this.syntax);// In proto3, fields do not have field presence, and every field is set to\n// its type's default value (\"\", 0, 0.0, or false).\nif(this.syntax==='proto3'&&!this.repeated&&!this.map)this.defaultValue=Element.defaultFieldValue(this.type);// Otherwise, default values are present when explicitly specified\nelse if(typeof this.options['default']!=='undefined')this.defaultValue=this.verifyValue(this.options['default']);};/**\r\n         * Checks if the given value can be set for this field.\r\n         * @param {*} value Value to check\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated value check or not. Defaults to false.\r\n         * @return {*} Verified, maybe adjusted, value\r\n         * @throws {Error} If the value cannot be set for this field\r\n         * @expose\r\n         */FieldPrototype.verifyValue=function(value,skipRepeated){skipRepeated=skipRepeated||false;var self=this;function fail(val,msg){throw Error(\"Illegal value for \"+self.toString(true)+\" of type \"+self.type.name+\": \"+val+\" (\"+msg+\")\");}if(value===null){// NULL values for optional fields\nif(this.required)fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"required\");if(this.syntax==='proto3'&&this.type!==ProtoBuf.TYPES[\"message\"])fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"proto3 field without field presence cannot be null\");return null;}var i;if(this.repeated&&!skipRepeated){// Repeated values as arrays\nif(!Array.isArray(value))value=[value];var res=[];for(i=0;i<value.length;i++){res.push(this.element.verifyValue(value[i]));}return res;}if(this.map&&!skipRepeated){// Map values as objects\nif(!(value instanceof ProtoBuf.Map)){// If not already a Map, attempt to convert.\nif(!(value instanceof Object)){fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"expected ProtoBuf.Map or raw object for map field\");}return new ProtoBuf.Map(this,value);}else{return value;}}// All non-repeated fields expect no array\nif(!this.repeated&&Array.isArray(value))fail(typeof value===\"undefined\"?\"undefined\":_typeof(value),\"no array expected\");return this.element.verifyValue(value);};/**\r\n         * Determines whether the field will have a presence on the wire given its\r\n         * value.\r\n         * @param {*} value Verified field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {boolean} Whether the field will be present on the wire\r\n         */FieldPrototype.hasWirePresence=function(value,message){if(this.syntax!=='proto3')return value!==null;if(this.oneof&&message[this.oneof.name]===this.name)return true;switch(this.type){case ProtoBuf.TYPES[\"int32\"]:case ProtoBuf.TYPES[\"sint32\"]:case ProtoBuf.TYPES[\"sfixed32\"]:case ProtoBuf.TYPES[\"uint32\"]:case ProtoBuf.TYPES[\"fixed32\"]:return value!==0;case ProtoBuf.TYPES[\"int64\"]:case ProtoBuf.TYPES[\"sint64\"]:case ProtoBuf.TYPES[\"sfixed64\"]:case ProtoBuf.TYPES[\"uint64\"]:case ProtoBuf.TYPES[\"fixed64\"]:return value.low!==0||value.high!==0;case ProtoBuf.TYPES[\"bool\"]:return value;case ProtoBuf.TYPES[\"float\"]:case ProtoBuf.TYPES[\"double\"]:return value!==0.0;case ProtoBuf.TYPES[\"string\"]:return value.length>0;case ProtoBuf.TYPES[\"bytes\"]:return value.remaining()>0;case ProtoBuf.TYPES[\"enum\"]:return value!==0;case ProtoBuf.TYPES[\"message\"]:return value!==null;default:return true;}};/**\r\n         * Encodes the specified field value to the specified buffer.\r\n         * @param {*} value Verified field value\r\n         * @param {ByteBuffer} buffer ByteBuffer to encode to\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @return {ByteBuffer} The ByteBuffer for chaining\r\n         * @throws {Error} If the field cannot be encoded\r\n         * @expose\r\n         */FieldPrototype.encode=function(value,buffer,message){if(this.type===null||_typeof(this.type)!=='object')throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);if(value===null||this.repeated&&value.length==0)return buffer;// Optional omitted\ntry{if(this.repeated){var i;// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire\n// types) can be declared 'packed'.\"\nif(this.options[\"packed\"]&&ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType)>=0){// \"All of the elements of the field are packed into a single key-value pair with wire type 2\n// (length-delimited). Each element is encoded the same way it would be normally, except without a\n// tag preceding it.\"\nbuffer.writeVarint32(this.id<<3|ProtoBuf.WIRE_TYPES.LDELIM);buffer.ensureCapacity(buffer.offset+=1);// We do not know the length yet, so let's assume a varint of length 1\nvar start=buffer.offset;// Remember where the contents begin\nfor(i=0;i<value.length;i++){this.element.encodeValue(this.id,value[i],buffer);}var len=buffer.offset-start,varintLen=ByteBuffer.calculateVarint32(len);if(varintLen>1){// We need to move the contents\nvar contents=buffer.slice(start,buffer.offset);start+=varintLen-1;buffer.offset=start;buffer.append(contents);}buffer.writeVarint32(len,start-varintLen);}else{// \"If your message definition has repeated elements (without the [packed=true] option), the encoded\n// message has zero or more key-value pairs with the same tag number\"\nfor(i=0;i<value.length;i++){buffer.writeVarint32(this.id<<3|this.type.wireType),this.element.encodeValue(this.id,value[i],buffer);}}}else if(this.map){// Write out each map entry as a submessage.\nvalue.forEach(function(val,key,m){// Compute the length of the submessage (key, val) pair.\nvar length=ByteBuffer.calculateVarint32(1<<3|this.keyType.wireType)+this.keyElement.calculateLength(1,key)+ByteBuffer.calculateVarint32(2<<3|this.type.wireType)+this.element.calculateLength(2,val);// Submessage with wire type of length-delimited.\nbuffer.writeVarint32(this.id<<3|ProtoBuf.WIRE_TYPES.LDELIM);buffer.writeVarint32(length);// Write out the key and val.\nbuffer.writeVarint32(1<<3|this.keyType.wireType);this.keyElement.encodeValue(1,key,buffer);buffer.writeVarint32(2<<3|this.type.wireType);this.element.encodeValue(2,val,buffer);},this);}else{if(this.hasWirePresence(value,message)){buffer.writeVarint32(this.id<<3|this.type.wireType);this.element.encodeValue(this.id,value,buffer);}}}catch(e){throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");}return buffer;};/**\r\n         * Calculates the length of this field's value on the network level.\r\n         * @param {*} value Field value\r\n         * @param {!ProtoBuf.Builder.Message} message Runtime message\r\n         * @returns {number} Byte length\r\n         * @expose\r\n         */FieldPrototype.calculate=function(value,message){value=this.verifyValue(value);// May throw\nif(this.type===null||_typeof(this.type)!=='object')throw Error(\"[INTERNAL] Unresolved type in \"+this.toString(true)+\": \"+this.type);if(value===null||this.repeated&&value.length==0)return 0;// Optional omitted\nvar n=0;try{if(this.repeated){var i,ni;if(this.options[\"packed\"]&&ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType)>=0){n+=ByteBuffer.calculateVarint32(this.id<<3|ProtoBuf.WIRE_TYPES.LDELIM);ni=0;for(i=0;i<value.length;i++){ni+=this.element.calculateLength(this.id,value[i]);}n+=ByteBuffer.calculateVarint32(ni);n+=ni;}else{for(i=0;i<value.length;i++){n+=ByteBuffer.calculateVarint32(this.id<<3|this.type.wireType),n+=this.element.calculateLength(this.id,value[i]);}}}else if(this.map){// Each map entry becomes a submessage.\nvalue.forEach(function(val,key,m){// Compute the length of the submessage (key, val) pair.\nvar length=ByteBuffer.calculateVarint32(1<<3|this.keyType.wireType)+this.keyElement.calculateLength(1,key)+ByteBuffer.calculateVarint32(2<<3|this.type.wireType)+this.element.calculateLength(2,val);n+=ByteBuffer.calculateVarint32(this.id<<3|ProtoBuf.WIRE_TYPES.LDELIM);n+=ByteBuffer.calculateVarint32(length);n+=length;},this);}else{if(this.hasWirePresence(value,message)){n+=ByteBuffer.calculateVarint32(this.id<<3|this.type.wireType);n+=this.element.calculateLength(this.id,value);}}}catch(e){throw Error(\"Illegal value for \"+this.toString(true)+\": \"+value+\" (\"+e+\")\");}return n;};/**\r\n         * Decode the field value from the specified buffer.\r\n         * @param {number} wireType Leading wire type\r\n         * @param {ByteBuffer} buffer ByteBuffer to decode from\r\n         * @param {boolean=} skipRepeated Whether to skip the repeated check or not. Defaults to false.\r\n         * @return {*} Decoded value: array for packed repeated fields, [key, value] for\r\n         *             map fields, or an individual value otherwise.\r\n         * @throws {Error} If the field cannot be decoded\r\n         * @expose\r\n         */FieldPrototype.decode=function(wireType,buffer,skipRepeated){var value,nBytes;// We expect wireType to match the underlying type's wireType unless we see\n// a packed repeated field, or unless this is a map field.\nvar wireTypeOK=!this.map&&wireType==this.type.wireType||!skipRepeated&&this.repeated&&this.options[\"packed\"]&&wireType==ProtoBuf.WIRE_TYPES.LDELIM||this.map&&wireType==ProtoBuf.WIRE_TYPES.LDELIM;if(!wireTypeOK)throw Error(\"Illegal wire type for field \"+this.toString(true)+\": \"+wireType+\" (\"+this.type.wireType+\" expected)\");// Handle packed repeated fields.\nif(wireType==ProtoBuf.WIRE_TYPES.LDELIM&&this.repeated&&this.options[\"packed\"]&&ProtoBuf.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType)>=0){if(!skipRepeated){nBytes=buffer.readVarint32();nBytes=buffer.offset+nBytes;// Limit\nvar values=[];while(buffer.offset<nBytes){values.push(this.decode(this.type.wireType,buffer,true));}return values;}// Read the next value otherwise...\n}// Handle maps.\nif(this.map){// Read one (key, value) submessage, and return [key, value]\nvar key=Element.defaultFieldValue(this.keyType);value=Element.defaultFieldValue(this.type);// Read the length\nnBytes=buffer.readVarint32();if(buffer.remaining()<nBytes)throw Error(\"Illegal number of bytes for \"+this.toString(true)+\": \"+nBytes+\" required but got only \"+buffer.remaining());// Get a sub-buffer of this key/value submessage\nvar msgbuf=buffer.clone();msgbuf.limit=msgbuf.offset+nBytes;buffer.offset+=nBytes;while(msgbuf.remaining()>0){var tag=msgbuf.readVarint32();wireType=tag&0x07;var id=tag>>>3;if(id===1){key=this.keyElement.decode(msgbuf,wireType,id);}else if(id===2){value=this.element.decode(msgbuf,wireType,id);}else{throw Error(\"Unexpected tag in map field key/value submessage\");}}return[key,value];}// Handle singular and non-packed repeated field values.\nreturn this.element.decode(buffer,wireType,this.id);};/**\r\n         * @alias ProtoBuf.Reflect.Message.Field\r\n         * @expose\r\n         */Reflect.Message.Field=Field;/**\r\n         * Constructs a new Message ExtensionField.\r\n         * @exports ProtoBuf.Reflect.Message.ExtensionField\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} rule Rule, one of requried, optional, repeated\r\n         * @param {string} type Data type, e.g. int32\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @param {!Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Message.Field\r\n         */var ExtensionField=function ExtensionField(builder,message,rule,type,name,id,options){Field.call(this,builder,message,rule,/* keytype = */null,type,name,id,options);/**\r\n             * Extension reference.\r\n             * @type {!ProtoBuf.Reflect.Extension}\r\n             * @expose\r\n             */this.extension;};// Extends Field\nExtensionField.prototype=Object.create(Field.prototype);/**\r\n         * @alias ProtoBuf.Reflect.Message.ExtensionField\r\n         * @expose\r\n         */Reflect.Message.ExtensionField=ExtensionField;/**\r\n         * Constructs a new Message OneOf.\r\n         * @exports ProtoBuf.Reflect.Message.OneOf\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Message} message Message reference\r\n         * @param {string} name OneOf name\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */var OneOf=function OneOf(builder,message,name){T.call(this,builder,message,name);/**\r\n             * Enclosed fields.\r\n             * @type {!Array.<!ProtoBuf.Reflect.Message.Field>}\r\n             * @expose\r\n             */this.fields=[];};/**\r\n         * @alias ProtoBuf.Reflect.Message.OneOf\r\n         * @expose\r\n         */Reflect.Message.OneOf=OneOf;/**\r\n         * Constructs a new Enum.\r\n         * @exports ProtoBuf.Reflect.Enum\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent Reflect object\r\n         * @param {string} name Enum name\r\n         * @param {Object.<string,*>=} options Enum options\r\n         * @param {string?} syntax The syntax level (e.g., proto3)\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */var Enum=function Enum(builder,parent,name,options,syntax){Namespace.call(this,builder,parent,name,options,syntax);/**\r\n             * @override\r\n             */this.className=\"Enum\";/**\r\n             * Runtime enum object.\r\n             * @type {Object.<string,number>|null}\r\n             * @expose\r\n             */this.object=null;};/**\r\n         * Gets the string name of an enum value.\r\n         * @param {!ProtoBuf.Builder.Enum} enm Runtime enum\r\n         * @param {number} value Enum value\r\n         * @returns {?string} Name or `null` if not present\r\n         * @expose\r\n         */Enum.getName=function(enm,value){var keys=Object.keys(enm);for(var i=0,key;i<keys.length;++i){if(enm[key=keys[i]]===value)return key;}return null;};/**\r\n         * @alias ProtoBuf.Reflect.Enum.prototype\r\n         * @inner\r\n         */var EnumPrototype=Enum.prototype=Object.create(Namespace.prototype);/**\r\n         * Builds this enum and returns the runtime counterpart.\r\n         * @param {boolean} rebuild Whether to rebuild or not, defaults to false\r\n         * @returns {!Object.<string,number>}\r\n         * @expose\r\n         */EnumPrototype.build=function(rebuild){if(this.object&&!rebuild)return this.object;var enm=new ProtoBuf.Builder.Enum(),values=this.getChildren(Enum.Value);for(var i=0,k=values.length;i<k;++i){enm[values[i]['name']]=values[i]['id'];}if(Object.defineProperty)Object.defineProperty(enm,'$options',{\"value\":this.buildOpt(),\"enumerable\":false});return this.object=enm;};/**\r\n         * @alias ProtoBuf.Reflect.Enum\r\n         * @expose\r\n         */Reflect.Enum=Enum;/**\r\n         * Constructs a new Enum Value.\r\n         * @exports ProtoBuf.Reflect.Enum.Value\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Enum} enm Enum reference\r\n         * @param {string} name Field name\r\n         * @param {number} id Unique field id\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */var Value=function Value(builder,enm,name,id){T.call(this,builder,enm,name);/**\r\n             * @override\r\n             */this.className=\"Enum.Value\";/**\r\n             * Unique enum value id.\r\n             * @type {number}\r\n             * @expose\r\n             */this.id=id;};// Extends T\nValue.prototype=Object.create(T.prototype);/**\r\n         * @alias ProtoBuf.Reflect.Enum.Value\r\n         * @expose\r\n         */Reflect.Enum.Value=Value;/**\r\n         * An extension (field).\r\n         * @exports ProtoBuf.Reflect.Extension\r\n         * @constructor\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.T} parent Parent object\r\n         * @param {string} name Object name\r\n         * @param {!ProtoBuf.Reflect.Message.Field} field Extension field\r\n         */var Extension=function Extension(builder,parent,name,field){T.call(this,builder,parent,name);/**\r\n             * Extended message field.\r\n             * @type {!ProtoBuf.Reflect.Message.Field}\r\n             * @expose\r\n             */this.field=field;};// Extends T\nExtension.prototype=Object.create(T.prototype);/**\r\n         * @alias ProtoBuf.Reflect.Extension\r\n         * @expose\r\n         */Reflect.Extension=Extension;/**\r\n         * Constructs a new Service.\r\n         * @exports ProtoBuf.Reflect.Service\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Namespace} root Root\r\n         * @param {string} name Service name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Namespace\r\n         */var Service=function Service(builder,root,name,options){Namespace.call(this,builder,root,name,options);/**\r\n             * @override\r\n             */this.className=\"Service\";/**\r\n             * Built runtime service class.\r\n             * @type {?function(new:ProtoBuf.Builder.Service)}\r\n             */this.clazz=null;};/**\r\n         * @alias ProtoBuf.Reflect.Service.prototype\r\n         * @inner\r\n         */var ServicePrototype=Service.prototype=Object.create(Namespace.prototype);/**\r\n         * Builds the service and returns the runtime counterpart, which is a fully functional class.\r\n         * @see ProtoBuf.Builder.Service\r\n         * @param {boolean=} rebuild Whether to rebuild or not\r\n         * @return {Function} Service class\r\n         * @throws {Error} If the message cannot be built\r\n         * @expose\r\n         */ServicePrototype.build=function(rebuild){if(this.clazz&&!rebuild)return this.clazz;// Create the runtime Service class in its own scope\nreturn this.clazz=function(ProtoBuf,T){/**\r\n                 * Constructs a new runtime Service.\r\n                 * @name ProtoBuf.Builder.Service\r\n                 * @param {function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))=} rpcImpl RPC implementation receiving the method name and the message\r\n                 * @class Barebone of all runtime services.\r\n                 * @constructor\r\n                 * @throws {Error} If the service cannot be created\r\n                 */var Service=function Service(rpcImpl){ProtoBuf.Builder.Service.call(this);/**\r\n                     * Service implementation.\r\n                     * @name ProtoBuf.Builder.Service#rpcImpl\r\n                     * @type {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))}\r\n                     * @expose\r\n                     */this.rpcImpl=rpcImpl||function(name,msg,callback){// This is what a user has to implement: A function receiving the method name, the actual message to\n// send (type checked) and the callback that's either provided with the error as its first\n// argument or null and the actual response message.\nsetTimeout(callback.bind(this,Error(\"Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services\")),0);// Must be async!\n};};/**\r\n                 * @alias ProtoBuf.Builder.Service.prototype\r\n                 * @inner\r\n                 */var ServicePrototype=Service.prototype=Object.create(ProtoBuf.Builder.Service.prototype);/**\r\n                 * Asynchronously performs an RPC call using the given RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service.[Method]\r\n                 * @function\r\n                 * @param {!function(string, ProtoBuf.Builder.Message, function(Error, ProtoBuf.Builder.Message=))} rpcImpl RPC implementation\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 *//**\r\n                 * Asynchronously performs an RPC call using the instance's RPC implementation.\r\n                 * @name ProtoBuf.Builder.Service#[Method]\r\n                 * @function\r\n                 * @param {ProtoBuf.Builder.Message} req Request\r\n                 * @param {function(Error, (ProtoBuf.Builder.Message|ByteBuffer|Buffer|string)=)} callback Callback receiving\r\n                 *  the error if any and the response either as a pre-parsed message or as its raw bytes\r\n                 * @abstract\r\n                 */var rpc=T.getChildren(ProtoBuf.Reflect.Service.RPCMethod);for(var i=0;i<rpc.length;i++){(function(method){// service#Method(message, callback)\nServicePrototype[method.name]=function(req,callback){try{try{// If given as a buffer, decode the request. Will throw a TypeError if not a valid buffer.\nreq=method.resolvedRequestType.clazz.decode(ByteBuffer.wrap(req));}catch(err){if(!(err instanceof TypeError))throw err;}if(req===null||(typeof req===\"undefined\"?\"undefined\":_typeof(req))!=='object')throw Error(\"Illegal arguments\");if(!(req instanceof method.resolvedRequestType.clazz))req=new method.resolvedRequestType.clazz(req);this.rpcImpl(method.fqn(),req,function(err,res){// Assumes that this is properly async\nif(err){callback(err);return;}// Coalesce to empty string when service response has empty content\nif(res===null)res='';try{res=method.resolvedResponseType.clazz.decode(res);}catch(notABuffer){}if(!res||!(res instanceof method.resolvedResponseType.clazz)){callback(Error(\"Illegal response type received in service method \"+T.name+\"#\"+method.name));return;}callback(null,res);});}catch(err){setTimeout(callback.bind(this,err),0);}};// Service.Method(rpcImpl, message, callback)\nService[method.name]=function(rpcImpl,req,callback){new Service(rpcImpl)[method.name](req,callback);};if(Object.defineProperty)Object.defineProperty(Service[method.name],\"$options\",{\"value\":method.buildOpt()}),Object.defineProperty(ServicePrototype[method.name],\"$options\",{\"value\":Service[method.name][\"$options\"]});})(rpc[i]);}// Properties\n/**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service.$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */var $optionsS;// cc needs this\n/**\r\n                 * Service options.\r\n                 * @name ProtoBuf.Builder.Service#$options\r\n                 * @type {Object.<string,*>}\r\n                 * @expose\r\n                 */var $options;/**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service.$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */var $typeS;/**\r\n                 * Reflection type.\r\n                 * @name ProtoBuf.Builder.Service#$type\r\n                 * @type {!ProtoBuf.Reflect.Service}\r\n                 * @expose\r\n                 */var $type;if(Object.defineProperty)Object.defineProperty(Service,\"$options\",{\"value\":T.buildOpt()}),Object.defineProperty(ServicePrototype,\"$options\",{\"value\":Service[\"$options\"]}),Object.defineProperty(Service,\"$type\",{\"value\":T}),Object.defineProperty(ServicePrototype,\"$type\",{\"value\":T});return Service;}(ProtoBuf,this);};/**\r\n         * @alias ProtoBuf.Reflect.Service\r\n         * @expose\r\n         */Reflect.Service=Service;/**\r\n         * Abstract service method.\r\n         * @exports ProtoBuf.Reflect.Service.Method\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.T\r\n         */var Method=function Method(builder,svc,name,options){T.call(this,builder,svc,name);/**\r\n             * @override\r\n             */this.className=\"Service.Method\";/**\r\n             * Options.\r\n             * @type {Object.<string, *>}\r\n             * @expose\r\n             */this.options=options||{};};/**\r\n         * @alias ProtoBuf.Reflect.Service.Method.prototype\r\n         * @inner\r\n         */var MethodPrototype=Method.prototype=Object.create(T.prototype);/**\r\n         * Builds the method's '$options' property.\r\n         * @name ProtoBuf.Reflect.Service.Method#buildOpt\r\n         * @function\r\n         * @return {Object.<string,*>}\r\n         */MethodPrototype.buildOpt=NamespacePrototype.buildOpt;/**\r\n         * @alias ProtoBuf.Reflect.Service.Method\r\n         * @expose\r\n         */Reflect.Service.Method=Method;/**\r\n         * RPC service method.\r\n         * @exports ProtoBuf.Reflect.Service.RPCMethod\r\n         * @param {!ProtoBuf.Builder} builder Builder reference\r\n         * @param {!ProtoBuf.Reflect.Service} svc Service\r\n         * @param {string} name Method name\r\n         * @param {string} request Request message name\r\n         * @param {string} response Response message name\r\n         * @param {boolean} request_stream Whether requests are streamed\r\n         * @param {boolean} response_stream Whether responses are streamed\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         * @extends ProtoBuf.Reflect.Service.Method\r\n         */var RPCMethod=function RPCMethod(builder,svc,name,request,response,request_stream,response_stream,options){Method.call(this,builder,svc,name,options);/**\r\n             * @override\r\n             */this.className=\"Service.RPCMethod\";/**\r\n             * Request message name.\r\n             * @type {string}\r\n             * @expose\r\n             */this.requestName=request;/**\r\n             * Response message name.\r\n             * @type {string}\r\n             * @expose\r\n             */this.responseName=response;/**\r\n             * Whether requests are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */this.requestStream=request_stream;/**\r\n             * Whether responses are streamed\r\n             * @type {bool}\r\n             * @expose\r\n             */this.responseStream=response_stream;/**\r\n             * Resolved request message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */this.resolvedRequestType=null;/**\r\n             * Resolved response message type.\r\n             * @type {ProtoBuf.Reflect.Message}\r\n             * @expose\r\n             */this.resolvedResponseType=null;};// Extends Method\nRPCMethod.prototype=Object.create(Method.prototype);/**\r\n         * @alias ProtoBuf.Reflect.Service.RPCMethod\r\n         * @expose\r\n         */Reflect.Service.RPCMethod=RPCMethod;return Reflect;}(ProtoBuf);/**\r\n     * @alias ProtoBuf.Builder\r\n     * @expose\r\n     */ProtoBuf.Builder=function(ProtoBuf,Lang,Reflect){\"use strict\";/**\r\n         * Constructs a new Builder.\r\n         * @exports ProtoBuf.Builder\r\n         * @class Provides the functionality to build protocol messages.\r\n         * @param {Object.<string,*>=} options Options\r\n         * @constructor\r\n         */var Builder=function Builder(options){/**\r\n             * Namespace.\r\n             * @type {ProtoBuf.Reflect.Namespace}\r\n             * @expose\r\n             */this.ns=new Reflect.Namespace(this,null,\"\");// Global namespace\n/**\r\n             * Namespace pointer.\r\n             * @type {ProtoBuf.Reflect.T}\r\n             * @expose\r\n             */this.ptr=this.ns;/**\r\n             * Resolved flag.\r\n             * @type {boolean}\r\n             * @expose\r\n             */this.resolved=false;/**\r\n             * The current building result.\r\n             * @type {Object.<string,ProtoBuf.Builder.Message|Object>|null}\r\n             * @expose\r\n             */this.result=null;/**\r\n             * Imported files.\r\n             * @type {Array.<string>}\r\n             * @expose\r\n             */this.files={};/**\r\n             * Import root override.\r\n             * @type {?string}\r\n             * @expose\r\n             */this.importRoot=null;/**\r\n             * Options.\r\n             * @type {!Object.<string, *>}\r\n             * @expose\r\n             */this.options=options||{};};/**\r\n         * @alias ProtoBuf.Builder.prototype\r\n         * @inner\r\n         */var BuilderPrototype=Builder.prototype;// ----- Definition tests -----\n/**\r\n         * Tests if a definition most likely describes a message.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */Builder.isMessage=function(def){// Messages require a string name\nif(typeof def[\"name\"]!=='string')return false;// Messages do not contain values (enum) or rpc methods (service)\nif(typeof def[\"values\"]!=='undefined'||typeof def[\"rpc\"]!=='undefined')return false;return true;};/**\r\n         * Tests if a definition most likely describes a message field.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */Builder.isMessageField=function(def){// Message fields require a string rule, name and type and an id\nif(typeof def[\"rule\"]!=='string'||typeof def[\"name\"]!=='string'||typeof def[\"type\"]!=='string'||typeof def[\"id\"]==='undefined')return false;return true;};/**\r\n         * Tests if a definition most likely describes an enum.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */Builder.isEnum=function(def){// Enums require a string name\nif(typeof def[\"name\"]!=='string')return false;// Enums require at least one value\nif(typeof def[\"values\"]==='undefined'||!Array.isArray(def[\"values\"])||def[\"values\"].length===0)return false;return true;};/**\r\n         * Tests if a definition most likely describes a service.\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */Builder.isService=function(def){// Services require a string name and an rpc object\nif(typeof def[\"name\"]!=='string'||_typeof(def[\"rpc\"])!=='object'||!def[\"rpc\"])return false;return true;};/**\r\n         * Tests if a definition most likely describes an extended message\r\n         * @param {!Object} def\r\n         * @returns {boolean}\r\n         * @expose\r\n         */Builder.isExtend=function(def){// Extends rquire a string ref\nif(typeof def[\"ref\"]!=='string')return false;return true;};// ----- Building -----\n/**\r\n         * Resets the pointer to the root namespace.\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */BuilderPrototype.reset=function(){this.ptr=this.ns;return this;};/**\r\n         * Defines a namespace on top of the current pointer position and places the pointer on it.\r\n         * @param {string} namespace\r\n         * @return {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */BuilderPrototype.define=function(namespace){if(typeof namespace!=='string'||!Lang.TYPEREF.test(namespace))throw Error(\"illegal namespace: \"+namespace);namespace.split(\".\").forEach(function(part){var ns=this.ptr.getChild(part);if(ns===null)// Keep existing\nthis.ptr.addChild(ns=new Reflect.Namespace(this,this.ptr,part));this.ptr=ns;},this);return this;};/**\r\n         * Creates the specified definitions at the current pointer position.\r\n         * @param {!Array.<!Object>} defs Messages, enums or services to create\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If a message definition is invalid\r\n         * @expose\r\n         */BuilderPrototype.create=function(defs){if(!defs)return this;// Nothing to create\nif(!Array.isArray(defs))defs=[defs];else{if(defs.length===0)return this;defs=defs.slice();}// It's quite hard to keep track of scopes and memory here, so let's do this iteratively.\nvar stack=[defs];while(stack.length>0){defs=stack.pop();if(!Array.isArray(defs))// Stack always contains entire namespaces\nthrow Error(\"not a valid namespace: \"+JSON.stringify(defs));while(defs.length>0){var def=defs.shift();// Namespaces always contain an array of messages, enums and services\nif(Builder.isMessage(def)){var obj=new Reflect.Message(this,this.ptr,def[\"name\"],def[\"options\"],def[\"isGroup\"],def[\"syntax\"]);// Create OneOfs\nvar oneofs={};if(def[\"oneofs\"])Object.keys(def[\"oneofs\"]).forEach(function(name){obj.addChild(oneofs[name]=new Reflect.Message.OneOf(this,obj,name));},this);// Create fields\nif(def[\"fields\"])def[\"fields\"].forEach(function(fld){if(obj.getChild(fld[\"id\"]|0)!==null)throw Error(\"duplicate or invalid field id in \"+obj.name+\": \"+fld['id']);if(fld[\"options\"]&&_typeof(fld[\"options\"])!=='object')throw Error(\"illegal field options in \"+obj.name+\"#\"+fld[\"name\"]);var oneof=null;if(typeof fld[\"oneof\"]==='string'&&!(oneof=oneofs[fld[\"oneof\"]]))throw Error(\"illegal oneof in \"+obj.name+\"#\"+fld[\"name\"]+\": \"+fld[\"oneof\"]);fld=new Reflect.Message.Field(this,obj,fld[\"rule\"],fld[\"keytype\"],fld[\"type\"],fld[\"name\"],fld[\"id\"],fld[\"options\"],oneof,def[\"syntax\"]);if(oneof)oneof.fields.push(fld);obj.addChild(fld);},this);// Push children to stack\nvar subObj=[];if(def[\"enums\"])def[\"enums\"].forEach(function(enm){subObj.push(enm);});if(def[\"messages\"])def[\"messages\"].forEach(function(msg){subObj.push(msg);});if(def[\"services\"])def[\"services\"].forEach(function(svc){subObj.push(svc);});// Set extension ranges\nif(def[\"extensions\"]){if(typeof def[\"extensions\"][0]==='number')// pre 5.0.1\nobj.extensions=[def[\"extensions\"]];else obj.extensions=def[\"extensions\"];}// Create on top of current namespace\nthis.ptr.addChild(obj);if(subObj.length>0){stack.push(defs);// Push the current level back\ndefs=subObj;// Continue processing sub level\nsubObj=null;this.ptr=obj;// And move the pointer to this namespace\nobj=null;continue;}subObj=null;}else if(Builder.isEnum(def)){obj=new Reflect.Enum(this,this.ptr,def[\"name\"],def[\"options\"],def[\"syntax\"]);def[\"values\"].forEach(function(val){obj.addChild(new Reflect.Enum.Value(this,obj,val[\"name\"],val[\"id\"]));},this);this.ptr.addChild(obj);}else if(Builder.isService(def)){obj=new Reflect.Service(this,this.ptr,def[\"name\"],def[\"options\"]);Object.keys(def[\"rpc\"]).forEach(function(name){var mtd=def[\"rpc\"][name];obj.addChild(new Reflect.Service.RPCMethod(this,obj,name,mtd[\"request\"],mtd[\"response\"],!!mtd[\"request_stream\"],!!mtd[\"response_stream\"],mtd[\"options\"]));},this);this.ptr.addChild(obj);}else if(Builder.isExtend(def)){obj=this.ptr.resolve(def[\"ref\"],true);if(obj){def[\"fields\"].forEach(function(fld){if(obj.getChild(fld['id']|0)!==null)throw Error(\"duplicate extended field id in \"+obj.name+\": \"+fld['id']);// Check if field id is allowed to be extended\nif(obj.extensions){var valid=false;obj.extensions.forEach(function(range){if(fld[\"id\"]>=range[0]&&fld[\"id\"]<=range[1])valid=true;});if(!valid)throw Error(\"illegal extended field id in \"+obj.name+\": \"+fld['id']+\" (not within valid ranges)\");}// Convert extension field names to camel case notation if the override is set\nvar name=fld[\"name\"];if(this.options['convertFieldsToCamelCase'])name=ProtoBuf.Util.toCamelCase(name);// see #161: Extensions use their fully qualified name as their runtime key and...\nvar field=new Reflect.Message.ExtensionField(this,obj,fld[\"rule\"],fld[\"type\"],this.ptr.fqn()+'.'+name,fld[\"id\"],fld[\"options\"]);// ...are added on top of the current namespace as an extension which is used for\n// resolving their type later on (the extension always keeps the original name to\n// prevent naming collisions)\nvar ext=new Reflect.Extension(this,this.ptr,fld[\"name\"],field);field.extension=ext;this.ptr.addChild(ext);obj.addChild(field);},this);}else if(!/\\.?google\\.protobuf\\./.test(def[\"ref\"]))// Silently skip internal extensions\nthrow Error(\"extended message \"+def[\"ref\"]+\" is not defined\");}else throw Error(\"not a valid definition: \"+JSON.stringify(def));def=null;obj=null;}// Break goes here\ndefs=null;this.ptr=this.ptr.parent;// Namespace done, continue at parent\n}this.resolved=false;// Require re-resolve\nthis.result=null;// Require re-build\nreturn this;};/**\r\n         * Propagates syntax to all children.\r\n         * @param {!Object} parent\r\n         * @inner\r\n         */function propagateSyntax(parent){if(parent['messages']){parent['messages'].forEach(function(child){child[\"syntax\"]=parent[\"syntax\"];propagateSyntax(child);});}if(parent['enums']){parent['enums'].forEach(function(child){child[\"syntax\"]=parent[\"syntax\"];});}}/**\r\n         * Imports another definition into this builder.\r\n         * @param {Object.<string,*>} json Parsed import\r\n         * @param {(string|{root: string, file: string})=} filename Imported file name\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @throws {Error} If the definition or file cannot be imported\r\n         * @expose\r\n         */BuilderPrototype[\"import\"]=function(json,filename){var delim='/';// Make sure to skip duplicate imports\nif(typeof filename==='string'){if(ProtoBuf.Util.IS_NODE)filename=__webpack_require__(8)['resolve'](filename);if(this.files[filename]===true)return this.reset();this.files[filename]=true;}else if((typeof filename===\"undefined\"?\"undefined\":_typeof(filename))==='object'){// Object with root, file.\nvar root=filename.root;if(ProtoBuf.Util.IS_NODE)root=__webpack_require__(8)['resolve'](root);if(root.indexOf(\"\\\\\")>=0||filename.file.indexOf(\"\\\\\")>=0)delim='\\\\';var fname=root+delim+filename.file;if(this.files[fname]===true)return this.reset();this.files[fname]=true;}// Import imports\nif(json['imports']&&json['imports'].length>0){var importRoot,resetRoot=false;if((typeof filename===\"undefined\"?\"undefined\":_typeof(filename))==='object'){// If an import root is specified, override\nthis.importRoot=filename[\"root\"];resetRoot=true;// ... and reset afterwards\nimportRoot=this.importRoot;filename=filename[\"file\"];if(importRoot.indexOf(\"\\\\\")>=0||filename.indexOf(\"\\\\\")>=0)delim='\\\\';}else if(typeof filename==='string'){if(this.importRoot)// If import root is overridden, use it\nimportRoot=this.importRoot;else{// Otherwise compute from filename\nif(filename.indexOf(\"/\")>=0){// Unix\nimportRoot=filename.replace(/\\/[^\\/]*$/,\"\");if(/* /file.proto */importRoot===\"\")importRoot=\"/\";}else if(filename.indexOf(\"\\\\\")>=0){// Windows\nimportRoot=filename.replace(/\\\\[^\\\\]*$/,\"\");delim='\\\\';}else importRoot=\".\";}}else importRoot=null;for(var i=0;i<json['imports'].length;i++){if(typeof json['imports'][i]==='string'){// Import file\nif(!importRoot)throw Error(\"cannot determine import root\");var importFilename=json['imports'][i];if(importFilename===\"google/protobuf/descriptor.proto\")continue;// Not needed and therefore not used\nimportFilename=importRoot+delim+importFilename;if(this.files[importFilename]===true)continue;// Already imported\nif(/\\.proto$/i.test(importFilename)&&!ProtoBuf.DotProto)// If this is a light build\nimportFilename=importFilename.replace(/\\.proto$/,\".json\");// always load the JSON file\nvar contents=ProtoBuf.Util.fetch(importFilename);if(contents===null)throw Error(\"failed to import '\"+importFilename+\"' in '\"+filename+\"': file not found\");if(/\\.json$/i.test(importFilename))// Always possible\nthis[\"import\"](JSON.parse(contents+\"\"),importFilename);// May throw\nelse this[\"import\"](ProtoBuf.DotProto.Parser.parse(contents),importFilename);// May throw\n}else// Import structure\nif(!filename)this[\"import\"](json['imports'][i]);else if(/\\.(\\w+)$/.test(filename))// With extension: Append _importN to the name portion to make it unique\nthis[\"import\"](json['imports'][i],filename.replace(/^(.+)\\.(\\w+)$/,function($0,$1,$2){return $1+\"_import\"+i+\".\"+$2;}));else// Without extension: Append _importN to make it unique\nthis[\"import\"](json['imports'][i],filename+\"_import\"+i);}if(resetRoot)// Reset import root override when all imports are done\nthis.importRoot=null;}// Import structures\nif(json['package'])this.define(json['package']);if(json['syntax'])propagateSyntax(json);var base=this.ptr;if(json['options'])Object.keys(json['options']).forEach(function(key){base.options[key]=json['options'][key];});if(json['messages'])this.create(json['messages']),this.ptr=base;if(json['enums'])this.create(json['enums']),this.ptr=base;if(json['services'])this.create(json['services']),this.ptr=base;if(json['extends'])this.create(json['extends']);return this.reset();};/**\r\n         * Resolves all namespace objects.\r\n         * @throws {Error} If a type cannot be resolved\r\n         * @returns {!ProtoBuf.Builder} this\r\n         * @expose\r\n         */BuilderPrototype.resolveAll=function(){// Resolve all reflected objects\nvar res;if(this.ptr==null||_typeof(this.ptr.type)==='object')return this;// Done (already resolved)\nif(this.ptr instanceof Reflect.Namespace){// Resolve children\nthis.ptr.children.forEach(function(child){this.ptr=child;this.resolveAll();},this);}else if(this.ptr instanceof Reflect.Message.Field){// Resolve type\nif(!Lang.TYPE.test(this.ptr.type)){if(!Lang.TYPEREF.test(this.ptr.type))throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);res=(this.ptr instanceof Reflect.Message.ExtensionField?this.ptr.extension.parent:this.ptr.parent).resolve(this.ptr.type,true);if(!res)throw Error(\"unresolvable type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);this.ptr.resolvedType=res;if(res instanceof Reflect.Enum){this.ptr.type=ProtoBuf.TYPES[\"enum\"];if(this.ptr.syntax==='proto3'&&res.syntax!=='proto3')throw Error(\"proto3 message cannot reference proto2 enum\");}else if(res instanceof Reflect.Message)this.ptr.type=res.isGroup?ProtoBuf.TYPES[\"group\"]:ProtoBuf.TYPES[\"message\"];else throw Error(\"illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.type);}else this.ptr.type=ProtoBuf.TYPES[this.ptr.type];// If it's a map field, also resolve the key type. The key type can be only a numeric, string, or bool type\n// (i.e., no enums or messages), so we don't need to resolve against the current namespace.\nif(this.ptr.map){if(!Lang.TYPE.test(this.ptr.keyType))throw Error(\"illegal key type for map field in \"+this.ptr.toString(true)+\": \"+this.ptr.keyType);this.ptr.keyType=ProtoBuf.TYPES[this.ptr.keyType];}}else if(this.ptr instanceof ProtoBuf.Reflect.Service.Method){if(this.ptr instanceof ProtoBuf.Reflect.Service.RPCMethod){res=this.ptr.parent.resolve(this.ptr.requestName,true);if(!res||!(res instanceof ProtoBuf.Reflect.Message))throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.requestName);this.ptr.resolvedRequestType=res;res=this.ptr.parent.resolve(this.ptr.responseName,true);if(!res||!(res instanceof ProtoBuf.Reflect.Message))throw Error(\"Illegal type reference in \"+this.ptr.toString(true)+\": \"+this.ptr.responseName);this.ptr.resolvedResponseType=res;}else// Should not happen as nothing else is implemented\nthrow Error(\"illegal service type in \"+this.ptr.toString(true));}else if(!(this.ptr instanceof ProtoBuf.Reflect.Message.OneOf)&&// Not built\n!(this.ptr instanceof ProtoBuf.Reflect.Extension)&&// Not built\n!(this.ptr instanceof ProtoBuf.Reflect.Enum.Value)// Built in enum\n)throw Error(\"illegal object in namespace: \"+_typeof(this.ptr)+\": \"+this.ptr);return this.reset();};/**\r\n         * Builds the protocol. This will first try to resolve all definitions and, if this has been successful,\r\n         * return the built package.\r\n         * @param {(string|Array.<string>)=} path Specifies what to return. If omitted, the entire namespace will be returned.\r\n         * @returns {!ProtoBuf.Builder.Message|!Object.<string,*>}\r\n         * @throws {Error} If a type could not be resolved\r\n         * @expose\r\n         */BuilderPrototype.build=function(path){this.reset();if(!this.resolved)this.resolveAll(),this.resolved=true,this.result=null;// Require re-build\nif(this.result===null)// (Re-)Build\nthis.result=this.ns.build();if(!path)return this.result;var part=typeof path==='string'?path.split(\".\"):path,ptr=this.result;// Build namespace pointer (no hasChild etc.)\nfor(var i=0;i<part.length;i++){if(ptr[part[i]])ptr=ptr[part[i]];else{ptr=null;break;}}return ptr;};/**\r\n         * Similar to {@link ProtoBuf.Builder#build}, but looks up the internal reflection descriptor.\r\n         * @param {string=} path Specifies what to return. If omitted, the entire namespace wiil be returned.\r\n         * @param {boolean=} excludeNonNamespace Excludes non-namespace types like fields, defaults to `false`\r\n         * @returns {?ProtoBuf.Reflect.T} Reflection descriptor or `null` if not found\r\n         */BuilderPrototype.lookup=function(path,excludeNonNamespace){return path?this.ns.resolve(path,excludeNonNamespace):this.ns;};/**\r\n         * Returns a string representation of this object.\r\n         * @return {string} String representation as of \"Builder\"\r\n         * @expose\r\n         */BuilderPrototype.toString=function(){return\"Builder\";};// ----- Base classes -----\n// Exist for the sole purpose of being able to \"... instanceof ProtoBuf.Builder.Message\" etc.\n/**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */Builder.Message=function(){};/**\r\n         * @alias ProtoBuf.Builder.Enum\r\n         */Builder.Enum=function(){};/**\r\n         * @alias ProtoBuf.Builder.Message\r\n         */Builder.Service=function(){};return Builder;}(ProtoBuf,ProtoBuf.Lang,ProtoBuf.Reflect);/**\r\n     * @alias ProtoBuf.Map\r\n     * @expose\r\n     */ProtoBuf.Map=function(ProtoBuf,Reflect){\"use strict\";/**\r\n         * Constructs a new Map. A Map is a container that is used to implement map\r\n         * fields on message objects. It closely follows the ES6 Map API; however,\r\n         * it is distinct because we do not want to depend on external polyfills or\r\n         * on ES6 itself.\r\n         *\r\n         * @exports ProtoBuf.Map\r\n         * @param {!ProtoBuf.Reflect.Field} field Map field\r\n         * @param {Object.<string,*>=} contents Initial contents\r\n         * @constructor\r\n         */var Map=function Map(field,contents){if(!field.map)throw Error(\"field is not a map\");/**\r\n             * The field corresponding to this map.\r\n             * @type {!ProtoBuf.Reflect.Field}\r\n             */this.field=field;/**\r\n             * Element instance corresponding to key type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */this.keyElem=new Reflect.Element(field.keyType,null,true,field.syntax);/**\r\n             * Element instance corresponding to value type.\r\n             * @type {!ProtoBuf.Reflect.Element}\r\n             */this.valueElem=new Reflect.Element(field.type,field.resolvedType,false,field.syntax);/**\r\n             * Internal map: stores mapping of (string form of key) -> (key, value)\r\n             * pair.\r\n             *\r\n             * We provide map semantics for arbitrary key types, but we build on top\r\n             * of an Object, which has only string keys. In order to avoid the need\r\n             * to convert a string key back to its native type in many situations,\r\n             * we store the native key value alongside the value. Thus, we only need\r\n             * a one-way mapping from a key type to its string form that guarantees\r\n             * uniqueness and equality (i.e., str(K1) === str(K2) if and only if K1\r\n             * === K2).\r\n             *\r\n             * @type {!Object<string, {key: *, value: *}>}\r\n             */this.map={};/**\r\n             * Returns the number of elements in the map.\r\n             */Object.defineProperty(this,\"size\",{get:function get(){return Object.keys(this.map).length;}});// Fill initial contents from a raw object.\nif(contents){var keys=Object.keys(contents);for(var i=0;i<keys.length;i++){var key=this.keyElem.valueFromString(keys[i]);var val=this.valueElem.verifyValue(contents[keys[i]]);this.map[this.keyElem.valueToString(key)]={key:key,value:val};}}};var MapPrototype=Map.prototype;/**\r\n         * Helper: return an iterator over an array.\r\n         * @param {!Array<*>} arr the array\r\n         * @returns {!Object} an iterator\r\n         * @inner\r\n         */function arrayIterator(arr){var idx=0;return{next:function next(){if(idx<arr.length)return{done:false,value:arr[idx++]};return{done:true};}};}/**\r\n         * Clears the map.\r\n         */MapPrototype.clear=function(){this.map={};};/**\r\n         * Deletes a particular key from the map.\r\n         * @returns {boolean} Whether any entry with this key was deleted.\r\n         */MapPrototype[\"delete\"]=function(key){var keyValue=this.keyElem.valueToString(this.keyElem.verifyValue(key));var hadKey=keyValue in this.map;delete this.map[keyValue];return hadKey;};/**\r\n         * Returns an iterator over [key, value] pairs in the map.\r\n         * @returns {Object} The iterator\r\n         */MapPrototype.entries=function(){var entries=[];var strKeys=Object.keys(this.map);for(var i=0,entry;i<strKeys.length;i++){entries.push([(entry=this.map[strKeys[i]]).key,entry.value]);}return arrayIterator(entries);};/**\r\n         * Returns an iterator over keys in the map.\r\n         * @returns {Object} The iterator\r\n         */MapPrototype.keys=function(){var keys=[];var strKeys=Object.keys(this.map);for(var i=0;i<strKeys.length;i++){keys.push(this.map[strKeys[i]].key);}return arrayIterator(keys);};/**\r\n         * Returns an iterator over values in the map.\r\n         * @returns {!Object} The iterator\r\n         */MapPrototype.values=function(){var values=[];var strKeys=Object.keys(this.map);for(var i=0;i<strKeys.length;i++){values.push(this.map[strKeys[i]].value);}return arrayIterator(values);};/**\r\n         * Iterates over entries in the map, calling a function on each.\r\n         * @param {function(this:*, *, *, *)} cb The callback to invoke with value, key, and map arguments.\r\n         * @param {Object=} thisArg The `this` value for the callback\r\n         */MapPrototype.forEach=function(cb,thisArg){var strKeys=Object.keys(this.map);for(var i=0,entry;i<strKeys.length;i++){cb.call(thisArg,(entry=this.map[strKeys[i]]).value,entry.key,this);}};/**\r\n         * Sets a key in the map to the given value.\r\n         * @param {*} key The key\r\n         * @param {*} value The value\r\n         * @returns {!ProtoBuf.Map} The map instance\r\n         */MapPrototype.set=function(key,value){var keyValue=this.keyElem.verifyValue(key);var valValue=this.valueElem.verifyValue(value);this.map[this.keyElem.valueToString(keyValue)]={key:keyValue,value:valValue};return this;};/**\r\n         * Gets the value corresponding to a key in the map.\r\n         * @param {*} key The key\r\n         * @returns {*|undefined} The value, or `undefined` if key not present\r\n         */MapPrototype.get=function(key){var keyValue=this.keyElem.valueToString(this.keyElem.verifyValue(key));if(!(keyValue in this.map))return undefined;return this.map[keyValue].value;};/**\r\n         * Determines whether the given key is present in the map.\r\n         * @param {*} key The key\r\n         * @returns {boolean} `true` if the key is present\r\n         */MapPrototype.has=function(key){var keyValue=this.keyElem.valueToString(this.keyElem.verifyValue(key));return keyValue in this.map;};return Map;}(ProtoBuf,ProtoBuf.Reflect);/**\r\n     * Loads a .proto string and returns the Builder.\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */ProtoBuf.loadProto=function(proto,builder,filename){if(typeof builder==='string'||builder&&typeof builder[\"file\"]==='string'&&typeof builder[\"root\"]==='string')filename=builder,builder=undefined;return ProtoBuf.loadJson(ProtoBuf.DotProto.Parser.parse(proto),builder,filename);};/**\r\n     * Loads a .proto string and returns the Builder. This is an alias of {@link ProtoBuf.loadProto}.\r\n     * @function\r\n     * @param {string} proto .proto file contents\r\n     * @param {(ProtoBuf.Builder|string)=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */ProtoBuf.protoFromString=ProtoBuf.loadProto;// Legacy\n/**\r\n     * Loads a .proto file and returns the Builder.\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */ProtoBuf.loadProtoFile=function(filename,callback,builder){if(callback&&(typeof callback===\"undefined\"?\"undefined\":_typeof(callback))==='object')builder=callback,callback=null;else if(!callback||typeof callback!=='function')callback=null;if(callback)return ProtoBuf.Util.fetch(typeof filename==='string'?filename:filename[\"root\"]+\"/\"+filename[\"file\"],function(contents){if(contents===null){callback(Error(\"Failed to fetch file\"));return;}try{callback(null,ProtoBuf.loadProto(contents,builder,filename));}catch(e){callback(e);}});var contents=ProtoBuf.Util.fetch((typeof filename===\"undefined\"?\"undefined\":_typeof(filename))==='object'?filename[\"root\"]+\"/\"+filename[\"file\"]:filename);return contents===null?null:ProtoBuf.loadProto(contents,builder,filename);};/**\r\n     * Loads a .proto file and returns the Builder. This is an alias of {@link ProtoBuf.loadProtoFile}.\r\n     * @function\r\n     * @param {string|{root: string, file: string}} filename Path to proto file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {!ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */ProtoBuf.protoFromFile=ProtoBuf.loadProtoFile;// Legacy\n/**\r\n     * Constructs a new empty Builder.\r\n     * @param {Object.<string,*>=} options Builder options, defaults to global options set on ProtoBuf\r\n     * @return {!ProtoBuf.Builder} Builder\r\n     * @expose\r\n     */ProtoBuf.newBuilder=function(options){options=options||{};if(typeof options['convertFieldsToCamelCase']==='undefined')options['convertFieldsToCamelCase']=ProtoBuf.convertFieldsToCamelCase;if(typeof options['populateAccessors']==='undefined')options['populateAccessors']=ProtoBuf.populateAccessors;return new ProtoBuf.Builder(options);};/**\r\n     * Loads a .json definition and returns the Builder.\r\n     * @param {!*|string} json JSON definition\r\n     * @param {(ProtoBuf.Builder|string|{root: string, file: string})=} builder Builder to append to. Will create a new one if omitted.\r\n     * @param {(string|{root: string, file: string})=} filename The corresponding file name if known. Must be specified for imports.\r\n     * @return {ProtoBuf.Builder} Builder to create new messages\r\n     * @throws {Error} If the definition cannot be parsed or built\r\n     * @expose\r\n     */ProtoBuf.loadJson=function(json,builder,filename){if(typeof builder==='string'||builder&&typeof builder[\"file\"]==='string'&&typeof builder[\"root\"]==='string')filename=builder,builder=null;if(!builder||(typeof builder===\"undefined\"?\"undefined\":_typeof(builder))!=='object')builder=ProtoBuf.newBuilder();if(typeof json==='string')json=JSON.parse(json);builder[\"import\"](json,filename);builder.resolveAll();return builder;};/**\r\n     * Loads a .json file and returns the Builder.\r\n     * @param {string|!{root: string, file: string}} filename Path to json file or an object specifying 'file' with\r\n     *  an overridden 'root' path for all imported files.\r\n     * @param {function(?Error, !ProtoBuf.Builder=)=} callback Callback that will receive `null` as the first and\r\n     *  the Builder as its second argument on success, otherwise the error as its first argument. If omitted, the\r\n     *  file will be read synchronously and this function will return the Builder.\r\n     * @param {ProtoBuf.Builder=} builder Builder to append to. Will create a new one if omitted.\r\n     * @return {?ProtoBuf.Builder|undefined} The Builder if synchronous (no callback specified, will be NULL if the\r\n     *   request has failed), else undefined\r\n     * @expose\r\n     */ProtoBuf.loadJsonFile=function(filename,callback,builder){if(callback&&(typeof callback===\"undefined\"?\"undefined\":_typeof(callback))==='object')builder=callback,callback=null;else if(!callback||typeof callback!=='function')callback=null;if(callback)return ProtoBuf.Util.fetch(typeof filename==='string'?filename:filename[\"root\"]+\"/\"+filename[\"file\"],function(contents){if(contents===null){callback(Error(\"Failed to fetch file\"));return;}try{callback(null,ProtoBuf.loadJson(JSON.parse(contents),builder,filename));}catch(e){callback(e);}});var contents=ProtoBuf.Util.fetch((typeof filename===\"undefined\"?\"undefined\":_typeof(filename))==='object'?filename[\"root\"]+\"/\"+filename[\"file\"]:filename);return contents===null?null:ProtoBuf.loadJson(JSON.parse(contents),builder,filename);};return ProtoBuf;});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/protobufjs/dist/protobuf.js\n ** module id = 1\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///./~/protobufjs/dist/protobuf.js?");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("'use strict';\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n    try {\n        cachedSetTimeout = setTimeout;\n    } catch (e) {\n        cachedSetTimeout = function cachedSetTimeout() {\n            throw new Error('setTimeout is not defined');\n        };\n    }\n    try {\n        cachedClearTimeout = clearTimeout;\n    } catch (e) {\n        cachedClearTimeout = function cachedClearTimeout() {\n            throw new Error('clearTimeout is not defined');\n        };\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 2\n ** module chunks = 0 1 2 3\n **/\n//# sourceURL=webpack:///./~/process/browser.js?");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 3\n ** module chunks = 0 1 2 3\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-define.js\n ** module id = 4\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///(webpack)/buildin/amd-define.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n *//**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer: ArrayBuffer, Accessor: Uint8Array\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */(function(global,factory){/* AMD */if(\"function\"==='function'&&__webpack_require__(4)[\"amd\"])!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(6)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));/* CommonJS */else if(\"function\"==='function'&&( false?\"undefined\":_typeof(module))===\"object\"&&module&&module[\"exports\"])module['exports']=function(){var Long;try{Long=__webpack_require__(6);}catch(e){}return factory(Long);}();/* Global */else(global[\"dcodeIO\"]=global[\"dcodeIO\"]||{})[\"ByteBuffer\"]=factory(global[\"dcodeIO\"][\"Long\"]);})(undefined,function(Long){\"use strict\";/**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */var ByteBuffer=function ByteBuffer(capacity,littleEndian,noAssert){if(typeof capacity==='undefined')capacity=ByteBuffer.DEFAULT_CAPACITY;if(typeof littleEndian==='undefined')littleEndian=ByteBuffer.DEFAULT_ENDIAN;if(typeof noAssert==='undefined')noAssert=ByteBuffer.DEFAULT_NOASSERT;if(!noAssert){capacity=capacity|0;if(capacity<0)throw RangeError(\"Illegal capacity\");littleEndian=!!littleEndian;noAssert=!!noAssert;}/**\r\n         * Backing ArrayBuffer.\r\n         * @type {!ArrayBuffer}\r\n         * @expose\r\n         */this.buffer=capacity===0?EMPTY_BUFFER:new ArrayBuffer(capacity);/**\r\n         * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.\r\n         * @type {?Uint8Array}\r\n         * @expose\r\n         */this.view=capacity===0?null:new Uint8Array(this.buffer);/**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */this.offset=0;/**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */this.markedOffset=-1;/**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */this.limit=capacity;/**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */this.littleEndian=littleEndian;/**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */this.noAssert=noAssert;};/**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.VERSION=\"5.0.1\";/**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.LITTLE_ENDIAN=true;/**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.BIG_ENDIAN=false;/**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */ByteBuffer.DEFAULT_CAPACITY=16;/**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */ByteBuffer.DEFAULT_ENDIAN=ByteBuffer.BIG_ENDIAN;/**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */ByteBuffer.DEFAULT_NOASSERT=false;/**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded\r\n     *  and int64 support is not available.\r\n     * @type {?Long}\r\n     * @const\r\n     * @see https://github.com/dcodeIO/long.js\r\n     * @expose\r\n     */ByteBuffer.Long=Long||null;/**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */var ByteBufferPrototype=ByteBuffer.prototype;/**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */ByteBufferPrototype.__isByteBuffer__;Object.defineProperty(ByteBufferPrototype,\"__isByteBuffer__\",{value:true,enumerable:false,configurable:false});// helpers\n/**\r\n     * @type {!ArrayBuffer}\r\n     * @inner\r\n     */var EMPTY_BUFFER=new ArrayBuffer(0);/**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */var stringFromCharCode=String.fromCharCode;/**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */function stringSource(s){var i=0;return function(){return i<s.length?s.charCodeAt(i++):null;};}/**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */function stringDestination(){var cs=[],ps=[];return function(){if(arguments.length===0)return ps.join('')+stringFromCharCode.apply(String,cs);if(cs.length+arguments.length>1024)ps.push(stringFromCharCode.apply(String,cs)),cs.length=0;Array.prototype.push.apply(cs,arguments);};}/**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */ByteBuffer.accessor=function(){return Uint8Array;};/**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */ByteBuffer.allocate=function(capacity,littleEndian,noAssert){return new ByteBuffer(capacity,littleEndian,noAssert);};/**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */ByteBuffer.concat=function(buffers,encoding,littleEndian,noAssert){if(typeof encoding==='boolean'||typeof encoding!=='string'){noAssert=littleEndian;littleEndian=encoding;encoding=undefined;}var capacity=0;for(var i=0,k=buffers.length,length;i<k;++i){if(!ByteBuffer.isByteBuffer(buffers[i]))buffers[i]=ByteBuffer.wrap(buffers[i],encoding);length=buffers[i].limit-buffers[i].offset;if(length>0)capacity+=length;}if(capacity===0)return new ByteBuffer(0,littleEndian,noAssert);var bb=new ByteBuffer(capacity,littleEndian,noAssert),bi;i=0;while(i<k){bi=buffers[i++];length=bi.limit-bi.offset;if(length<=0)continue;bb.view.set(bi.view.subarray(bi.offset,bi.limit),bb.offset);bb.offset+=length;}bb.limit=bb.offset;bb.offset=0;return bb;};/**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */ByteBuffer.isByteBuffer=function(bb){return(bb&&bb[\"__isByteBuffer__\"])===true;};/**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */ByteBuffer.type=function(){return ArrayBuffer;};/**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */ByteBuffer.wrap=function(buffer,encoding,littleEndian,noAssert){if(typeof encoding!=='string'){noAssert=littleEndian;littleEndian=encoding;encoding=undefined;}if(typeof buffer==='string'){if(typeof encoding==='undefined')encoding=\"utf8\";switch(encoding){case\"base64\":return ByteBuffer.fromBase64(buffer,littleEndian);case\"hex\":return ByteBuffer.fromHex(buffer,littleEndian);case\"binary\":return ByteBuffer.fromBinary(buffer,littleEndian);case\"utf8\":return ByteBuffer.fromUTF8(buffer,littleEndian);case\"debug\":return ByteBuffer.fromDebug(buffer,littleEndian);default:throw Error(\"Unsupported encoding: \"+encoding);}}if(buffer===null||(typeof buffer===\"undefined\"?\"undefined\":_typeof(buffer))!=='object')throw TypeError(\"Illegal buffer\");var bb;if(ByteBuffer.isByteBuffer(buffer)){bb=ByteBufferPrototype.clone.call(buffer);bb.markedOffset=-1;return bb;}if(buffer instanceof Uint8Array){// Extract ArrayBuffer from Uint8Array\nbb=new ByteBuffer(0,littleEndian,noAssert);if(buffer.length>0){// Avoid references to more than one EMPTY_BUFFER\nbb.buffer=buffer.buffer;bb.offset=buffer.byteOffset;bb.limit=buffer.byteOffset+buffer.byteLength;bb.view=new Uint8Array(buffer.buffer);}}else if(buffer instanceof ArrayBuffer){// Reuse ArrayBuffer\nbb=new ByteBuffer(0,littleEndian,noAssert);if(buffer.byteLength>0){bb.buffer=buffer;bb.offset=0;bb.limit=buffer.byteLength;bb.view=buffer.byteLength>0?new Uint8Array(buffer):null;}}else if(Object.prototype.toString.call(buffer)===\"[object Array]\"){// Create from octets\nbb=new ByteBuffer(buffer.length,littleEndian,noAssert);bb.limit=buffer.length;for(var i=0;i<buffer.length;++i){bb.view[i]=buffer[i];}}else throw TypeError(\"Illegal buffer\");// Otherwise fail\nreturn bb;};/**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */ByteBufferPrototype.writeBitSet=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(!(value instanceof Array))throw TypeError(\"Illegal BitSet: Not an array\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var start=offset,bits=value.length,bytes=bits>>3,bit=0,k;offset+=this.writeVarint32(bits,offset);while(bytes--){k=!!value[bit++]&1|(!!value[bit++]&1)<<1|(!!value[bit++]&1)<<2|(!!value[bit++]&1)<<3|(!!value[bit++]&1)<<4|(!!value[bit++]&1)<<5|(!!value[bit++]&1)<<6|(!!value[bit++]&1)<<7;this.writeByte(k,offset++);}if(bit<bits){var m=0;k=0;while(bit<bits){k=k|(!!value[bit++]&1)<<m++;}this.writeByte(k,offset++);}if(relative){this.offset=offset;return this;}return offset-start;};/**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */ByteBufferPrototype.readBitSet=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;var ret=this.readVarint32(offset),bits=ret.value,bytes=bits>>3,bit=0,value=[],k;offset+=ret.length;while(bytes--){k=this.readByte(offset++);value[bit++]=!!(k&0x01);value[bit++]=!!(k&0x02);value[bit++]=!!(k&0x04);value[bit++]=!!(k&0x08);value[bit++]=!!(k&0x10);value[bit++]=!!(k&0x20);value[bit++]=!!(k&0x40);value[bit++]=!!(k&0x80);}if(bit<bits){var m=0;k=this.readByte(offset++);while(bit<bits){value[bit++]=!!(k>>m++&1);}}if(relative){this.offset=offset;}return value;};/**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */ByteBufferPrototype.readBytes=function(length,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+length>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);}var slice=this.slice(offset,offset+length);if(relative)this.offset+=length;return slice;};/**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeBytes=ByteBufferPrototype.append;// types/ints/int8\n/**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeInt8=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value|=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=1;var capacity0=this.buffer.byteLength;if(offset>capacity0)this.resize((capacity0*=2)>offset?capacity0:offset);offset-=1;this.view[offset]=value;if(relative)this.offset+=1;return this;};/**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeByte=ByteBufferPrototype.writeInt8;/**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readInt8=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}var value=this.view[offset];if((value&0x80)===0x80)value=-(0xFF-value+1);// Cast to signed\nif(relative)this.offset+=1;return value;};/**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readByte=ByteBufferPrototype.readInt8;/**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeUint8=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value>>>=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=1;var capacity1=this.buffer.byteLength;if(offset>capacity1)this.resize((capacity1*=2)>offset?capacity1:offset);offset-=1;this.view[offset]=value;if(relative)this.offset+=1;return this;};/**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeUInt8=ByteBufferPrototype.writeUint8;/**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readUint8=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}var value=this.view[offset];if(relative)this.offset+=1;return value;};/**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readUInt8=ByteBufferPrototype.readUint8;// types/ints/int16\n/**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.writeInt16=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value|=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=2;var capacity2=this.buffer.byteLength;if(offset>capacity2)this.resize((capacity2*=2)>offset?capacity2:offset);offset-=2;if(this.littleEndian){this.view[offset+1]=(value&0xFF00)>>>8;this.view[offset]=value&0x00FF;}else{this.view[offset]=(value&0xFF00)>>>8;this.view[offset+1]=value&0x00FF;}if(relative)this.offset+=2;return this;};/**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.writeShort=ByteBufferPrototype.writeInt16;/**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.readInt16=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+2>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);}var value=0;if(this.littleEndian){value=this.view[offset];value|=this.view[offset+1]<<8;}else{value=this.view[offset]<<8;value|=this.view[offset+1];}if((value&0x8000)===0x8000)value=-(0xFFFF-value+1);// Cast to signed\nif(relative)this.offset+=2;return value;};/**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.readShort=ByteBufferPrototype.readInt16;/**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.writeUint16=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value>>>=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=2;var capacity3=this.buffer.byteLength;if(offset>capacity3)this.resize((capacity3*=2)>offset?capacity3:offset);offset-=2;if(this.littleEndian){this.view[offset+1]=(value&0xFF00)>>>8;this.view[offset]=value&0x00FF;}else{this.view[offset]=(value&0xFF00)>>>8;this.view[offset+1]=value&0x00FF;}if(relative)this.offset+=2;return this;};/**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.writeUInt16=ByteBufferPrototype.writeUint16;/**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.readUint16=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+2>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.byteLength);}var value=0;if(this.littleEndian){value=this.view[offset];value|=this.view[offset+1]<<8;}else{value=this.view[offset]<<8;value|=this.view[offset+1];}if(relative)this.offset+=2;return value;};/**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.readUInt16=ByteBufferPrototype.readUint16;// types/ints/int32\n/**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */ByteBufferPrototype.writeInt32=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value|=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=4;var capacity4=this.buffer.byteLength;if(offset>capacity4)this.resize((capacity4*=2)>offset?capacity4:offset);offset-=4;if(this.littleEndian){this.view[offset+3]=value>>>24&0xFF;this.view[offset+2]=value>>>16&0xFF;this.view[offset+1]=value>>>8&0xFF;this.view[offset]=value&0xFF;}else{this.view[offset]=value>>>24&0xFF;this.view[offset+1]=value>>>16&0xFF;this.view[offset+2]=value>>>8&0xFF;this.view[offset+3]=value&0xFF;}if(relative)this.offset+=4;return this;};/**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */ByteBufferPrototype.writeInt=ByteBufferPrototype.writeInt32;/**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readInt32=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+4>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);}var value=0;if(this.littleEndian){value=this.view[offset+2]<<16;value|=this.view[offset+1]<<8;value|=this.view[offset];value+=this.view[offset+3]<<24>>>0;}else{value=this.view[offset+1]<<16;value|=this.view[offset+2]<<8;value|=this.view[offset+3];value+=this.view[offset]<<24>>>0;}value|=0;// Cast to signed\nif(relative)this.offset+=4;return value;};/**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readInt=ByteBufferPrototype.readInt32;/**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */ByteBufferPrototype.writeUint32=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value>>>=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=4;var capacity5=this.buffer.byteLength;if(offset>capacity5)this.resize((capacity5*=2)>offset?capacity5:offset);offset-=4;if(this.littleEndian){this.view[offset+3]=value>>>24&0xFF;this.view[offset+2]=value>>>16&0xFF;this.view[offset+1]=value>>>8&0xFF;this.view[offset]=value&0xFF;}else{this.view[offset]=value>>>24&0xFF;this.view[offset+1]=value>>>16&0xFF;this.view[offset+2]=value>>>8&0xFF;this.view[offset+3]=value&0xFF;}if(relative)this.offset+=4;return this;};/**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */ByteBufferPrototype.writeUInt32=ByteBufferPrototype.writeUint32;/**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readUint32=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+4>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);}var value=0;if(this.littleEndian){value=this.view[offset+2]<<16;value|=this.view[offset+1]<<8;value|=this.view[offset];value+=this.view[offset+3]<<24>>>0;}else{value=this.view[offset+1]<<16;value|=this.view[offset+2]<<8;value|=this.view[offset+3];value+=this.view[offset]<<24>>>0;}if(relative)this.offset+=4;return value;};/**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */ByteBufferPrototype.readUInt32=ByteBufferPrototype.readUint32;// types/ints/int64\nif(Long){/**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */ByteBufferPrototype.writeInt64=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);else if(!(value&&value instanceof Long))throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);offset+=8;var capacity6=this.buffer.byteLength;if(offset>capacity6)this.resize((capacity6*=2)>offset?capacity6:offset);offset-=8;var lo=value.low,hi=value.high;if(this.littleEndian){this.view[offset+3]=lo>>>24&0xFF;this.view[offset+2]=lo>>>16&0xFF;this.view[offset+1]=lo>>>8&0xFF;this.view[offset]=lo&0xFF;offset+=4;this.view[offset+3]=hi>>>24&0xFF;this.view[offset+2]=hi>>>16&0xFF;this.view[offset+1]=hi>>>8&0xFF;this.view[offset]=hi&0xFF;}else{this.view[offset]=hi>>>24&0xFF;this.view[offset+1]=hi>>>16&0xFF;this.view[offset+2]=hi>>>8&0xFF;this.view[offset+3]=hi&0xFF;offset+=4;this.view[offset]=lo>>>24&0xFF;this.view[offset+1]=lo>>>16&0xFF;this.view[offset+2]=lo>>>8&0xFF;this.view[offset+3]=lo&0xFF;}if(relative)this.offset+=8;return this;};/**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */ByteBufferPrototype.writeLong=ByteBufferPrototype.writeInt64;/**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */ByteBufferPrototype.readInt64=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+8>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);}var lo=0,hi=0;if(this.littleEndian){lo=this.view[offset+2]<<16;lo|=this.view[offset+1]<<8;lo|=this.view[offset];lo+=this.view[offset+3]<<24>>>0;offset+=4;hi=this.view[offset+2]<<16;hi|=this.view[offset+1]<<8;hi|=this.view[offset];hi+=this.view[offset+3]<<24>>>0;}else{hi=this.view[offset+1]<<16;hi|=this.view[offset+2]<<8;hi|=this.view[offset+3];hi+=this.view[offset]<<24>>>0;offset+=4;lo=this.view[offset+1]<<16;lo|=this.view[offset+2]<<8;lo|=this.view[offset+3];lo+=this.view[offset]<<24>>>0;}var value=new Long(lo,hi,false);if(relative)this.offset+=8;return value;};/**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */ByteBufferPrototype.readLong=ByteBufferPrototype.readInt64;/**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */ByteBufferPrototype.writeUint64=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);else if(!(value&&value instanceof Long))throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);offset+=8;var capacity7=this.buffer.byteLength;if(offset>capacity7)this.resize((capacity7*=2)>offset?capacity7:offset);offset-=8;var lo=value.low,hi=value.high;if(this.littleEndian){this.view[offset+3]=lo>>>24&0xFF;this.view[offset+2]=lo>>>16&0xFF;this.view[offset+1]=lo>>>8&0xFF;this.view[offset]=lo&0xFF;offset+=4;this.view[offset+3]=hi>>>24&0xFF;this.view[offset+2]=hi>>>16&0xFF;this.view[offset+1]=hi>>>8&0xFF;this.view[offset]=hi&0xFF;}else{this.view[offset]=hi>>>24&0xFF;this.view[offset+1]=hi>>>16&0xFF;this.view[offset+2]=hi>>>8&0xFF;this.view[offset+3]=hi&0xFF;offset+=4;this.view[offset]=lo>>>24&0xFF;this.view[offset+1]=lo>>>16&0xFF;this.view[offset+2]=lo>>>8&0xFF;this.view[offset+3]=lo&0xFF;}if(relative)this.offset+=8;return this;};/**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */ByteBufferPrototype.writeUInt64=ByteBufferPrototype.writeUint64;/**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */ByteBufferPrototype.readUint64=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+8>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);}var lo=0,hi=0;if(this.littleEndian){lo=this.view[offset+2]<<16;lo|=this.view[offset+1]<<8;lo|=this.view[offset];lo+=this.view[offset+3]<<24>>>0;offset+=4;hi=this.view[offset+2]<<16;hi|=this.view[offset+1]<<8;hi|=this.view[offset];hi+=this.view[offset+3]<<24>>>0;}else{hi=this.view[offset+1]<<16;hi|=this.view[offset+2]<<8;hi|=this.view[offset+3];hi+=this.view[offset]<<24>>>0;offset+=4;lo=this.view[offset+1]<<16;lo|=this.view[offset+2]<<8;lo|=this.view[offset+3];lo+=this.view[offset]<<24>>>0;}var value=new Long(lo,hi,true);if(relative)this.offset+=8;return value;};/**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */ByteBufferPrototype.readUInt64=ByteBufferPrototype.readUint64;}// Long\n// types/floats/float32\n/*\r\n     ieee754 - https://github.com/feross/ieee754\r\n\r\n     The MIT License (MIT)\r\n\r\n     Copyright (c) Feross Aboukhadijeh\r\n\r\n     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n     of this software and associated documentation files (the \"Software\"), to deal\r\n     in the Software without restriction, including without limitation the rights\r\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n     copies of the Software, and to permit persons to whom the Software is\r\n     furnished to do so, subject to the following conditions:\r\n\r\n     The above copyright notice and this permission notice shall be included in\r\n     all copies or substantial portions of the Software.\r\n\r\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n     THE SOFTWARE.\r\n    *//**\r\n     * Reads an IEEE754 float from a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @returns {number}\r\n     * @inner\r\n     */function ieee754_read(buffer,offset,isLE,mLen,nBytes){var e,m,eLen=nBytes*8-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,nBits=-7,i=isLE?nBytes-1:0,d=isLE?-1:1,s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);}/**\r\n     * Writes an IEEE754 float to a byte array.\r\n     * @param {!Array} buffer\r\n     * @param {number} value\r\n     * @param {number} offset\r\n     * @param {boolean} isLE\r\n     * @param {number} mLen\r\n     * @param {number} nBytes\r\n     * @inner\r\n     */function ieee754_write(buffer,value,offset,isLE,mLen,nBytes){var e,m,c,eLen=nBytes*8-mLen-1,eMax=(1<<eLen)-1,eBias=eMax>>1,rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0,i=isLE?0:nBytes-1,d=isLE?1:-1,s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;}/**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeFloat32=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number')throw TypeError(\"Illegal value: \"+value+\" (not a number)\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=4;var capacity8=this.buffer.byteLength;if(offset>capacity8)this.resize((capacity8*=2)>offset?capacity8:offset);offset-=4;ieee754_write(this.view,value,offset,this.littleEndian,23,4);if(relative)this.offset+=4;return this;};/**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeFloat=ByteBufferPrototype.writeFloat32;/**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */ByteBufferPrototype.readFloat32=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+4>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);}var value=ieee754_read(this.view,offset,this.littleEndian,23,4);if(relative)this.offset+=4;return value;};/**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */ByteBufferPrototype.readFloat=ByteBufferPrototype.readFloat32;// types/floats/float64\n/**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeFloat64=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number')throw TypeError(\"Illegal value: \"+value+\" (not a number)\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}offset+=8;var capacity9=this.buffer.byteLength;if(offset>capacity9)this.resize((capacity9*=2)>offset?capacity9:offset);offset-=8;ieee754_write(this.view,value,offset,this.littleEndian,52,8);if(relative)this.offset+=8;return this;};/**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.writeDouble=ByteBufferPrototype.writeFloat64;/**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */ByteBufferPrototype.readFloat64=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+8>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.byteLength);}var value=ieee754_read(this.view,offset,this.littleEndian,52,8);if(relative)this.offset+=8;return value;};/**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */ByteBufferPrototype.readDouble=ByteBufferPrototype.readFloat64;// types/varints/varint32\n/**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.MAX_VARINT32_BYTES=5;/**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */ByteBuffer.calculateVarint32=function(value){// ref: src/google/protobuf/io/coded_stream.cc\nvalue=value>>>0;if(value<1<<7)return 1;else if(value<1<<14)return 2;else if(value<1<<21)return 3;else if(value<1<<28)return 4;else return 5;};/**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */ByteBuffer.zigZagEncode32=function(n){return((n|=0)<<1^n>>31)>>>0;// ref: src/google/protobuf/wire_format_lite.h\n};/**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */ByteBuffer.zigZagDecode32=function(n){return n>>>1^-(n&1)|0;// // ref: src/google/protobuf/wire_format_lite.h\n};/**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */ByteBufferPrototype.writeVarint32=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value|=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var size=ByteBuffer.calculateVarint32(value),b;offset+=size;var capacity10=this.buffer.byteLength;if(offset>capacity10)this.resize((capacity10*=2)>offset?capacity10:offset);offset-=size;value>>>=0;while(value>=0x80){b=value&0x7f|0x80;this.view[offset++]=b;value>>>=7;}this.view[offset++]=value;if(relative){this.offset=offset;return this;}return size;};/**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */ByteBufferPrototype.writeVarint32ZigZag=function(value,offset){return this.writeVarint32(ByteBuffer.zigZagEncode32(value),offset);};/**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */ByteBufferPrototype.readVarint32=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}var c=0,value=0>>>0,b;do{if(!this.noAssert&&offset>this.limit){var err=Error(\"Truncated\");err['truncated']=true;throw err;}b=this.view[offset++];if(c<5)value|=(b&0x7f)<<7*c;++c;}while((b&0x80)!==0);value|=0;if(relative){this.offset=offset;return value;}return{\"value\":value,\"length\":c};};/**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */ByteBufferPrototype.readVarint32ZigZag=function(offset){var val=this.readVarint32(offset);if((typeof val===\"undefined\"?\"undefined\":_typeof(val))==='object')val[\"value\"]=ByteBuffer.zigZagDecode32(val[\"value\"]);else val=ByteBuffer.zigZagDecode32(val);return val;};// types/varints/varint64\nif(Long){/**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */ByteBuffer.MAX_VARINT64_BYTES=10;/**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */ByteBuffer.calculateVarint64=function(value){if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);// ref: src/google/protobuf/io/coded_stream.cc\nvar part0=value.toInt()>>>0,part1=value.shiftRightUnsigned(28).toInt()>>>0,part2=value.shiftRightUnsigned(56).toInt()>>>0;if(part2==0){if(part1==0){if(part0<1<<14)return part0<1<<7?1:2;else return part0<1<<21?3:4;}else{if(part1<1<<14)return part1<1<<7?5:6;else return part1<1<<21?7:8;}}else return part2<1<<7?9:10;};/**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */ByteBuffer.zigZagEncode64=function(value){if(typeof value==='number')value=Long.fromNumber(value,false);else if(typeof value==='string')value=Long.fromString(value,false);else if(value.unsigned!==false)value=value.toSigned();// ref: src/google/protobuf/wire_format_lite.h\nreturn value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();};/**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */ByteBuffer.zigZagDecode64=function(value){if(typeof value==='number')value=Long.fromNumber(value,false);else if(typeof value==='string')value=Long.fromString(value,false);else if(value.unsigned!==false)value=value.toSigned();// ref: src/google/protobuf/wire_format_lite.h\nreturn value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();};/**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */ByteBufferPrototype.writeVarint64=function(value,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof value==='number')value=Long.fromNumber(value);else if(typeof value==='string')value=Long.fromString(value);else if(!(value&&value instanceof Long))throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}if(typeof value==='number')value=Long.fromNumber(value,false);else if(typeof value==='string')value=Long.fromString(value,false);else if(value.unsigned!==false)value=value.toSigned();var size=ByteBuffer.calculateVarint64(value),part0=value.toInt()>>>0,part1=value.shiftRightUnsigned(28).toInt()>>>0,part2=value.shiftRightUnsigned(56).toInt()>>>0;offset+=size;var capacity11=this.buffer.byteLength;if(offset>capacity11)this.resize((capacity11*=2)>offset?capacity11:offset);offset-=size;switch(size){case 10:this.view[offset+9]=part2>>>7&0x01;case 9:this.view[offset+8]=size!==9?part2|0x80:part2&0x7F;case 8:this.view[offset+7]=size!==8?part1>>>21|0x80:part1>>>21&0x7F;case 7:this.view[offset+6]=size!==7?part1>>>14|0x80:part1>>>14&0x7F;case 6:this.view[offset+5]=size!==6?part1>>>7|0x80:part1>>>7&0x7F;case 5:this.view[offset+4]=size!==5?part1|0x80:part1&0x7F;case 4:this.view[offset+3]=size!==4?part0>>>21|0x80:part0>>>21&0x7F;case 3:this.view[offset+2]=size!==3?part0>>>14|0x80:part0>>>14&0x7F;case 2:this.view[offset+1]=size!==2?part0>>>7|0x80:part0>>>7&0x7F;case 1:this.view[offset]=size!==1?part0|0x80:part0&0x7F;}if(relative){this.offset+=size;return this;}else{return size;}};/**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */ByteBufferPrototype.writeVarint64ZigZag=function(value,offset){return this.writeVarint64(ByteBuffer.zigZagEncode64(value),offset);};/**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */ByteBufferPrototype.readVarint64=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}// ref: src/google/protobuf/io/coded_stream.cc\nvar start=offset,part0=0,part1=0,part2=0,b=0;b=this.view[offset++];part0=b&0x7F;if(b&0x80){b=this.view[offset++];part0|=(b&0x7F)<<7;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part0|=(b&0x7F)<<14;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part0|=(b&0x7F)<<21;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part1=b&0x7F;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part1|=(b&0x7F)<<7;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part1|=(b&0x7F)<<14;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part1|=(b&0x7F)<<21;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part2=b&0x7F;if(b&0x80||this.noAssert&&typeof b==='undefined'){b=this.view[offset++];part2|=(b&0x7F)<<7;if(b&0x80||this.noAssert&&typeof b==='undefined'){throw Error(\"Buffer overrun\");}}}}}}}}}}var value=Long.fromBits(part0|part1<<28,part1>>>4|part2<<24,false);if(relative){this.offset=offset;return value;}else{return{'value':value,'length':offset-start};}};/**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */ByteBufferPrototype.readVarint64ZigZag=function(offset){var val=this.readVarint64(offset);if(val&&val['value']instanceof Long)val[\"value\"]=ByteBuffer.zigZagDecode64(val[\"value\"]);else val=ByteBuffer.zigZagDecode64(val);return val;};}// Long\n// types/strings/cstring\n/**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */ByteBufferPrototype.writeCString=function(str,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;var i,k=str.length;if(!this.noAssert){if(typeof str!=='string')throw TypeError(\"Illegal str: Not a string\");for(i=0;i<k;++i){if(str.charCodeAt(i)===0)throw RangeError(\"Illegal str: Contains NULL-characters\");}if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}// UTF8 strings do not contain zero bytes in between except for the zero character, so:\nk=utfx.calculateUTF16asUTF8(stringSource(str))[1];offset+=k+1;var capacity12=this.buffer.byteLength;if(offset>capacity12)this.resize((capacity12*=2)>offset?capacity12:offset);offset-=k+1;utfx.encodeUTF16toUTF8(stringSource(str),function(b){this.view[offset++]=b;}.bind(this));this.view[offset++]=0;if(relative){this.offset=offset;return this;}return k;};/**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */ByteBufferPrototype.readCString=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}var start=offset,temp;// UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\nvar sd,b=-1;utfx.decodeUTF8toUTF16(function(){if(b===0)return null;if(offset>=this.limit)throw RangeError(\"Illegal range: Truncated data, \"+offset+\" < \"+this.limit);b=this.view[offset++];return b===0?null:b;}.bind(this),sd=stringDestination(),true);if(relative){this.offset=offset;return sd();}else{return{\"string\":sd(),\"length\":offset-start};}};// types/strings/istring\n/**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */ByteBufferPrototype.writeIString=function(str,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof str!=='string')throw TypeError(\"Illegal str: Not a string\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var start=offset,k;k=utfx.calculateUTF16asUTF8(stringSource(str),this.noAssert)[1];offset+=4+k;var capacity13=this.buffer.byteLength;if(offset>capacity13)this.resize((capacity13*=2)>offset?capacity13:offset);offset-=4+k;if(this.littleEndian){this.view[offset+3]=k>>>24&0xFF;this.view[offset+2]=k>>>16&0xFF;this.view[offset+1]=k>>>8&0xFF;this.view[offset]=k&0xFF;}else{this.view[offset]=k>>>24&0xFF;this.view[offset+1]=k>>>16&0xFF;this.view[offset+2]=k>>>8&0xFF;this.view[offset+3]=k&0xFF;}offset+=4;utfx.encodeUTF16toUTF8(stringSource(str),function(b){this.view[offset++]=b;}.bind(this));if(offset!==start+4+k)throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+4+k));if(relative){this.offset=offset;return this;}return offset-start;};/**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */ByteBufferPrototype.readIString=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+4>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.byteLength);}var start=offset;var len=this.readUint32(offset);var str=this.readUTF8String(len,ByteBuffer.METRICS_BYTES,offset+=4);offset+=str['length'];if(relative){this.offset=offset;return str['string'];}else{return{'string':str['string'],'length':offset-start};}};// types/strings/utf8string\n/**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.METRICS_CHARS='c';/**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */ByteBuffer.METRICS_BYTES='b';/**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */ByteBufferPrototype.writeUTF8String=function(str,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var k;var start=offset;k=utfx.calculateUTF16asUTF8(stringSource(str))[1];offset+=k;var capacity14=this.buffer.byteLength;if(offset>capacity14)this.resize((capacity14*=2)>offset?capacity14:offset);offset-=k;utfx.encodeUTF16toUTF8(stringSource(str),function(b){this.view[offset++]=b;}.bind(this));if(relative){this.offset=offset;return this;}return offset-start;};/**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */ByteBufferPrototype.writeString=ByteBufferPrototype.writeUTF8String;/**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */ByteBuffer.calculateUTF8Chars=function(str){return utfx.calculateUTF16asUTF8(stringSource(str))[0];};/**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */ByteBuffer.calculateUTF8Bytes=function(str){return utfx.calculateUTF16asUTF8(stringSource(str))[1];};/**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */ByteBuffer.calculateString=ByteBuffer.calculateUTF8Bytes;/**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */ByteBufferPrototype.readUTF8String=function(length,metrics,offset){if(typeof metrics==='number'){offset=metrics;metrics=undefined;}var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(typeof metrics==='undefined')metrics=ByteBuffer.METRICS_CHARS;if(!this.noAssert){if(typeof length!=='number'||length%1!==0)throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");length|=0;if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var i=0,start=offset,sd;if(metrics===ByteBuffer.METRICS_CHARS){// The same for node and the browser\nsd=stringDestination();utfx.decodeUTF8(function(){return i<length&&offset<this.limit?this.view[offset++]:null;}.bind(this),function(cp){++i;utfx.UTF8toUTF16(cp,sd);});if(i!==length)throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);if(relative){this.offset=offset;return sd();}else{return{\"string\":sd(),\"length\":offset-start};}}else if(metrics===ByteBuffer.METRICS_BYTES){if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+length>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.byteLength);}var k=offset+length;utfx.decodeUTF8toUTF16(function(){return offset<k?this.view[offset++]:null;}.bind(this),sd=stringDestination(),this.noAssert);if(offset!==k)throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+k);if(relative){this.offset=offset;return sd();}else{return{'string':sd(),'length':offset-start};}}else throw TypeError(\"Unsupported metrics: \"+metrics);};/**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */ByteBufferPrototype.readString=ByteBufferPrototype.readUTF8String;// types/strings/vstring\n/**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */ByteBufferPrototype.writeVString=function(str,offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof str!=='string')throw TypeError(\"Illegal str: Not a string\");if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}var start=offset,k,l;k=utfx.calculateUTF16asUTF8(stringSource(str),this.noAssert)[1];l=ByteBuffer.calculateVarint32(k);offset+=l+k;var capacity15=this.buffer.byteLength;if(offset>capacity15)this.resize((capacity15*=2)>offset?capacity15:offset);offset-=l+k;offset+=this.writeVarint32(k,offset);utfx.encodeUTF16toUTF8(stringSource(str),function(b){this.view[offset++]=b;}.bind(this));if(offset!==start+k+l)throw RangeError(\"Illegal range: Truncated data, \"+offset+\" == \"+(offset+k+l));if(relative){this.offset=offset;return this;}return offset-start;};/**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */ByteBufferPrototype.readVString=function(offset){var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+1>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.byteLength);}var start=offset;var len=this.readVarint32(offset);var str=this.readUTF8String(len['value'],ByteBuffer.METRICS_BYTES,offset+=len['length']);offset+=str['length'];if(relative){this.offset=offset;return str['string'];}else{return{'string':str['string'],'length':offset-start};}};/**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets\r\n     *  will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */ByteBufferPrototype.append=function(source,encoding,offset){if(typeof encoding==='number'||typeof encoding!=='string'){offset=encoding;encoding=undefined;}var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}if(!(source instanceof ByteBuffer))source=ByteBuffer.wrap(source,encoding);var length=source.limit-source.offset;if(length<=0)return this;// Nothing to append\noffset+=length;var capacity16=this.buffer.byteLength;if(offset>capacity16)this.resize((capacity16*=2)>offset?capacity16:offset);offset-=length;this.view.set(source.view.subarray(source.offset,source.limit),offset);source.offset+=length;if(relative)this.offset+=length;return this;};/**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */ByteBufferPrototype.appendTo=function(target,offset){target.append(this,offset);return this;};/**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.assert=function(assert){this.noAssert=!assert;return this;};/**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */ByteBufferPrototype.capacity=function(){return this.buffer.byteLength;};/**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.clear=function(){this.offset=0;this.limit=this.buffer.byteLength;this.markedOffset=-1;return this;};/**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */ByteBufferPrototype.clone=function(copy){var bb=new ByteBuffer(0,this.littleEndian,this.noAssert);if(copy){bb.buffer=new ArrayBuffer(this.buffer.byteLength);bb.view=new Uint8Array(bb.buffer);}else{bb.buffer=this.buffer;bb.view=this.view;}bb.offset=this.offset;bb.markedOffset=this.markedOffset;bb.limit=this.limit;return bb;};/**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.compact=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}if(begin===0&&end===this.buffer.byteLength)return this;// Already compacted\nvar len=end-begin;if(len===0){this.buffer=EMPTY_BUFFER;this.view=null;if(this.markedOffset>=0)this.markedOffset-=begin;this.offset=0;this.limit=0;return this;}var buffer=new ArrayBuffer(len);var view=new Uint8Array(buffer);view.set(this.view.subarray(begin,end));this.buffer=buffer;this.view=view;if(this.markedOffset>=0)this.markedOffset-=begin;this.offset=0;this.limit=len;return this;};/**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */ByteBufferPrototype.copy=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}if(begin===end)return new ByteBuffer(0,this.littleEndian,this.noAssert);var capacity=end-begin,bb=new ByteBuffer(capacity,this.littleEndian,this.noAssert);bb.offset=0;bb.limit=capacity;if(bb.markedOffset>=0)bb.markedOffset-=begin;this.copyTo(bb,0,begin,end);return bb;};/**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.copyTo=function(target,targetOffset,sourceOffset,sourceLimit){var relative,targetRelative;if(!this.noAssert){if(!ByteBuffer.isByteBuffer(target))throw TypeError(\"Illegal target: Not a ByteBuffer\");}targetOffset=(targetRelative=typeof targetOffset==='undefined')?target.offset:targetOffset|0;sourceOffset=(relative=typeof sourceOffset==='undefined')?this.offset:sourceOffset|0;sourceLimit=typeof sourceLimit==='undefined'?this.limit:sourceLimit|0;if(targetOffset<0||targetOffset>target.buffer.byteLength)throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.byteLength);if(sourceOffset<0||sourceLimit>this.buffer.byteLength)throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.byteLength);var len=sourceLimit-sourceOffset;if(len===0)return target;// Nothing to copy\ntarget.ensureCapacity(targetOffset+len);target.view.set(this.view.subarray(sourceOffset,sourceLimit),targetOffset);if(relative)this.offset+=len;if(targetRelative)target.offset+=len;return this;};/**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.ensureCapacity=function(capacity){var current=this.buffer.byteLength;if(current<capacity)return this.resize((current*=2)>capacity?current:capacity);return this;};/**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */ByteBufferPrototype.fill=function(value,begin,end){var relative=typeof begin==='undefined';if(relative)begin=this.offset;if(typeof value==='string'&&value.length>0)value=value.charCodeAt(0);if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof value!=='number'||value%1!==0)throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");value|=0;if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}if(begin>=end)return this;// Nothing to fill\nwhile(begin<end){this.view[begin++]=value;}if(relative)this.offset=begin;return this;};/**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.flip=function(){this.limit=this.offset;this.offset=0;return this;};/**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */ByteBufferPrototype.mark=function(offset){offset=typeof offset==='undefined'?this.offset:offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}this.markedOffset=offset;return this;};/**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.order=function(littleEndian){if(!this.noAssert){if(typeof littleEndian!=='boolean')throw TypeError(\"Illegal littleEndian: Not a boolean\");}this.littleEndian=!!littleEndian;return this;};/**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.LE=function(littleEndian){this.littleEndian=typeof littleEndian!=='undefined'?!!littleEndian:true;return this;};/**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.BE=function(bigEndian){this.littleEndian=typeof bigEndian!=='undefined'?!bigEndian:false;return this;};/**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be\r\n     *  modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */ByteBufferPrototype.prepend=function(source,encoding,offset){if(typeof encoding==='number'||typeof encoding!=='string'){offset=encoding;encoding=undefined;}var relative=typeof offset==='undefined';if(relative)offset=this.offset;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");offset>>>=0;if(offset<0||offset+0>this.buffer.byteLength)throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.byteLength);}if(!(source instanceof ByteBuffer))source=ByteBuffer.wrap(source,encoding);var len=source.limit-source.offset;if(len<=0)return this;// Nothing to prepend\nvar diff=len-offset;if(diff>0){// Not enough space before offset, so resize + move\nvar buffer=new ArrayBuffer(this.buffer.byteLength+diff);var view=new Uint8Array(buffer);view.set(this.view.subarray(offset,this.buffer.byteLength),len);this.buffer=buffer;this.view=view;this.offset+=diff;if(this.markedOffset>=0)this.markedOffset+=diff;this.limit+=diff;offset+=diff;}else{var arrayView=new Uint8Array(this.buffer);}this.view.set(source.view.subarray(source.offset,source.limit),offset-len);source.offset=source.limit;if(relative)this.offset-=len;return this;};/**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */ByteBufferPrototype.prependTo=function(target,offset){target.prepend(this,offset);return this;};/**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */ByteBufferPrototype.printDebug=function(out){if(typeof out!=='function')out=console.log.bind(console);out(this.toString()+\"\\n\"+\"-------------------------------------------------------------------\\n\"+this.toDebug(/* columns */true));};/**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */ByteBufferPrototype.remaining=function(){return this.limit-this.offset;};/**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */ByteBufferPrototype.reset=function(){if(this.markedOffset>=0){this.offset=this.markedOffset;this.markedOffset=-1;}else{this.offset=0;}return this;};/**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */ByteBufferPrototype.resize=function(capacity){if(!this.noAssert){if(typeof capacity!=='number'||capacity%1!==0)throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");capacity|=0;if(capacity<0)throw RangeError(\"Illegal capacity: 0 <= \"+capacity);}if(this.buffer.byteLength<capacity){var buffer=new ArrayBuffer(capacity);var view=new Uint8Array(buffer);view.set(this.view);this.buffer=buffer;this.view=view;}return this;};/**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.reverse=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}if(begin===end)return this;// Nothing to reverse\nArray.prototype.reverse.call(this.view.subarray(begin,end));return this;};/**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */ByteBufferPrototype.skip=function(length){if(!this.noAssert){if(typeof length!=='number'||length%1!==0)throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");length|=0;}var offset=this.offset+length;if(!this.noAssert){if(offset<0||offset>this.buffer.byteLength)throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.byteLength);}this.offset=offset;return this;};/**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */ByteBufferPrototype.slice=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}var bb=this.clone();bb.offset=begin;bb.limit=end;return bb;};/**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */ByteBufferPrototype.toBuffer=function(forceCopy){var offset=this.offset,limit=this.limit;if(!this.noAssert){if(typeof offset!=='number'||offset%1!==0)throw TypeError(\"Illegal offset: Not an integer\");offset>>>=0;if(typeof limit!=='number'||limit%1!==0)throw TypeError(\"Illegal limit: Not an integer\");limit>>>=0;if(offset<0||offset>limit||limit>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.byteLength);}// NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is\n// possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:\nif(!forceCopy&&offset===0&&limit===this.buffer.byteLength)return this.buffer;if(offset===limit)return EMPTY_BUFFER;var buffer=new ArrayBuffer(limit-offset);new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset,limit),0);return buffer;};/**\r\n     * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}.\r\n     * @function\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory.\r\n     *  Defaults to `false`\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     * @expose\r\n     */ByteBufferPrototype.toArrayBuffer=ByteBufferPrototype.toBuffer;/**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */ByteBufferPrototype.toString=function(encoding,begin,end){if(typeof encoding==='undefined')return\"ByteBufferAB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";if(typeof encoding==='number')encoding=\"utf8\",begin=encoding,end=begin;switch(encoding){case\"utf8\":return this.toUTF8(begin,end);case\"base64\":return this.toBase64(begin,end);case\"hex\":return this.toHex(begin,end);case\"binary\":return this.toBinary(begin,end);case\"debug\":return this.toDebug();case\"columns\":return this.toColumns();default:throw Error(\"Unsupported encoding: \"+encoding);}};// lxiv-embeddable\n/**\r\n     * lxiv-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/lxiv for details\r\n     */var lxiv=function(){\"use strict\";/**\r\n         * lxiv namespace.\r\n         * @type {!Object.<string,*>}\r\n         * @exports lxiv\r\n         */var lxiv={};/**\r\n         * Character codes for output.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */var aout=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47];/**\r\n         * Character codes for input.\r\n         * @type {!Array.<number>}\r\n         * @inner\r\n         */var ain=[];for(var i=0,k=aout.length;i<k;++i){ain[aout[i]]=i;}/**\r\n         * Encodes bytes to base64 char codes.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if\r\n         *  there are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each encoded char\r\n         *  code.\r\n         */lxiv.encode=function(src,dst){var b,t;while((b=src())!==null){dst(aout[b>>2&0x3f]);t=(b&0x3)<<4;if((b=src())!==null){t|=b>>4&0xf;dst(aout[(t|b>>4&0xf)&0x3f]);t=(b&0xf)<<2;if((b=src())!==null)dst(aout[(t|b>>6&0x3)&0x3f]),dst(aout[b&0x3f]);else dst(aout[t&0x3f]),dst(61);}else dst(aout[t&0x3f]),dst(61),dst(61);}};/**\r\n         * Decodes base64 char codes to bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         * @throws {Error} If a character code is invalid\r\n         */lxiv.decode=function(src,dst){var c,t1,t2;function fail(c){throw Error(\"Illegal character code: \"+c);}while((c=src())!==null){t1=ain[c];if(typeof t1==='undefined')fail(c);if((c=src())!==null){t2=ain[c];if(typeof t2==='undefined')fail(c);dst(t1<<2>>>0|(t2&0x30)>>4);if((c=src())!==null){t1=ain[c];if(typeof t1==='undefined')if(c===61)break;else fail(c);dst((t2&0xf)<<4>>>0|(t1&0x3c)>>2);if((c=src())!==null){t2=ain[c];if(typeof t2==='undefined')if(c===61)break;else fail(c);dst((t1&0x3)<<6>>>0|t2);}}}}};/**\r\n         * Tests if a string is valid base64.\r\n         * @param {string} str String to test\r\n         * @returns {boolean} `true` if valid, otherwise `false`\r\n         */lxiv.test=function(str){return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str);};return lxiv;}();// encodings/base64\n/**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */ByteBufferPrototype.toBase64=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;begin=begin|0;end=end|0;if(begin<0||end>this.capacity||begin>end)throw RangeError(\"begin, end\");var sd;lxiv.encode(function(){return begin<end?this.view[begin++]:null;}.bind(this),sd=stringDestination());return sd();};/**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */ByteBuffer.fromBase64=function(str,littleEndian){if(typeof str!=='string')throw TypeError(\"str\");var bb=new ByteBuffer(str.length/4*3,littleEndian),i=0;lxiv.decode(stringSource(str),function(b){bb.view[i++]=b;});bb.limit=i;return bb;};/**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */ByteBuffer.btoa=function(str){return ByteBuffer.fromBinary(str).toBase64();};/**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */ByteBuffer.atob=function(b64){return ByteBuffer.fromBase64(b64).toBinary();};// encodings/binary\n/**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */ByteBufferPrototype.toBinary=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;begin|=0;end|=0;if(begin<0||end>this.capacity()||begin>end)throw RangeError(\"begin, end\");if(begin===end)return\"\";var chars=[],parts=[];while(begin<end){chars.push(this.view[begin++]);if(chars.length>=1024)parts.push(String.fromCharCode.apply(String,chars)),chars=[];}return parts.join('')+String.fromCharCode.apply(String,chars);};/**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */ByteBuffer.fromBinary=function(str,littleEndian){if(typeof str!=='string')throw TypeError(\"str\");var i=0,k=str.length,charCode,bb=new ByteBuffer(k,littleEndian);while(i<k){charCode=str.charCodeAt(i);if(charCode>0xff)throw RangeError(\"illegal char code: \"+charCode);bb.view[i++]=charCode;}bb.limit=k;return bb;};// encodings/debug\n/**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */ByteBufferPrototype.toDebug=function(columns){var i=-1,k=this.buffer.byteLength,b,hex=\"\",asc=\"\",out=\"\";while(i<k){if(i!==-1){b=this.view[i];if(b<0x10)hex+=\"0\"+b.toString(16).toUpperCase();else hex+=b.toString(16).toUpperCase();if(columns)asc+=b>32&&b<127?String.fromCharCode(b):'.';}++i;if(columns){if(i>0&&i%16===0&&i!==k){while(hex.length<3*16+3){hex+=\" \";}out+=hex+asc+\"\\n\";hex=asc=\"\";}}if(i===this.offset&&i===this.limit)hex+=i===this.markedOffset?\"!\":\"|\";else if(i===this.offset)hex+=i===this.markedOffset?\"[\":\"<\";else if(i===this.limit)hex+=i===this.markedOffset?\"]\":\">\";else hex+=i===this.markedOffset?\"'\":columns||i!==0&&i!==k?\" \":\"\";}if(columns&&hex!==\" \"){while(hex.length<3*16+3){hex+=\" \";}out+=hex+asc+\"\\n\";}return columns?out:hex;};/**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */ByteBuffer.fromDebug=function(str,littleEndian,noAssert){var k=str.length,bb=new ByteBuffer((k+1)/3|0,littleEndian,noAssert);var i=0,j=0,ch,b,rs=false,// Require symbol next\nho=false,hm=false,hl=false,// Already has offset (ho), markedOffset (hm), limit (hl)?\nfail=false;while(i<k){switch(ch=str.charAt(i++)){case'!':if(!noAssert){if(ho||hm||hl){fail=true;break;}ho=hm=hl=true;}bb.offset=bb.markedOffset=bb.limit=j;rs=false;break;case'|':if(!noAssert){if(ho||hl){fail=true;break;}ho=hl=true;}bb.offset=bb.limit=j;rs=false;break;case'[':if(!noAssert){if(ho||hm){fail=true;break;}ho=hm=true;}bb.offset=bb.markedOffset=j;rs=false;break;case'<':if(!noAssert){if(ho){fail=true;break;}ho=true;}bb.offset=j;rs=false;break;case']':if(!noAssert){if(hl||hm){fail=true;break;}hl=hm=true;}bb.limit=bb.markedOffset=j;rs=false;break;case'>':if(!noAssert){if(hl){fail=true;break;}hl=true;}bb.limit=j;rs=false;break;case\"'\":if(!noAssert){if(hm){fail=true;break;}hm=true;}bb.markedOffset=j;rs=false;break;case' ':rs=false;break;default:if(!noAssert){if(rs){fail=true;break;}}b=parseInt(ch+str.charAt(i++),16);if(!noAssert){if(isNaN(b)||b<0||b>255)throw TypeError(\"Illegal str: Not a debug encoded string\");}bb.view[j++]=b;rs=true;}if(fail)throw TypeError(\"Illegal str: Invalid symbol at \"+i);}if(!noAssert){if(!ho||!hl)throw TypeError(\"Illegal str: Missing offset or limit\");if(j<bb.buffer.byteLength)throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);}return bb;};// encodings/hex\n/**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */ByteBufferPrototype.toHex=function(begin,end){begin=typeof begin==='undefined'?this.offset:begin;end=typeof end==='undefined'?this.limit:end;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}var out=new Array(end-begin),b;while(begin<end){b=this.view[begin++];if(b<0x10)out.push(\"0\",b.toString(16));else out.push(b.toString(16));}return out.join('');};/**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */ByteBuffer.fromHex=function(str,littleEndian,noAssert){if(!noAssert){if(typeof str!=='string')throw TypeError(\"Illegal str: Not a string\");if(str.length%2!==0)throw TypeError(\"Illegal str: Length not a multiple of 2\");}var k=str.length,bb=new ByteBuffer(k/2|0,littleEndian),b;for(var i=0,j=0;i<k;i+=2){b=parseInt(str.substring(i,i+2),16);if(!noAssert)if(!isFinite(b)||b<0||b>255)throw TypeError(\"Illegal str: Contains non-hex characters\");bb.view[j++]=b;}bb.limit=j;return bb;};// utfx-embeddable\n/**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */var utfx=function(){\"use strict\";/**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */var utfx={};/**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */utfx.MAX_CODEPOINT=0x10FFFF;/**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */utfx.encodeUTF8=function(src,dst){var cp=null;if(typeof src==='number')cp=src,src=function src(){return null;};while(cp!==null||(cp=src())!==null){if(cp<0x80)dst(cp&0x7F);else if(cp<0x800)dst(cp>>6&0x1F|0xC0),dst(cp&0x3F|0x80);else if(cp<0x10000)dst(cp>>12&0x0F|0xE0),dst(cp>>6&0x3F|0x80),dst(cp&0x3F|0x80);else dst(cp>>18&0x07|0xF0),dst(cp>>12&0x3F|0x80),dst(cp>>6&0x3F|0x80),dst(cp&0x3F|0x80);cp=null;}};/**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */utfx.decodeUTF8=function(src,dst){var a,b,c,d,fail=function fail(b){b=b.slice(0,b.indexOf(null));var err=Error(b.toString());err.name=\"TruncatedError\";err['bytes']=b;throw err;};while((a=src())!==null){if((a&0x80)===0)dst(a);else if((a&0xE0)===0xC0)(b=src())===null&&fail([a,b]),dst((a&0x1F)<<6|b&0x3F);else if((a&0xF0)===0xE0)((b=src())===null||(c=src())===null)&&fail([a,b,c]),dst((a&0x0F)<<12|(b&0x3F)<<6|c&0x3F);else if((a&0xF8)===0xF0)((b=src())===null||(c=src())===null||(d=src())===null)&&fail([a,b,c,d]),dst((a&0x07)<<18|(b&0x3F)<<12|(c&0x3F)<<6|d&0x3F);else throw RangeError(\"Illegal starting byte: \"+a);}};/**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */utfx.UTF16toUTF8=function(src,dst){var c1,c2=null;while(true){if((c1=c2!==null?c2:src())===null)break;if(c1>=0xD800&&c1<=0xDFFF){if((c2=src())!==null){if(c2>=0xDC00&&c2<=0xDFFF){dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);c2=null;continue;}}}dst(c1);}if(c2!==null)dst(c2);};/**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */utfx.UTF8toUTF16=function(src,dst){var cp=null;if(typeof src==='number')cp=src,src=function src(){return null;};while(cp!==null||(cp=src())!==null){if(cp<=0xFFFF)dst(cp);else cp-=0x10000,dst((cp>>10)+0xD800),dst(cp%0x400+0xDC00);cp=null;}};/**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */utfx.encodeUTF16toUTF8=function(src,dst){utfx.UTF16toUTF8(src,function(cp){utfx.encodeUTF8(cp,dst);});};/**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */utfx.decodeUTF8toUTF16=function(src,dst){utfx.decodeUTF8(src,function(cp){utfx.UTF8toUTF16(cp,dst);});};/**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */utfx.calculateCodePoint=function(cp){return cp<0x80?1:cp<0x800?2:cp<0x10000?3:4;};/**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */utfx.calculateUTF8=function(src){var cp,l=0;while((cp=src())!==null){l+=cp<0x80?1:cp<0x800?2:cp<0x10000?3:4;}return l;};/**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */utfx.calculateUTF16asUTF8=function(src){var n=0,l=0;utfx.UTF16toUTF8(src,function(cp){++n;l+=cp<0x80?1:cp<0x800?2:cp<0x10000?3:4;});return[n,l];};return utfx;}();// encodings/utf8\n/**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */ByteBufferPrototype.toUTF8=function(begin,end){if(typeof begin==='undefined')begin=this.offset;if(typeof end==='undefined')end=this.limit;if(!this.noAssert){if(typeof begin!=='number'||begin%1!==0)throw TypeError(\"Illegal begin: Not an integer\");begin>>>=0;if(typeof end!=='number'||end%1!==0)throw TypeError(\"Illegal end: Not an integer\");end>>>=0;if(begin<0||begin>end||end>this.buffer.byteLength)throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.byteLength);}var sd;try{utfx.decodeUTF8toUTF16(function(){return begin<end?this.view[begin++]:null;}.bind(this),sd=stringDestination());}catch(e){if(begin!==end)throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);}return sd();};/**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */ByteBuffer.fromUTF8=function(str,littleEndian,noAssert){if(!noAssert)if(typeof str!=='string')throw TypeError(\"Illegal str: Not a string\");var bb=new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str),true)[1],littleEndian,noAssert),i=0;utfx.encodeUTF16toUTF8(stringSource(str),function(b){bb.view[i++]=b;});bb.limit=i;return bb;};return ByteBuffer;});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/bytebuffer/dist/bytebuffer.js\n ** module id = 5\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///./~/bytebuffer/dist/bytebuffer.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\n\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\n(function (global, factory) {\n\n    /* AMD */if (\"function\" === 'function' && __webpack_require__(4)[\"amd\"]) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    /* CommonJS */else if (\"function\" === 'function' && ( false ? 'undefined' : _typeof(module)) === \"object\" && module && module[\"exports\"]) module[\"exports\"] = factory();\n        /* Global */else (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\n})(undefined, function () {\n    \"use strict\";\n\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\n\n    function Long(low, high, unsigned) {\n\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\n        this.low = low | 0;\n\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\n        this.high = high | 0;\n\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\n        this.unsigned = !!unsigned;\n    }\n\n    // The internal representation of a long is the two given signed, 32-bit values.\n    // We use 32-bit pieces because these are the size of integers on which\n    // Javascript performs bit-operations.  For operations like addition and\n    // multiplication, we split each number into 16 bit pieces, which can easily be\n    // multiplied within Javascript's floating-point representation without overflow\n    // or change in sign.\n    //\n    // In the algorithms below, we frequently reduce the negative case to the\n    // positive case by negating the input(s) and then post-processing the result.\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n    // a positive number, it overflows back into a negative).  Not handling this\n    // case would often result in infinite recursion.\n    //\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n    // methods on which they depend.\n\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\n    Long.prototype.__isLong__;\n\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\n        value: true,\n        enumerable: false,\n        configurable: false\n    });\n\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\n    function isLong(obj) {\n        return (obj && obj[\"__isLong__\"]) === true;\n    }\n\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\n    Long.isLong = isLong;\n\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\n    var INT_CACHE = {};\n\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\n    var UINT_CACHE = {};\n\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\n    function fromInt(value, unsigned) {\n        var obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if (cache = 0 <= value && value < 256) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj) return cachedObj;\n            }\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache) UINT_CACHE[value] = obj;\n            return obj;\n        } else {\n            value |= 0;\n            if (cache = -128 <= value && value < 128) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj) return cachedObj;\n            }\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache) INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\n    Long.fromInt = fromInt;\n\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\n    function fromNumber(value, unsigned) {\n        if (isNaN(value) || !isFinite(value)) return unsigned ? UZERO : ZERO;\n        if (unsigned) {\n            if (value < 0) return UZERO;\n            if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n        } else {\n            if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n        }\n        if (value < 0) return fromNumber(-value, unsigned).neg();\n        return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n    }\n\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\n    Long.fromNumber = fromNumber;\n\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\n    function fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\n    Long.fromBits = fromBits;\n\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\n    function fromString(str, unsigned, radix) {\n        if (str.length === 0) throw Error('empty string');\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return ZERO;\n        if (typeof unsigned === 'number') {\n            // For goog.math.long compatibility\n            radix = unsigned, unsigned = false;\n        } else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix) throw RangeError('radix');\n\n        var p;\n        if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n            return fromString(str.substring(1), unsigned, radix).neg();\n        }\n\n        // Do several (8) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\n\n        var result = ZERO;\n        for (var i = 0; i < str.length; i += 8) {\n            var size = Math.min(8, str.length - i),\n                value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                var power = fromNumber(pow_dbl(radix, size));\n                result = result.mul(power).add(fromNumber(value));\n            } else {\n                result = result.mul(radixToPower);\n                result = result.add(fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\n    Long.fromString = fromString;\n\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\n    function fromValue(val) {\n        if (val /* is compatible */ instanceof Long) return val;\n        if (typeof val === 'number') return fromNumber(val);\n        if (typeof val === 'string') return fromString(val);\n        // Throws for non-objects, converts non-instanceof Long:\n        return fromBits(val.low, val.high, val.unsigned);\n    }\n\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\n    Long.fromValue = fromValue;\n\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n    // no runtime penalty for these.\n\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_16_DBL = 1 << 16;\n\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_24_DBL = 1 << 24;\n\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var ZERO = fromInt(0);\n\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\n    Long.ZERO = ZERO;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var UZERO = fromInt(0, true);\n\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\n    Long.UZERO = UZERO;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var ONE = fromInt(1);\n\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\n    Long.ONE = ONE;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var UONE = fromInt(1, true);\n\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\n    Long.UONE = UONE;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var NEG_ONE = fromInt(-1);\n\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\n    Long.NEG_ONE = NEG_ONE;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\n    Long.MAX_VALUE = MAX_VALUE;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\n    var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\n    Long.MIN_VALUE = MIN_VALUE;\n\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\n    var LongPrototype = Long.prototype;\n\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\n    LongPrototype.toInt = function toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    };\n\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\n    LongPrototype.toNumber = function toNumber() {\n        if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    };\n\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\n    LongPrototype.toString = function toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix) throw RangeError('radix');\n        if (this.isZero()) return '0';\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            if (this.eq(MIN_VALUE)) {\n                // We need to change the Long value before it can be negated, so we remove\n                // the bottom-most digit in this base and then recurse to do the rest.\n                var radixLong = fromNumber(radix),\n                    div = this.div(radixLong),\n                    rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            } else return '-' + this.neg().toString(radix);\n        }\n\n        // Do several (6) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n            rem = this;\n        var result = '';\n        while (true) {\n            var remDiv = rem.div(radixToPower),\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n                digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) return digits + result;else {\n                while (digits.length < 6) {\n                    digits = '0' + digits;\n                }result = '' + digits + result;\n            }\n        }\n    };\n\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\n    LongPrototype.getHighBits = function getHighBits() {\n        return this.high;\n    };\n\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n        return this.high >>> 0;\n    };\n\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\n    LongPrototype.getLowBits = function getLowBits() {\n        return this.low;\n    };\n\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n        return this.low >>> 0;\n    };\n\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n        if (this.isNegative()) // Unsigned Longs are never negative\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        var val = this.high != 0 ? this.high : this.low;\n        for (var bit = 31; bit > 0; bit--) {\n            if ((val & 1 << bit) != 0) break;\n        }return this.high != 0 ? bit + 33 : bit + 1;\n    };\n\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.isZero = function isZero() {\n        return this.high === 0 && this.low === 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.isNegative = function isNegative() {\n        return !this.unsigned && this.high < 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.isPositive = function isPositive() {\n        return this.unsigned || this.high >= 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.isOdd = function isOdd() {\n        return (this.low & 1) === 1;\n    };\n\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.isEven = function isEven() {\n        return (this.low & 1) === 0;\n    };\n\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.equals = function equals(other) {\n        if (!isLong(other)) other = fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n        return this.high === other.high && this.low === other.low;\n    };\n\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.eq = LongPrototype.equals;\n\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.notEquals = function notEquals(other) {\n        return !this.eq( /* validates */other);\n    };\n\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.neq = LongPrototype.notEquals;\n\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.lessThan = function lessThan(other) {\n        return this.comp( /* validates */other) < 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.lt = LongPrototype.lessThan;\n\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n        return this.comp( /* validates */other) <= 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.greaterThan = function greaterThan(other) {\n        return this.comp( /* validates */other) > 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.gt = LongPrototype.greaterThan;\n\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n        return this.comp( /* validates */other) >= 0;\n    };\n\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\n    LongPrototype.compare = function compare(other) {\n        if (!isLong(other)) other = fromValue(other);\n        if (this.eq(other)) return 0;\n        var thisNeg = this.isNegative(),\n            otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg) return -1;\n        if (!thisNeg && otherNeg) return 1;\n        // At this point the sign bits are the same\n        if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n        // Both are positive if at least one is unsigned\n        return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n    };\n\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\n    LongPrototype.comp = LongPrototype.compare;\n\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\n    LongPrototype.negate = function negate() {\n        if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n        return this.not().add(ONE);\n    };\n\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\n    LongPrototype.neg = LongPrototype.negate;\n\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\n    LongPrototype.add = function add(addend) {\n        if (!isLong(addend)) addend = fromValue(addend);\n\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xFFFF;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xFFFF;\n\n        var b48 = addend.high >>> 16;\n        var b32 = addend.high & 0xFFFF;\n        var b16 = addend.low >>> 16;\n        var b00 = addend.low & 0xFFFF;\n\n        var c48 = 0,\n            c32 = 0,\n            c16 = 0,\n            c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xFFFF;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c48 += a48 + b48;\n        c48 &= 0xFFFF;\n        return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n    };\n\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\n    LongPrototype.subtract = function subtract(subtrahend) {\n        if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    };\n\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\n    LongPrototype.sub = LongPrototype.subtract;\n\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\n    LongPrototype.multiply = function multiply(multiplier) {\n        if (this.isZero()) return ZERO;\n        if (!isLong(multiplier)) multiplier = fromValue(multiplier);\n        if (multiplier.isZero()) return ZERO;\n        if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n        if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n\n        if (this.isNegative()) {\n            if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n        } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();\n\n        // If both longs are small, use float multiplication\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n        // We can skip products that would overflow.\n\n        var a48 = this.high >>> 16;\n        var a32 = this.high & 0xFFFF;\n        var a16 = this.low >>> 16;\n        var a00 = this.low & 0xFFFF;\n\n        var b48 = multiplier.high >>> 16;\n        var b32 = multiplier.high & 0xFFFF;\n        var b16 = multiplier.low >>> 16;\n        var b00 = multiplier.low & 0xFFFF;\n\n        var c48 = 0,\n            c32 = 0,\n            c16 = 0,\n            c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xFFFF;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xFFFF;\n        return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n    };\n\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\n    LongPrototype.mul = LongPrototype.multiply;\n\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\n    LongPrototype.divide = function divide(divisor) {\n        if (!isLong(divisor)) divisor = fromValue(divisor);\n        if (divisor.isZero()) throw Error('division by zero');\n        if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n        var approx, rem, res;\n        if (!this.unsigned) {\n            // This section is only relevant for signed longs and is derived from the\n            // closure library as a whole.\n            if (this.eq(MIN_VALUE)) {\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n                else if (divisor.eq(MIN_VALUE)) return ONE;else {\n                        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                        var halfThis = this.shr(1);\n                        approx = halfThis.div(divisor).shl(1);\n                        if (approx.eq(ZERO)) {\n                            return divisor.isNegative() ? ONE : NEG_ONE;\n                        } else {\n                            rem = this.sub(divisor.mul(approx));\n                            res = approx.add(rem.div(divisor));\n                            return res;\n                        }\n                    }\n            } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative()) return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n            res = ZERO;\n        } else {\n            // The algorithm below has not been made for unsigned longs. It's therefore\n            // required to take special care of the MSB prior to running it.\n            if (!divisor.unsigned) divisor = divisor.toUnsigned();\n            if (divisor.gt(this)) return UZERO;\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n                return UONE;\n            res = UZERO;\n        }\n\n        // Repeat the following until the remainder is less than other:  find a\n        // floating-point that approximates remainder / other *from below*, add this\n        // into the result, and subtract it from the remainder.  It is critical that\n        // the approximate value is less than or equal to the real value so that the\n        // remainder never becomes negative.\n        rem = this;\n        while (rem.gte(divisor)) {\n            // Approximate the result of division. This may be a little greater or\n            // smaller than the actual value.\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n            // We will tweak the approximate result by changing it in the 48-th digit or\n            // the smallest non-fractional digit, whichever is larger.\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n                delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n\n\n            // Decrease the approximation until it is smaller than the remainder.  Note\n            // that if it is too large, the product overflows and is negative.\n            approxRes = fromNumber(approx),\n                approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n\n            // We know the answer can't be zero... and actually, zero would cause\n            // infinite recursion since we would make no progress.\n            if (approxRes.isZero()) approxRes = ONE;\n\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    };\n\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\n    LongPrototype.div = LongPrototype.divide;\n\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\n    LongPrototype.modulo = function modulo(divisor) {\n        if (!isLong(divisor)) divisor = fromValue(divisor);\n        return this.sub(this.div(divisor).mul(divisor));\n    };\n\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\n    LongPrototype.mod = LongPrototype.modulo;\n\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\n    LongPrototype.not = function not() {\n        return fromBits(~this.low, ~this.high, this.unsigned);\n    };\n\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\n    LongPrototype.and = function and(other) {\n        if (!isLong(other)) other = fromValue(other);\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    };\n\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\n    LongPrototype.or = function or(other) {\n        if (!isLong(other)) other = fromValue(other);\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    };\n\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\n    LongPrototype.xor = function xor(other) {\n        if (!isLong(other)) other = fromValue(other);\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    };\n\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\n        if (isLong(numBits)) numBits = numBits.toInt();\n        if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n    };\n\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shl = LongPrototype.shiftLeft;\n\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shiftRight = function shiftRight(numBits) {\n        if (isLong(numBits)) numBits = numBits.toInt();\n        if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n    };\n\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shr = LongPrototype.shiftRight;\n\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n        if (isLong(numBits)) numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0) return this;else {\n            var high = this.high;\n            if (numBits < 32) {\n                var low = this.low;\n                return fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, this.unsigned);\n            } else if (numBits === 32) return fromBits(high, 0, this.unsigned);else return fromBits(high >>> numBits - 32, 0, this.unsigned);\n        }\n    };\n\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\n    LongPrototype.toSigned = function toSigned() {\n        if (!this.unsigned) return this;\n        return fromBits(this.low, this.high, false);\n    };\n\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\n    LongPrototype.toUnsigned = function toUnsigned() {\n        if (this.unsigned) return this;\n        return fromBits(this.low, this.high, true);\n    };\n\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\n    LongPrototype.toBytes = function (le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    };\n\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\n    LongPrototype.toBytesLE = function () {\n        var hi = this.high,\n            lo = this.low;\n        return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24 & 0xff, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24 & 0xff];\n    };\n\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\n    LongPrototype.toBytesBE = function () {\n        var hi = this.high,\n            lo = this.low;\n        return [hi >>> 24 & 0xff, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24 & 0xff, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n    };\n\n    return Long;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/long/dist/long.js\n ** module id = 6\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///./~/long/dist/long.js?");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("/* (ignored) */\n\n/*****************\n ** WEBPACK FOOTER\n ** fs (ignored)\n ** module id = 7\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///fs_(ignored)?");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("/* (ignored) */\n\n/*****************\n ** WEBPACK FOOTER\n ** path (ignored)\n ** module id = 8\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///path_(ignored)?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;var require;/* WEBPACK VAR INJECTION */(function(process, global, module) {'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.2.1\n */\n\n(function () {\n  \"use strict\";\n\n  function lib$es6$promise$utils$$objectOrFunction(x) {\n    return typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null;\n  }\n\n  function lib$es6$promise$utils$$isFunction(x) {\n    return typeof x === 'function';\n  }\n\n  function lib$es6$promise$utils$$isMaybeThenable(x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null;\n  }\n\n  var lib$es6$promise$utils$$_isArray;\n  if (!Array.isArray) {\n    lib$es6$promise$utils$$_isArray = function lib$es6$promise$utils$$_isArray(x) {\n      return Object.prototype.toString.call(x) === '[object Array]';\n    };\n  } else {\n    lib$es6$promise$utils$$_isArray = Array.isArray;\n  }\n\n  var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n  var lib$es6$promise$asap$$len = 0;\n  var lib$es6$promise$asap$$vertxNext;\n  var lib$es6$promise$asap$$customSchedulerFn;\n\n  var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n    lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n    lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n    lib$es6$promise$asap$$len += 2;\n    if (lib$es6$promise$asap$$len === 2) {\n      // If len is 2, that means that we need to schedule an async flush.\n      // If additional callbacks are queued before the queue is flushed, they\n      // will be processed by this flush that we are scheduling.\n      if (lib$es6$promise$asap$$customSchedulerFn) {\n        lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n      } else {\n        lib$es6$promise$asap$$scheduleFlush();\n      }\n    }\n  };\n\n  function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n    lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n  }\n\n  function lib$es6$promise$asap$$setAsap(asapFn) {\n    lib$es6$promise$asap$$asap = asapFn;\n  }\n\n  var lib$es6$promise$asap$$browserWindow = typeof window !== 'undefined' ? window : undefined;\n  var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n  var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n  var lib$es6$promise$asap$$isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n  // test for web worker but not in IE10\n  var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n  // node\n  function lib$es6$promise$asap$$useNextTick() {\n    // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n    // see https://github.com/cujojs/when/issues/410 for details\n    return function () {\n      process.nextTick(lib$es6$promise$asap$$flush);\n    };\n  }\n\n  // vertx\n  function lib$es6$promise$asap$$useVertxTimer() {\n    return function () {\n      lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n    };\n  }\n\n  function lib$es6$promise$asap$$useMutationObserver() {\n    var iterations = 0;\n    var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n    var node = document.createTextNode('');\n    observer.observe(node, { characterData: true });\n\n    return function () {\n      node.data = iterations = ++iterations % 2;\n    };\n  }\n\n  // web worker\n  function lib$es6$promise$asap$$useMessageChannel() {\n    var channel = new MessageChannel();\n    channel.port1.onmessage = lib$es6$promise$asap$$flush;\n    return function () {\n      channel.port2.postMessage(0);\n    };\n  }\n\n  function lib$es6$promise$asap$$useSetTimeout() {\n    return function () {\n      setTimeout(lib$es6$promise$asap$$flush, 1);\n    };\n  }\n\n  var lib$es6$promise$asap$$queue = new Array(1000);\n  function lib$es6$promise$asap$$flush() {\n    for (var i = 0; i < lib$es6$promise$asap$$len; i += 2) {\n      var callback = lib$es6$promise$asap$$queue[i];\n      var arg = lib$es6$promise$asap$$queue[i + 1];\n\n      callback(arg);\n\n      lib$es6$promise$asap$$queue[i] = undefined;\n      lib$es6$promise$asap$$queue[i + 1] = undefined;\n    }\n\n    lib$es6$promise$asap$$len = 0;\n  }\n\n  function lib$es6$promise$asap$$attemptVertx() {\n    try {\n      var r = require;\n      var vertx = __webpack_require__(10);\n      lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n      return lib$es6$promise$asap$$useVertxTimer();\n    } catch (e) {\n      return lib$es6$promise$asap$$useSetTimeout();\n    }\n  }\n\n  var lib$es6$promise$asap$$scheduleFlush;\n  // Decide what async method to use to triggering processing of queued callbacks:\n  if (lib$es6$promise$asap$$isNode) {\n    lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n  } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n    lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n  } else if (lib$es6$promise$asap$$isWorker) {\n    lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n  } else if (lib$es6$promise$asap$$browserWindow === undefined && \"function\" === 'function') {\n    lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n  } else {\n    lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n  }\n  function lib$es6$promise$then$$then(onFulfillment, onRejection) {\n    var parent = this;\n\n    var child = new this.constructor(lib$es6$promise$$internal$$noop);\n\n    if (child[lib$es6$promise$$internal$$PROMISE_ID] === undefined) {\n      lib$es6$promise$$internal$$makePromise(child);\n    }\n\n    var state = parent._state;\n\n    if (state) {\n      var callback = arguments[state - 1];\n      lib$es6$promise$asap$$asap(function () {\n        lib$es6$promise$$internal$$invokeCallback(state, child, callback, parent._result);\n      });\n    } else {\n      lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n    }\n\n    return child;\n  }\n  var lib$es6$promise$then$$default = lib$es6$promise$then$$then;\n  function lib$es6$promise$promise$resolve$$resolve(object) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {\n      return object;\n    }\n\n    var promise = new Constructor(lib$es6$promise$$internal$$noop);\n    lib$es6$promise$$internal$$resolve(promise, object);\n    return promise;\n  }\n  var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n  var lib$es6$promise$$internal$$PROMISE_ID = Math.random().toString(36).substring(16);\n\n  function lib$es6$promise$$internal$$noop() {}\n\n  var lib$es6$promise$$internal$$PENDING = void 0;\n  var lib$es6$promise$$internal$$FULFILLED = 1;\n  var lib$es6$promise$$internal$$REJECTED = 2;\n\n  var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n  function lib$es6$promise$$internal$$selfFulfillment() {\n    return new TypeError(\"You cannot resolve a promise with itself\");\n  }\n\n  function lib$es6$promise$$internal$$cannotReturnOwn() {\n    return new TypeError('A promises callback cannot return that same promise.');\n  }\n\n  function lib$es6$promise$$internal$$getThen(promise) {\n    try {\n      return promise.then;\n    } catch (error) {\n      lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n      return lib$es6$promise$$internal$$GET_THEN_ERROR;\n    }\n  }\n\n  function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n    try {\n      then.call(value, fulfillmentHandler, rejectionHandler);\n    } catch (e) {\n      return e;\n    }\n  }\n\n  function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n    lib$es6$promise$asap$$asap(function (promise) {\n      var sealed = false;\n      var error = lib$es6$promise$$internal$$tryThen(then, thenable, function (value) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n        if (thenable !== value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, value);\n        }\n      }, function (reason) {\n        if (sealed) {\n          return;\n        }\n        sealed = true;\n\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n      if (!sealed && error) {\n        sealed = true;\n        lib$es6$promise$$internal$$reject(promise, error);\n      }\n    }, promise);\n  }\n\n  function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n    if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n      lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n    } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n      lib$es6$promise$$internal$$reject(promise, thenable._result);\n    } else {\n      lib$es6$promise$$internal$$subscribe(thenable, undefined, function (value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }, function (reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      });\n    }\n  }\n\n  function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable, then) {\n    if (maybeThenable.constructor === promise.constructor && then === lib$es6$promise$then$$default && constructor.resolve === lib$es6$promise$promise$resolve$$default) {\n      lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n    } else {\n      if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n      } else if (then === undefined) {\n        lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n      } else if (lib$es6$promise$utils$$isFunction(then)) {\n        lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n      }\n    }\n  }\n\n  function lib$es6$promise$$internal$$resolve(promise, value) {\n    if (promise === value) {\n      lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n    } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n      lib$es6$promise$$internal$$handleMaybeThenable(promise, value, lib$es6$promise$$internal$$getThen(value));\n    } else {\n      lib$es6$promise$$internal$$fulfill(promise, value);\n    }\n  }\n\n  function lib$es6$promise$$internal$$publishRejection(promise) {\n    if (promise._onerror) {\n      promise._onerror(promise._result);\n    }\n\n    lib$es6$promise$$internal$$publish(promise);\n  }\n\n  function lib$es6$promise$$internal$$fulfill(promise, value) {\n    if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n      return;\n    }\n\n    promise._result = value;\n    promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n    if (promise._subscribers.length !== 0) {\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n    }\n  }\n\n  function lib$es6$promise$$internal$$reject(promise, reason) {\n    if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n      return;\n    }\n    promise._state = lib$es6$promise$$internal$$REJECTED;\n    promise._result = reason;\n\n    lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n  }\n\n  function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n    var subscribers = parent._subscribers;\n    var length = subscribers.length;\n\n    parent._onerror = null;\n\n    subscribers[length] = child;\n    subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n    subscribers[length + lib$es6$promise$$internal$$REJECTED] = onRejection;\n\n    if (length === 0 && parent._state) {\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n    }\n  }\n\n  function lib$es6$promise$$internal$$publish(promise) {\n    var subscribers = promise._subscribers;\n    var settled = promise._state;\n\n    if (subscribers.length === 0) {\n      return;\n    }\n\n    var child,\n        callback,\n        detail = promise._result;\n\n    for (var i = 0; i < subscribers.length; i += 3) {\n      child = subscribers[i];\n      callback = subscribers[i + settled];\n\n      if (child) {\n        lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n      } else {\n        callback(detail);\n      }\n    }\n\n    promise._subscribers.length = 0;\n  }\n\n  function lib$es6$promise$$internal$$ErrorObject() {\n    this.error = null;\n  }\n\n  var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n  function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n    try {\n      return callback(detail);\n    } catch (e) {\n      lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n      return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n    }\n  }\n\n  function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n    var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n        value,\n        error,\n        succeeded,\n        failed;\n\n    if (hasCallback) {\n      value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n      if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n        failed = true;\n        error = value.error;\n        value = null;\n      } else {\n        succeeded = true;\n      }\n\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n        return;\n      }\n    } else {\n      value = detail;\n      succeeded = true;\n    }\n\n    if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n      // noop\n    } else if (hasCallback && succeeded) {\n      lib$es6$promise$$internal$$resolve(promise, value);\n    } else if (failed) {\n      lib$es6$promise$$internal$$reject(promise, error);\n    } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n      lib$es6$promise$$internal$$fulfill(promise, value);\n    } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n      lib$es6$promise$$internal$$reject(promise, value);\n    }\n  }\n\n  function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n    try {\n      resolver(function resolvePromise(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }, function rejectPromise(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      });\n    } catch (e) {\n      lib$es6$promise$$internal$$reject(promise, e);\n    }\n  }\n\n  var lib$es6$promise$$internal$$id = 0;\n  function lib$es6$promise$$internal$$nextId() {\n    return lib$es6$promise$$internal$$id++;\n  }\n\n  function lib$es6$promise$$internal$$makePromise(promise) {\n    promise[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$id++;\n    promise._state = undefined;\n    promise._result = undefined;\n    promise._subscribers = [];\n  }\n\n  function lib$es6$promise$promise$all$$all(entries) {\n    return new lib$es6$promise$enumerator$$default(this, entries).promise;\n  }\n  var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n  function lib$es6$promise$promise$race$$race(entries) {\n    /*jshint validthis:true */\n    var Constructor = this;\n\n    if (!lib$es6$promise$utils$$isArray(entries)) {\n      return new Constructor(function (resolve, reject) {\n        reject(new TypeError('You must pass an array to race.'));\n      });\n    } else {\n      return new Constructor(function (resolve, reject) {\n        var length = entries.length;\n        for (var i = 0; i < length; i++) {\n          Constructor.resolve(entries[i]).then(resolve, reject);\n        }\n      });\n    }\n  }\n  var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n  function lib$es6$promise$promise$reject$$reject(reason) {\n    /*jshint validthis:true */\n    var Constructor = this;\n    var promise = new Constructor(lib$es6$promise$$internal$$noop);\n    lib$es6$promise$$internal$$reject(promise, reason);\n    return promise;\n  }\n  var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n  function lib$es6$promise$promise$$needsResolver() {\n    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n  }\n\n  function lib$es6$promise$promise$$needsNew() {\n    throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n  }\n\n  var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n  /**\n    Promise objects represent the eventual result of an asynchronous operation. The\n    primary way of interacting with a promise is through its `then` method, which\n    registers callbacks to receive either a promise's eventual value or the reason\n    why the promise cannot be fulfilled.\n     Terminology\n    -----------\n     - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n    - `thenable` is an object or function that defines a `then` method.\n    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n    - `exception` is a value that is thrown using the throw statement.\n    - `reason` is a value that indicates why a promise was rejected.\n    - `settled` the final resting state of a promise, fulfilled or rejected.\n     A promise can be in one of three states: pending, fulfilled, or rejected.\n     Promises that are fulfilled have a fulfillment value and are in the fulfilled\n    state.  Promises that are rejected have a rejection reason and are in the\n    rejected state.  A fulfillment value is never a thenable.\n     Promises can also be said to *resolve* a value.  If this value is also a\n    promise, then the original promise's settled state will match the value's\n    settled state.  So a promise that *resolves* a promise that rejects will\n    itself reject, and a promise that *resolves* a promise that fulfills will\n    itself fulfill.\n      Basic Usage:\n    ------------\n     ```js\n    var promise = new Promise(function(resolve, reject) {\n      // on success\n      resolve(value);\n       // on failure\n      reject(reason);\n    });\n     promise.then(function(value) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n     Advanced Usage:\n    ---------------\n     Promises shine when abstracting away asynchronous interactions such as\n    `XMLHttpRequest`s.\n     ```js\n    function getJSON(url) {\n      return new Promise(function(resolve, reject){\n        var xhr = new XMLHttpRequest();\n         xhr.open('GET', url);\n        xhr.onreadystatechange = handler;\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.send();\n         function handler() {\n          if (this.readyState === this.DONE) {\n            if (this.status === 200) {\n              resolve(this.response);\n            } else {\n              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n            }\n          }\n        };\n      });\n    }\n     getJSON('/posts.json').then(function(json) {\n      // on fulfillment\n    }, function(reason) {\n      // on rejection\n    });\n    ```\n     Unlike callbacks, promises are great composable primitives.\n     ```js\n    Promise.all([\n      getJSON('/posts'),\n      getJSON('/comments')\n    ]).then(function(values){\n      values[0] // => postsJSON\n      values[1] // => commentsJSON\n       return values;\n    });\n    ```\n     @class Promise\n    @param {function} resolver\n    Useful for tooling.\n    @constructor\n  */\n  function lib$es6$promise$promise$$Promise(resolver) {\n    this[lib$es6$promise$$internal$$PROMISE_ID] = lib$es6$promise$$internal$$nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (lib$es6$promise$$internal$$noop !== resolver) {\n      typeof resolver !== 'function' && lib$es6$promise$promise$$needsResolver();\n      this instanceof lib$es6$promise$promise$$Promise ? lib$es6$promise$$internal$$initializePromise(this, resolver) : lib$es6$promise$promise$$needsNew();\n    }\n  }\n\n  lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n  lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n  lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n  lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n  lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n  lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n  lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n  lib$es6$promise$promise$$Promise.prototype = {\n    constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n       ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n       Chaining\n      --------\n       The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n       ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n       findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n       ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n       Assimilation\n      ------------\n       Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n       ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n       If the assimliated promise rejects, then the downstream promise will also reject.\n       ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n       Simple Example\n      --------------\n       Synchronous Example\n       ```javascript\n      var result;\n       try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n       Errback Example\n       ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n       Promise Example;\n       ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n       Advanced Example\n      --------------\n       Synchronous Example\n       ```javascript\n      var author, books;\n       try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n       Errback Example\n       ```js\n       function foundBooks(books) {\n       }\n       function failure(reason) {\n       }\n       findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n       Promise Example;\n       ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n       @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n    then: lib$es6$promise$then$$default,\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n       ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n       // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n       // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n       @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n    'catch': function _catch(onRejection) {\n      return this.then(null, onRejection);\n    }\n  };\n  var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n  function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n    if (!this.promise[lib$es6$promise$$internal$$PROMISE_ID]) {\n      lib$es6$promise$$internal$$makePromise(this.promise);\n    }\n\n    if (lib$es6$promise$utils$$isArray(input)) {\n      this._input = input;\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate();\n        if (this._remaining === 0) {\n          lib$es6$promise$$internal$$fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      lib$es6$promise$$internal$$reject(this.promise, lib$es6$promise$enumerator$$validationError());\n    }\n  }\n\n  function lib$es6$promise$enumerator$$validationError() {\n    return new Error('Array Methods must be provided an Array');\n  }\n\n  lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function () {\n    var length = this.length;\n    var input = this._input;\n\n    for (var i = 0; this._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function (entry, i) {\n    var c = this._instanceConstructor;\n    var resolve = c.resolve;\n\n    if (resolve === lib$es6$promise$promise$resolve$$default) {\n      var then = lib$es6$promise$$internal$$getThen(entry);\n\n      if (then === lib$es6$promise$then$$default && entry._state !== lib$es6$promise$$internal$$PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === lib$es6$promise$promise$$default) {\n        var promise = new c(lib$es6$promise$$internal$$noop);\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, entry, then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve) {\n          resolve(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve(entry), i);\n    }\n  };\n\n  lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function (state, i, value) {\n    var promise = this.promise;\n\n    if (promise._state === lib$es6$promise$$internal$$PENDING) {\n      this._remaining--;\n\n      if (state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      lib$es6$promise$$internal$$fulfill(promise, this._result);\n    }\n  };\n\n  lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function (promise, i) {\n    var enumerator = this;\n\n    lib$es6$promise$$internal$$subscribe(promise, undefined, function (value) {\n      enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n    }, function (reason) {\n      enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n    });\n  };\n  function lib$es6$promise$polyfill$$polyfill() {\n    var local;\n\n    if (typeof global !== 'undefined') {\n      local = global;\n    } else if (typeof self !== 'undefined') {\n      local = self;\n    } else {\n      try {\n        local = Function('return this')();\n      } catch (e) {\n        throw new Error('polyfill failed because global object is unavailable in this environment');\n      }\n    }\n\n    var P = local.Promise;\n\n    if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n      return;\n    }\n\n    local.Promise = lib$es6$promise$promise$$default;\n  }\n  var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n  var lib$es6$promise$umd$$ES6Promise = {\n    'Promise': lib$es6$promise$promise$$default,\n    'polyfill': lib$es6$promise$polyfill$$default\n  };\n\n  /* global define:true module:true window: true */\n  if (\"function\" === 'function' && __webpack_require__(4)['amd']) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return lib$es6$promise$umd$$ES6Promise;\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof module !== 'undefined' && module['exports']) {\n    module['exports'] = lib$es6$promise$umd$$ES6Promise;\n  } else if (typeof this !== 'undefined') {\n    this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n  }\n\n  lib$es6$promise$polyfill$$default();\n}).call(undefined);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }()), __webpack_require__(3)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise/dist/es6-promise.js\n ** module id = 9\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///./~/es6-promise/dist/es6-promise.js?");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("/* (ignored) */\n\n/*****************\n ** WEBPACK FOOTER\n ** vertx (ignored)\n ** module id = 10\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///vertx_(ignored)?");

/***/ },
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nmodule.exports = {\n  ec: __webpack_require__(16),\n  urn: __webpack_require__(43),\n  keyPair: __webpack_require__(44),\n  bytes32Array: __webpack_require__(45)\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/index.js\n ** module id = 15\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/index.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar BigInteger = __webpack_require__(17);\nvar Crypto = __webpack_require__(29).Crypto;\nvar jsrsasign = __webpack_require__(42);\nvar urn = __webpack_require__(43);\n\nmodule.exports = {\n  getYbyX: function getYbyX(xInHex, isYEven) {\n    // Get integer x\n    var x = this.hexToBigInteger(xInHex);\n\n    // secp256r1 curve params which are needed\n    var p = new BigInteger(\"115792089210356248762697446949407573530086143415290314195533631308867097853951\");\n    var a = new BigInteger(\"115792089210356248762697446949407573530086143415290314195533631308867097853948\");\n    var b = new BigInteger(\"41058363725152142129326129780047268409114441015993725554835256314039467401291\");\n\n    // We precalculate (p + 1) / 4 where p is if the field order\n    P_OVER_FOUR = p.add(BigInteger.ONE).divide(BigInteger.valueOf(4));\n\n    // Convert x to point\n    var alpha = x.multiply(x).multiply(x).add(a.multiply(x)).add(b).mod(p);\n    var beta = alpha.modPow(P_OVER_FOUR, p);\n\n    // If beta is even, but y isn't or vice versa, then convert it,\n    // otherwise we're done and y == beta.\n    var y = (beta.isEven() ? isYEven : !isYEven) ? beta : p.subtract(beta);\n\n    var hex = bytesToHex(integerToBytes(y));\n    return (\"0000000000\" + hex).slice(-64);\n  },\n\n  verify: function verify(hashHex, sigHex, pubKey) {\n    var pubkeyHex = this.decompress(urn.split(pubKey).id);\n    var ec = new jsrsasign.ECDSA({ 'curve': 'secp256r1' });\n    return ec.verifyHex(hashHex, sigHex, pubkeyHex);\n  },\n\n  // Hex string\n  compress: function compress(publicKey) {\n    if (publicKey.slice(0, 2) != '04') {\n      throw new Error('Incorrect public key format. Wrong prefix.');\n    }\n\n    if (publicKey.length != (64 + 1) * 2) {\n      // 64 bytes X and Y plus 1 prefix byte\n      throw new Error('Incorrect public key format. Wrong length.');\n    }\n\n    return this.compressCoordinate(publicKey.slice(2, 66), publicKey.slice(66, 130));\n  },\n\n  decompress: function decompress(publicKey) {\n    var coords = this.decompressToCoordinate(publicKey);\n    return '04' + coords.x + coords.y;\n  },\n\n  // Inputs are in HEX\n  compressCoordinate: function compressCoordinate(x, y) {\n    // 02 / 03 as used in Bitcoin\n    if (this.hexToBigInteger(y).isEven()) {\n      var prefix = '02';\n    } else {\n      var prefix = '03';\n    }\n\n    return prefix + x;\n  },\n\n  // HEX input\n  decompressToCoordinate: function decompressToCoordinate(compressed) {\n    if (compressed.length != (32 + 1) * 2) {\n      throw new Error('Wrong length');\n    }\n\n    var prefix = compressed.slice(0, 2);\n    var x = compressed.slice(2);\n\n    if (prefix === '02') {\n      var y = this.getYbyX(x, true);\n    } else if (prefix === '03') {\n      var y = this.getYbyX(x, false);\n    } else {\n      throw new Error('Incorrect prefix');\n    }\n\n    return { x: x, y: y };\n  },\n\n  hexToBigInteger: function hexToBigInteger(hex) {\n    return BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(hex));\n  }\n};\n\nfunction integerToBytes(e, t) {\n  var n = e.toByteArrayUnsigned();\n  if (t < n.length) n = n.slice(n.length - t);else while (t > n.length) {\n    n.unshift(0);\n  }return n;\n}\n\nfunction bytesToHex(bytes) {\n  var hexChar = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n\n  function byteToHex(b) {\n    return hexChar[b >> 4 & 0x0f] + hexChar[b & 0x0f];\n  }\n\n  return bytes.map(byteToHex).join('');\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/lib/ec.js\n ** module id = 16\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/lib/ec.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar BigInteger = __webpack_require__(18);\n\n//addons\n__webpack_require__(20);\n\nmodule.exports = BigInteger;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/bigi/lib/index.js\n ** module id = 17\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/bigi/lib/index.js?");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\n// (public) Constructor\nfunction BigInteger(a, b, c) {\n  if (!(this instanceof BigInteger)) return new BigInteger(a, b, c);\n\n  if (a != null) {\n    if (\"number\" == typeof a) this.fromNumber(a, b, c);else if (b == null && \"string\" != typeof a) this.fromString(a, 256);else this.fromString(a, b);\n  }\n}\n\nvar proto = BigInteger.prototype;\n\n// duck-typed isBigInteger\nproto.__bigi = __webpack_require__(19).version;\nBigInteger.isBigInteger = function (obj, check_ver) {\n  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi);\n};\n\n// Bits per digit\nvar dbits;\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n      xh = x >> 15;\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n      xh = x >> 14;\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n  return c;\n}\n\n// wtf?\nBigInteger.prototype.am = am1;\ndbits = 26;\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nvar DV = BigInteger.prototype.DV = 1 << dbits;\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) {\n  BI_RC[rr++] = vv;\n}rr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}rr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n  BI_RC[rr++] = vv;\n}function int2char(n) {\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return c == null ? -1 : c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) {\n    r[i] = this[i];\n  }r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = x < 0 ? -1 : 0;\n  if (x > 0) this[0] = x;else if (x < -1) this[0] = x + DV;else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = new BigInteger();\n  r.fromInt(i);\n  return r;\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var self = this;\n\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else {\n      self.fromRadix(s, b);\n      return;\n    }\n  self.t = 0;\n  self.s = 0;\n  var i = s.length,\n      mi = false,\n      sh = 0;\n  while (--i >= 0) {\n    var x = k == 8 ? s[i] & 0xff : intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0) self[self.t++] = x;else if (sh + k > self.DB) {\n      self[self.t - 1] |= (x & (1 << self.DB - sh) - 1) << sh;\n      self[self.t++] = x >> self.DB - sh;\n    } else self[self.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= self.DB) sh -= self.DB;\n  }\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    self.s = -1;\n    if (sh > 0) self[self.t - 1] |= (1 << self.DB - sh) - 1 << sh;\n  }\n  self.clamp();\n  if (mi) BigInteger.ZERO.subTo(self, self);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c) {\n    --this.t;\n  }\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  var self = this;\n  if (self.s < 0) return \"-\" + self.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;else if (b == 8) k = 3;else if (b == 2) k = 1;else if (b == 32) k = 5;else if (b == 4) k = 2;else return self.toRadix(b);\n  var km = (1 << k) - 1,\n      d,\n      m = false,\n      r = \"\",\n      i = self.t;\n  var p = self.DB - i * self.DB % k;\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) > 0) {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (self[i] & (1 << p) - 1) << k - p;\n        d |= self[--i] >> (p += self.DB - k);\n      } else {\n        d = self[i] >> (p -= k) & km;\n        if (p <= 0) {\n          p += self.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : \"0\";\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = new BigInteger();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return this.s < 0 ? this.negate() : this;\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return this.s < 0 ? -r : r;\n  while (--i >= 0) {\n    if ((r = this[i] - a[i]) != 0) return r;\n  }return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n      t;\n  if ((t = x >>> 16) != 0) {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0) {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0) {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0) {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0) {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);\n}\n\n// (public) return the number of bytes in \"this\"\nfunction bnByteLength() {\n  return this.bitLength() >> 3;\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i;\n  for (i = this.t - 1; i >= 0; --i) {\n    r[i + n] = this[i];\n  }for (i = n - 1; i >= 0; --i) {\n    r[i] = 0;\n  }r.t = this.t + n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) {\n    r[i - n] = this[i];\n  }r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var self = this;\n  var bs = n % self.DB;\n  var cbs = self.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / self.DB),\n      c = self.s << bs & self.DM,\n      i;\n  for (i = self.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = self[i] >> cbs | c;\n    c = (self[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) {\n    r[i] = 0;\n  }r[ds] = c;\n  r.t = self.t + ds + 1;\n  r.s = self.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  var self = this;\n  r.s = self.s;\n  var ds = Math.floor(n / self.DB);\n  if (ds >= self.t) {\n    r.t = 0;\n    return;\n  }\n  var bs = n % self.DB;\n  var cbs = self.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = self[ds] >> bs;\n  for (var i = ds + 1; i < self.t; ++i) {\n    r[i - ds - 1] |= (self[i] & bm) << cbs;\n    r[i - ds] = self[i] >> bs;\n  }\n  if (bs > 0) r[self.t - ds - 1] |= (self.s & bm) << cbs;\n  r.t = self.t - ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var self = this;\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, self.t);\n  while (i < m) {\n    c += self[i] - a[i];\n    r[i++] = c & self.DM;\n    c >>= self.DB;\n  }\n  if (a.t < self.t) {\n    c -= a.s;\n    while (i < self.t) {\n      c += self[i];\n      r[i++] = c & self.DM;\n      c >>= self.DB;\n    }\n    c += self.s;\n  } else {\n    c += self.s;\n    while (i < a.t) {\n      c -= a[i];\n      r[i++] = c & self.DM;\n      c >>= self.DB;\n    }\n    c -= a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c < -1) r[i++] = self.DV + c;else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n      y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) {\n    r[i] = 0;\n  }for (i = 0; i < y.t; ++i) {\n    r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  }r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0) {\n    r[i] = 0;\n  }for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var self = this;\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = self.abs();\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0);\n    if (r != null) self.copyTo(r);\n    return;\n  }\n  if (r == null) r = new BigInteger();\n  var y = new BigInteger(),\n      ts = self.s,\n      ms = m.s;\n  var nsh = self.DB - nbits(pm[pm.t - 1]); // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  } else {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << self.F1) + (ys > 1 ? y[ys - 2] >> self.F2 : 0);\n  var d1 = self.FV / yt,\n      d2 = (1 << self.F1) / yt,\n      e = 1 << self.F2;\n  var i = r.t,\n      j = i - ys,\n      t = q == null ? new BigInteger() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) {\n    y[y.t++] = 0;\n  }while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = r[--i] == y0 ? self.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n      // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) {\n        r.subTo(t, r);\n      }\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = new BigInteger();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) {\n  this.m = m;\n}\n\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);else return x;\n}\n\nfunction cRevert(x) {\n  return x;\n}\n\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x);\n}\n\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nfunction cSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n  y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4\n  y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8\n  y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return y > 0 ? this.DV - y : -y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << m.DB - 15) - 1;\n  this.mt2 = 2 * m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = new BigInteger();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = new BigInteger();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2) {\n    // pad x so am has enough room later\n    x[x.t++] = 0;\n  }for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() {\n  return (this.t > 0 ? this[0] & 1 : this.s) == 0;\n}\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = new BigInteger(),\n      r2 = new BigInteger(),\n      g = z.convert(this),\n      i = nbits(e) - 1;\n  g.copyTo(r);\n  while (--i >= 0) {\n    z.sqrTo(r, r2);\n    if ((e & 1 << i) > 0) z.mulTo(r2, g, r);else {\n      var t = r;\n      r = r2;\n      r2 = t;\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e, m) {\n  var z;\n  if (e < 256 || m.isEven()) z = new Classic(m);else z = new Montgomery(m);\n  return this.exp(e, z);\n}\n\n// protected\nproto.copyTo = bnpCopyTo;\nproto.fromInt = bnpFromInt;\nproto.fromString = bnpFromString;\nproto.clamp = bnpClamp;\nproto.dlShiftTo = bnpDLShiftTo;\nproto.drShiftTo = bnpDRShiftTo;\nproto.lShiftTo = bnpLShiftTo;\nproto.rShiftTo = bnpRShiftTo;\nproto.subTo = bnpSubTo;\nproto.multiplyTo = bnpMultiplyTo;\nproto.squareTo = bnpSquareTo;\nproto.divRemTo = bnpDivRemTo;\nproto.invDigit = bnpInvDigit;\nproto.isEven = bnpIsEven;\nproto.exp = bnpExp;\n\n// public\nproto.toString = bnToString;\nproto.negate = bnNegate;\nproto.abs = bnAbs;\nproto.compareTo = bnCompareTo;\nproto.bitLength = bnBitLength;\nproto.byteLength = bnByteLength;\nproto.mod = bnMod;\nproto.modPowInt = bnModPowInt;\n\n// (public)\nfunction bnClone() {\n  var r = new BigInteger();\n  this.copyTo(r);\n  return r;\n}\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this[0] - this.DV;else if (this.t == 0) return -1;\n  } else if (this.t == 1) return this[0];else if (this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];\n}\n\n// (public) return value as byte\nfunction bnByteValue() {\n  return this.t == 0 ? this.s : this[0] << 24 >> 24;\n}\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() {\n  return this.t == 0 ? this.s : this[0] << 16 >> 16;\n}\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r));\n}\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if (this.s < 0) return -1;else if (this.t <= 0 || this.t == 1 && this[0] <= 0) return 0;else return 1;\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if (b == null) b = 10;\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b, cs);\n  var d = nbv(a),\n      y = new BigInteger(),\n      z = new BigInteger(),\n      r = \"\";\n  this.divRemTo(d, y, z);\n  while (y.signum() > 0) {\n    r = (a + z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d, y, z);\n  }\n  return z.intValue().toString(b) + r;\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s, b) {\n  var self = this;\n  self.fromInt(0);\n  if (b == null) b = 10;\n  var cs = self.chunkSize(b);\n  var d = Math.pow(b, cs),\n      mi = false,\n      j = 0,\n      w = 0;\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i);\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && self.signum() == 0) mi = true;\n      continue;\n    }\n    w = b * w + x;\n    if (++j >= cs) {\n      self.dMultiply(d);\n      self.dAddOffset(w, 0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if (j > 0) {\n    self.dMultiply(Math.pow(b, j));\n    self.dAddOffset(w, 0);\n  }\n  if (mi) BigInteger.ZERO.subTo(self, self);\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a, b, c) {\n  var self = this;\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) self.fromInt(1);else {\n      self.fromNumber(a, c);\n      if (!self.testBit(a - 1)) // force MSB set\n        self.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, self);\n      if (self.isEven()) self.dAddOffset(1, 0); // force odd\n      while (!self.isProbablePrime(b)) {\n        self.dAddOffset(2, 0);\n        if (self.bitLength() > a) self.subTo(BigInteger.ONE.shiftLeft(a - 1), self);\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n        t = a & 7;\n    x.length = (a >> 3) + 1;\n    b.nextBytes(x);\n    if (t > 0) x[0] &= (1 << t) - 1;else x[0] = 0;\n    self.fromString(x, 256);\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var self = this;\n  var i = self.t,\n      r = new Array();\n  r[0] = self.s;\n  var p = self.DB - i * self.DB % 8,\n      d,\n      k = 0;\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) != (self.s & self.DM) >> p) r[k++] = d | self.s << self.DB - p;\n    while (i >= 0) {\n      if (p < 8) {\n        d = (self[i] & (1 << p) - 1) << 8 - p;\n        d |= self[--i] >> (p += self.DB - 8);\n      } else {\n        d = self[i] >> (p -= 8) & 0xff;\n        if (p <= 0) {\n          p += self.DB;\n          --i;\n        }\n      }\n      if ((d & 0x80) != 0) d |= -256;\n      if (k === 0 && (self.s & 0x80) != (d & 0x80)) ++k;\n      if (k > 0 || d != self.s) r[k++] = d;\n    }\n  }\n  return r;\n}\n\nfunction bnEquals(a) {\n  return this.compareTo(a) == 0;\n}\n\nfunction bnMin(a) {\n  return this.compareTo(a) < 0 ? this : a;\n}\n\nfunction bnMax(a) {\n  return this.compareTo(a) > 0 ? this : a;\n}\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a, op, r) {\n  var self = this;\n  var i,\n      f,\n      m = Math.min(a.t, self.t);\n  for (i = 0; i < m; ++i) {\n    r[i] = op(self[i], a[i]);\n  }if (a.t < self.t) {\n    f = a.s & self.DM;\n    for (i = m; i < self.t; ++i) {\n      r[i] = op(self[i], f);\n    }r.t = self.t;\n  } else {\n    f = self.s & self.DM;\n    for (i = m; i < a.t; ++i) {\n      r[i] = op(f, a[i]);\n    }r.t = a.t;\n  }\n  r.s = op(self.s, a.s);\n  r.clamp();\n}\n\n// (public) this & a\nfunction op_and(x, y) {\n  return x & y;\n}\n\nfunction bnAnd(a) {\n  var r = new BigInteger();\n  this.bitwiseTo(a, op_and, r);\n  return r;\n}\n\n// (public) this | a\nfunction op_or(x, y) {\n  return x | y;\n}\n\nfunction bnOr(a) {\n  var r = new BigInteger();\n  this.bitwiseTo(a, op_or, r);\n  return r;\n}\n\n// (public) this ^ a\nfunction op_xor(x, y) {\n  return x ^ y;\n}\n\nfunction bnXor(a) {\n  var r = new BigInteger();\n  this.bitwiseTo(a, op_xor, r);\n  return r;\n}\n\n// (public) this & ~a\nfunction op_andnot(x, y) {\n  return x & ~y;\n}\n\nfunction bnAndNot(a) {\n  var r = new BigInteger();\n  this.bitwiseTo(a, op_andnot, r);\n  return r;\n}\n\n// (public) ~this\nfunction bnNot() {\n  var r = new BigInteger();\n  for (var i = 0; i < this.t; ++i) {\n    r[i] = this.DM & ~this[i];\n  }r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = new BigInteger();\n  if (n < 0) this.rShiftTo(-n, r);else this.lShiftTo(n, r);\n  return r;\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = new BigInteger();\n  if (n < 0) this.lShiftTo(-n, r);else this.rShiftTo(n, r);\n  return r;\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if (x == 0) return -1;\n  var r = 0;\n  if ((x & 0xffff) == 0) {\n    x >>= 16;\n    r += 16;\n  }\n  if ((x & 0xff) == 0) {\n    x >>= 8;\n    r += 8;\n  }\n  if ((x & 0xf) == 0) {\n    x >>= 4;\n    r += 4;\n  }\n  if ((x & 3) == 0) {\n    x >>= 2;\n    r += 2;\n  }\n  if ((x & 1) == 0) ++r;\n  return r;\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i) {\n    if (this[i] != 0) return i * this.DB + lbit(this[i]);\n  }if (this.s < 0) return this.t * this.DB;\n  return -1;\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0;\n  while (x != 0) {\n    x &= x - 1;\n    ++r;\n  }\n  return r;\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0,\n      x = this.s & this.DM;\n  for (var i = 0; i < this.t; ++i) {\n    r += cbit(this[i] ^ x);\n  }return r;\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB);\n  if (j >= this.t) return this.s != 0;\n  return (this[j] & 1 << n % this.DB) != 0;\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r, op, r);\n  return r;\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or);\n}\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot);\n}\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor);\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var self = this;\n\n  var i = 0,\n      c = 0,\n      m = Math.min(a.t, self.t);\n  while (i < m) {\n    c += self[i] + a[i];\n    r[i++] = c & self.DM;\n    c >>= self.DB;\n  }\n  if (a.t < self.t) {\n    c += a.s;\n    while (i < self.t) {\n      c += self[i];\n      r[i++] = c & self.DM;\n      c >>= self.DB;\n    }\n    c += self.s;\n  } else {\n    c += self.s;\n    while (i < a.t) {\n      c += a[i];\n      r[i++] = c & self.DM;\n      c >>= self.DB;\n    }\n    c += a.s;\n  }\n  r.s = c < 0 ? -1 : 0;\n  if (c > 0) r[i++] = c;else if (c < -1) r[i++] = self.DV + c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = new BigInteger();\n  this.addTo(a, r);\n  return r;\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = new BigInteger();\n  this.subTo(a, r);\n  return r;\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = new BigInteger();\n  this.multiplyTo(a, r);\n  return r;\n}\n\n// (public) this^2\nfunction bnSquare() {\n  var r = new BigInteger();\n  this.squareTo(r);\n  return r;\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = new BigInteger();\n  this.divRemTo(a, r, null);\n  return r;\n}\n\n// (public) this % a\nfunction bnRemainder(a) {\n  var r = new BigInteger();\n  this.divRemTo(a, null, r);\n  return r;\n}\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = new BigInteger(),\n      r = new BigInteger();\n  this.divRemTo(a, q, r);\n  return new Array(q, r);\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n  ++this.t;\n  this.clamp();\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return;\n  while (this.t <= w) {\n    this[this.t++] = 0;\n  }this[w] += n;\n  while (this[w] >= this.DV) {\n    this[w] -= this.DV;\n    if (++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\n\nfunction nNop(x) {\n  return x;\n}\n\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n}\n\nfunction nSqrTo(x, r) {\n  x.squareTo(r);\n}\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n// (public) this^e\nfunction bnPow(e) {\n  return this.exp(e, new NullExp());\n}\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while (i > 0) {\n    r[--i] = 0;\n  }var j;\n  for (j = r.t - this.t; i < j; ++i) {\n    r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n  }for (j = Math.min(a.t, n); i < j; ++i) {\n    this.am(0, a[i], r, i, 0, n - i);\n  }r.clamp();\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n;\n  var i = r.t = this.t + a.t - n;\n  r.s = 0; // assumes a,this >= 0\n  while (--i >= 0) {\n    r[i] = 0;\n  }for (i = Math.max(n - this.t, 0); i < a.t; ++i) {\n    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n  }r.clamp();\n  r.drShiftTo(1, r);\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = new BigInteger();\n  this.q3 = new BigInteger();\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);else if (x.compareTo(this.m) < 0) return x;else {\n    var r = new BigInteger();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n}\n\nfunction barrettRevert(x) {\n  return x;\n}\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  var self = this;\n  x.drShiftTo(self.m.t - 1, self.r2);\n  if (x.t > self.m.t + 1) {\n    x.t = self.m.t + 1;\n    x.clamp();\n  }\n  self.mu.multiplyUpperTo(self.r2, self.m.t + 1, self.q3);\n  self.m.multiplyLowerTo(self.q3, self.m.t + 1, self.r2);\n  while (x.compareTo(self.r2) < 0) {\n    x.dAddOffset(1, self.m.t + 1);\n  }x.subTo(self.r2, x);\n  while (x.compareTo(self.m) >= 0) {\n    x.subTo(self.m, x);\n  }\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r);\n  this.reduce(r);\n}\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n      k,\n      r = nbv(1),\n      z;\n  if (i <= 0) return r;else if (i < 18) k = 1;else if (i < 48) k = 3;else if (i < 144) k = 4;else if (i < 768) k = 5;else k = 6;\n  if (i < 8) z = new Classic(m);else if (m.isEven()) z = new Barrett(m);else z = new Montgomery(m);\n\n  // precomputation\n  var g = new Array(),\n      n = 3,\n      k1 = k - 1,\n      km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1) {\n    var g2 = new BigInteger();\n    z.sqrTo(g[1], g2);\n    while (n <= km) {\n      g[n] = new BigInteger();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t - 1,\n      w,\n      is1 = true,\n      r2 = new BigInteger(),\n      t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0) {\n    if (i >= k1) w = e[j] >> i - k1 & km;else {\n      w = (e[j] & (1 << i + 1) - 1) << k1 - i;\n      if (j > 0) w |= e[j - 1] >> this.DB + i - k1;\n    }\n\n    n = k;\n    while ((w & 1) == 0) {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0) {\n      i += this.DB;\n      --j;\n    }\n    if (is1) {\n      // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);else {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n\n    while (j >= 0 && (e[j] & 1 << i) == 0) {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0) {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = this.s < 0 ? this.negate() : this.clone();\n  var y = a.s < 0 ? a.negate() : a.clone();\n  if (x.compareTo(y) < 0) {\n    var t = x;\n    x = y;\n    y = t;\n  }\n  var i = x.getLowestSetBit(),\n      g = y.getLowestSetBit();\n  if (g < 0) return x;\n  if (i < g) g = i;\n  if (g > 0) {\n    x.rShiftTo(g, x);\n    y.rShiftTo(g, y);\n  }\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x);\n      x.rShiftTo(1, x);\n    } else {\n      y.subTo(x, y);\n      y.rShiftTo(1, y);\n    }\n  }\n  if (g > 0) y.lShiftTo(g, y);\n  return y;\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if (n <= 0) return 0;\n  var d = this.DV % n,\n      r = this.s < 0 ? n - 1 : 0;\n  if (this.t > 0) if (d == 0) r = this[0] % n;else for (var i = this.t - 1; i >= 0; --i) {\n    r = (d * r + this[i]) % n;\n  }return r;\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if (this.signum() === 0) throw new Error('division by zero');\n  if (this.isEven() && ac || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(),\n      v = this.clone();\n  var a = nbv(1),\n      b = nbv(0),\n      c = nbv(0),\n      d = nbv(1);\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u);\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a);\n          b.subTo(m, b);\n        }\n        a.rShiftTo(1, a);\n      } else if (!b.isEven()) b.subTo(m, b);\n      b.rShiftTo(1, b);\n    }\n    while (v.isEven()) {\n      v.rShiftTo(1, v);\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c);\n          d.subTo(m, d);\n        }\n        c.rShiftTo(1, c);\n      } else if (!d.isEven()) d.subTo(m, d);\n      d.rShiftTo(1, d);\n    }\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u);\n      if (ac) a.subTo(c, a);\n      b.subTo(d, b);\n    } else {\n      v.subTo(u, v);\n      if (ac) c.subTo(a, c);\n      d.subTo(b, d);\n    }\n  }\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  while (d.compareTo(m) >= 0) {\n    d.subTo(m, d);\n  }while (d.signum() < 0) {\n    d.addTo(m, d);\n  }return d;\n}\n\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i,\n      x = this.abs();\n  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i) {\n      if (x[0] == lowprimes[i]) return true;\n    }return false;\n  }\n  if (x.isEven()) return false;\n  i = 1;\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n        j = i + 1;\n    while (j < lowprimes.length && m < lplim) {\n      m *= lowprimes[j++];\n    }m = x.modInt(m);\n    while (i < j) {\n      if (m % lowprimes[i++] == 0) return false;\n    }\n  }\n  return x.millerRabin(t);\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if (k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = t + 1 >> 1;\n  if (t > lowprimes.length) t = lowprimes.length;\n  var a = new BigInteger(null);\n  var j,\n      bases = [];\n  for (var i = 0; i < t; ++i) {\n    for (;;) {\n      j = lowprimes[Math.floor(Math.random() * lowprimes.length)];\n      if (bases.indexOf(j) == -1) break;\n    }\n    bases.push(j);\n    a.fromInt(j);\n    var y = a.modPow(r, this);\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this);\n        if (y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if (y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n\n// protected\nproto.chunkSize = bnpChunkSize;\nproto.toRadix = bnpToRadix;\nproto.fromRadix = bnpFromRadix;\nproto.fromNumber = bnpFromNumber;\nproto.bitwiseTo = bnpBitwiseTo;\nproto.changeBit = bnpChangeBit;\nproto.addTo = bnpAddTo;\nproto.dMultiply = bnpDMultiply;\nproto.dAddOffset = bnpDAddOffset;\nproto.multiplyLowerTo = bnpMultiplyLowerTo;\nproto.multiplyUpperTo = bnpMultiplyUpperTo;\nproto.modInt = bnpModInt;\nproto.millerRabin = bnpMillerRabin;\n\n// public\nproto.clone = bnClone;\nproto.intValue = bnIntValue;\nproto.byteValue = bnByteValue;\nproto.shortValue = bnShortValue;\nproto.signum = bnSigNum;\nproto.toByteArray = bnToByteArray;\nproto.equals = bnEquals;\nproto.min = bnMin;\nproto.max = bnMax;\nproto.and = bnAnd;\nproto.or = bnOr;\nproto.xor = bnXor;\nproto.andNot = bnAndNot;\nproto.not = bnNot;\nproto.shiftLeft = bnShiftLeft;\nproto.shiftRight = bnShiftRight;\nproto.getLowestSetBit = bnGetLowestSetBit;\nproto.bitCount = bnBitCount;\nproto.testBit = bnTestBit;\nproto.setBit = bnSetBit;\nproto.clearBit = bnClearBit;\nproto.flipBit = bnFlipBit;\nproto.add = bnAdd;\nproto.subtract = bnSubtract;\nproto.multiply = bnMultiply;\nproto.divide = bnDivide;\nproto.remainder = bnRemainder;\nproto.divideAndRemainder = bnDivideAndRemainder;\nproto.modPow = bnModPow;\nproto.modInverse = bnModInverse;\nproto.pow = bnPow;\nproto.gcd = bnGCD;\nproto.isProbablePrime = bnIsProbablePrime;\n\n// JSBN-specific extension\nproto.square = bnSquare;\n\n// constants\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\nBigInteger.valueOf = nbv;\n\nmodule.exports = BigInteger;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/bigi/lib/bigi.js\n ** module id = 18\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/bigi/lib/bigi.js?");

/***/ },
/* 19 */
/***/ function(module, exports) {

	eval("module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t\"bigi@^1.4.1\",\n\t\t\t\"/home/johann/dev/open-registry-utils\"\n\t\t]\n\t],\n\t\"_from\": \"bigi@>=1.4.1 <2.0.0\",\n\t\"_id\": \"bigi@1.4.2\",\n\t\"_inCache\": true,\n\t\"_installable\": true,\n\t\"_location\": \"/bigi\",\n\t\"_nodeVersion\": \"6.1.0\",\n\t\"_npmOperationalInternal\": {\n\t\t\"host\": \"packages-12-west.internal.npmjs.com\",\n\t\t\"tmp\": \"tmp/bigi-1.4.2.tgz_1469584192413_0.6801238611806184\"\n\t},\n\t\"_npmUser\": {\n\t\t\"email\": \"jprichardson@gmail.com\",\n\t\t\"name\": \"jprichardson\"\n\t},\n\t\"_npmVersion\": \"3.8.6\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"name\": \"bigi\",\n\t\t\"raw\": \"bigi@^1.4.1\",\n\t\t\"rawSpec\": \"^1.4.1\",\n\t\t\"scope\": null,\n\t\t\"spec\": \">=1.4.1 <2.0.0\",\n\t\t\"type\": \"range\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/\",\n\t\t\"/ecurve\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz\",\n\t\"_shasum\": \"9c665a95f88b8b08fc05cfd731f561859d725825\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"bigi@^1.4.1\",\n\t\"_where\": \"/home/johann/dev/open-registry-utils\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/cryptocoinjs/bigi/issues\"\n\t},\n\t\"dependencies\": {},\n\t\"description\": \"Big integers.\",\n\t\"devDependencies\": {\n\t\t\"coveralls\": \"^2.11.2\",\n\t\t\"istanbul\": \"^0.3.5\",\n\t\t\"jshint\": \"^2.5.1\",\n\t\t\"mocha\": \"^2.1.0\",\n\t\t\"mochify\": \"^2.1.0\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"9c665a95f88b8b08fc05cfd731f561859d725825\",\n\t\t\"tarball\": \"https://registry.npmjs.org/bigi/-/bigi-1.4.2.tgz\"\n\t},\n\t\"gitHead\": \"c25308081c896ff84702303722bf5ecd8b3f78e3\",\n\t\"homepage\": \"https://github.com/cryptocoinjs/bigi#readme\",\n\t\"keywords\": [\n\t\t\"arbitrary\",\n\t\t\"arithmetic\",\n\t\t\"big\",\n\t\t\"bigint\",\n\t\t\"biginteger\",\n\t\t\"bignumber\",\n\t\t\"bitcoin\",\n\t\t\"cryptography\",\n\t\t\"decimal\",\n\t\t\"float\",\n\t\t\"int\",\n\t\t\"integer\",\n\t\t\"math\",\n\t\t\"number\",\n\t\t\"precision\"\n\t],\n\t\"main\": \"./lib/index.js\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"name\": \"midnightlightning\",\n\t\t\t\"email\": \"boydb@midnightdesign.ws\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"sidazhang\",\n\t\t\t\"email\": \"sidazhang89@gmail.com\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"nadav\",\n\t\t\t\"email\": \"npm@shesek.info\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"jprichardson\",\n\t\t\t\"email\": \"jprichardson@gmail.com\"\n\t\t}\n\t],\n\t\"name\": \"bigi\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/cryptocoinjs/bigi.git\"\n\t},\n\t\"scripts\": {\n\t\t\"browser-test\": \"mochify --wd -R spec\",\n\t\t\"coverage\": \"istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js\",\n\t\t\"coveralls\": \"npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info\",\n\t\t\"jshint\": \"jshint --config jshint.json lib/*.js ; true\",\n\t\t\"test\": \"_mocha -- test/*.js\",\n\t\t\"unit\": \"mocha\"\n\t},\n\t\"testling\": {\n\t\t\"browsers\": [\n\t\t\t\"android-browser/4.2..latest\",\n\t\t\t\"chrome/latest\",\n\t\t\t\"firefox/latest\",\n\t\t\t\"ie/9..latest\",\n\t\t\t\"iphone/6.0..latest\",\n\t\t\t\"safari/6.0..latest\"\n\t\t],\n\t\t\"files\": \"test/*.js\",\n\t\t\"harness\": \"mocha\"\n\t},\n\t\"version\": \"1.4.2\"\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/bigi/package.json\n ** module id = 19\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/bigi/package.json?");

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\n// FIXME: Kind of a weird way to throw exceptions, consider removing\nvar assert = __webpack_require__(25);\nvar BigInteger = __webpack_require__(18);\n\n/**\n * Turns a byte array into a big integer.\n *\n * This function will interpret a byte array as a big integer in big\n * endian notation.\n */\nBigInteger.fromByteArrayUnsigned = function (byteArray) {\n  // BigInteger expects a DER integer conformant byte array\n  if (byteArray[0] & 0x80) {\n    return new BigInteger([0].concat(byteArray));\n  }\n\n  return new BigInteger(byteArray);\n};\n\n/**\n * Returns a byte array representation of the big integer.\n *\n * This returns the absolute of the contained value in big endian\n * form. A value of zero results in an empty array.\n */\nBigInteger.prototype.toByteArrayUnsigned = function () {\n  var byteArray = this.toByteArray();\n  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray;\n};\n\nBigInteger.fromDERInteger = function (byteArray) {\n  return new BigInteger(byteArray);\n};\n\n/*\n * Converts BigInteger to a DER integer representation.\n *\n * The format for this value uses the most significant bit as a sign\n * bit.  If the most significant bit is already set and the integer is\n * positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nBigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray;\n\nBigInteger.fromBuffer = function (buffer) {\n  // BigInteger expects a DER integer conformant byte array\n  if (buffer[0] & 0x80) {\n    var byteArray = Array.prototype.slice.call(buffer);\n\n    return new BigInteger([0].concat(byteArray));\n  }\n\n  return new BigInteger(buffer);\n};\n\nBigInteger.fromHex = function (hex) {\n  if (hex === '') return BigInteger.ZERO;\n\n  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string');\n  assert.equal(hex.length % 2, 0, 'Incomplete hex');\n  return new BigInteger(hex, 16);\n};\n\nBigInteger.prototype.toBuffer = function (size) {\n  var byteArray = this.toByteArrayUnsigned();\n  var zeros = [];\n\n  var padding = size - byteArray.length;\n  while (zeros.length < padding) {\n    zeros.push(0);\n  }return new Buffer(zeros.concat(byteArray));\n};\n\nBigInteger.prototype.toHex = function (size) {\n  return this.toBuffer(size).toString('hex');\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/bigi/lib/convert.js\n ** module id = 20\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/bigi/lib/convert.js?");

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar base64 = __webpack_require__(22);\nvar ieee754 = __webpack_require__(23);\nvar isArray = __webpack_require__(24);\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nBuffer.poolSize = 8192; // not used by this implementation\n\nvar rootParent = {};\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\nfunction typedArraySupport() {\n  function Bar() {}\n  try {\n    var arr = new Uint8Array(1);\n    arr.foo = function () {\n      return 42;\n    };\n    arr.constructor = Bar;\n    return arr.foo() === 42 && // typed array instances can be augmented\n    arr.constructor === Bar && // constructor can be set\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer(arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1]);\n    return new Buffer(arg);\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0;\n    this.parent = undefined;\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg);\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8');\n  }\n\n  // Unusual.\n  return fromObject(this, arg);\n}\n\nfunction fromNumber(that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0;\n    }\n  }\n  return that;\n}\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0;\n  that = allocate(that, length);\n\n  that.write(string, encoding);\n  return that;\n}\n\nfunction fromObject(that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object);\n\n  if (isArray(object)) return fromArray(that, object);\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object);\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object);\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object);\n\n  return fromJsonObject(that, object);\n}\n\nfunction fromBuffer(that, buffer) {\n  var length = checked(buffer.length) | 0;\n  that = allocate(that, length);\n  buffer.copy(that, 0, 0, length);\n  return that;\n}\n\nfunction fromArray(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\nfunction fromArrayBuffer(that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength;\n    that = Buffer._augment(new Uint8Array(array));\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array));\n  }\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject(that, object) {\n  var array;\n  var length = 0;\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data;\n    length = checked(array.length) | 0;\n  }\n  that = allocate(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined;\n  Buffer.prototype.parent = undefined;\n}\n\nfunction allocate(that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length));\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length;\n    that._isBuffer = true;\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1;\n  if (fromPool) that.parent = rootParent;\n\n  return that;\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n  return length | 0;\n}\n\nfunction SlowBuffer(subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding);\n\n  var buf = new Buffer(subject, encoding);\n  delete buf.parent;\n  return buf;\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n\n  var x = a.length;\n  var y = b.length;\n\n  var i = 0;\n  var len = Math.min(x, y);\n  while (i < len) {\n    if (a[i] !== b[i]) break;\n\n    ++i;\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.');\n\n  if (list.length === 0) {\n    return new Buffer(0);\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length;\n    }\n  }\n\n  var buf = new Buffer(length);\n  var pos = 0;\n  for (i = 0; i < list.length; i++) {\n    var item = list[i];\n    item.copy(buf, pos);\n    pos += item.length;\n  }\n  return buf;\n};\n\nfunction byteLength(string, encoding) {\n  if (typeof string !== 'string') string = '' + string;\n\n  var len = string.length;\n  if (len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  start = start | 0;\n  end = end === undefined || end === Infinity ? this.length : end | 0;\n\n  if (!encoding) encoding = 'utf8';\n  if (start < 0) start = 0;\n  if (end > this.length) end = this.length;\n  if (end <= start) return '';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'binary':\n        return binarySlice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return 0;\n  return Buffer.compare(this, b);\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;else if (byteOffset < -0x80000000) byteOffset = -0x80000000;\n  byteOffset >>= 0;\n\n  if (this.length === 0) return -1;\n  if (byteOffset >= this.length) return -1;\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0);\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1; // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset);\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset);\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset);\n    }\n    return arrayIndexOf(this, [val], byteOffset);\n  }\n\n  function arrayIndexOf(arr, val, byteOffset) {\n    var foundIndex = -1;\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex;\n      } else {\n        foundIndex = -1;\n      }\n    }\n    return -1;\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n};\n\n// `get` is deprecated\nBuffer.prototype.get = function get(offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.');\n  return this.readUInt8(offset);\n};\n\n// `set` is deprecated\nBuffer.prototype.set = function set(v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.');\n  return this.writeUInt8(v, offset);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) throw new Error('Invalid hex string');\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction binaryWrite(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding;\n    encoding = offset;\n    offset = length | 0;\n    length = swap;\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\n\nfunction binarySlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end));\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this;\n\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('value is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = value < 0 ? 1 : 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = value < 0 ? 1 : 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('index out of range');\n  if (offset < 0) throw new RangeError('index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n};\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill(value, start, end) {\n  if (!value) value = 0;\n  if (!start) start = 0;\n  if (!end) end = this.length;\n\n  if (end < start) throw new RangeError('end < start');\n\n  // Fill 0 bytes; we're done\n  if (end === start) return;\n  if (this.length === 0) return;\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds');\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds');\n\n  var i;\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value;\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString());\n    var len = bytes.length;\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len];\n    }\n  }\n\n  return this;\n};\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer() {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return new Buffer(this).buffer;\n    } else {\n      var buf = new Uint8Array(this.length);\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i];\n      }\n      return buf.buffer;\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser');\n  }\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype;\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment(arr) {\n  arr.constructor = Buffer;\n  arr._isBuffer = true;\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set;\n\n  // deprecated\n  arr.get = BP.get;\n  arr.set = BP.set;\n\n  arr.write = BP.write;\n  arr.toString = BP.toString;\n  arr.toLocaleString = BP.toString;\n  arr.toJSON = BP.toJSON;\n  arr.equals = BP.equals;\n  arr.compare = BP.compare;\n  arr.indexOf = BP.indexOf;\n  arr.copy = BP.copy;\n  arr.slice = BP.slice;\n  arr.readUIntLE = BP.readUIntLE;\n  arr.readUIntBE = BP.readUIntBE;\n  arr.readUInt8 = BP.readUInt8;\n  arr.readUInt16LE = BP.readUInt16LE;\n  arr.readUInt16BE = BP.readUInt16BE;\n  arr.readUInt32LE = BP.readUInt32LE;\n  arr.readUInt32BE = BP.readUInt32BE;\n  arr.readIntLE = BP.readIntLE;\n  arr.readIntBE = BP.readIntBE;\n  arr.readInt8 = BP.readInt8;\n  arr.readInt16LE = BP.readInt16LE;\n  arr.readInt16BE = BP.readInt16BE;\n  arr.readInt32LE = BP.readInt32LE;\n  arr.readInt32BE = BP.readInt32BE;\n  arr.readFloatLE = BP.readFloatLE;\n  arr.readFloatBE = BP.readFloatBE;\n  arr.readDoubleLE = BP.readDoubleLE;\n  arr.readDoubleBE = BP.readDoubleBE;\n  arr.writeUInt8 = BP.writeUInt8;\n  arr.writeUIntLE = BP.writeUIntLE;\n  arr.writeUIntBE = BP.writeUIntBE;\n  arr.writeUInt16LE = BP.writeUInt16LE;\n  arr.writeUInt16BE = BP.writeUInt16BE;\n  arr.writeUInt32LE = BP.writeUInt32LE;\n  arr.writeUInt32BE = BP.writeUInt32BE;\n  arr.writeIntLE = BP.writeIntLE;\n  arr.writeIntBE = BP.writeIntBE;\n  arr.writeInt8 = BP.writeInt8;\n  arr.writeInt16LE = BP.writeInt16LE;\n  arr.writeInt16BE = BP.writeInt16BE;\n  arr.writeInt32LE = BP.writeInt32LE;\n  arr.writeInt32BE = BP.writeInt32BE;\n  arr.writeFloatLE = BP.writeFloatLE;\n  arr.writeFloatBE = BP.writeFloatBE;\n  arr.writeDoubleLE = BP.writeDoubleLE;\n  arr.writeDoubleBE = BP.writeDoubleBE;\n  arr.fill = BP.fill;\n  arr.inspect = BP.inspect;\n  arr.toArrayBuffer = BP.toArrayBuffer;\n\n  return arr;\n};\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break;\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 21\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/buffer/index.js?");

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\n\tvar PLUS = '+'.charCodeAt(0);\n\tvar SLASH = '/'.charCodeAt(0);\n\tvar NUMBER = '0'.charCodeAt(0);\n\tvar LOWER = 'a'.charCodeAt(0);\n\tvar UPPER = 'A'.charCodeAt(0);\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0);\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0);\n\n\tfunction decode(elt) {\n\t\tvar code = elt.charCodeAt(0);\n\t\tif (code === PLUS || code === PLUS_URL_SAFE) return 62; // '+'\n\t\tif (code === SLASH || code === SLASH_URL_SAFE) return 63; // '/'\n\t\tif (code < NUMBER) return -1; //no match\n\t\tif (code < NUMBER + 10) return code - NUMBER + 26 + 26;\n\t\tif (code < UPPER + 26) return code - UPPER;\n\t\tif (code < LOWER + 26) return code - LOWER + 26;\n\t}\n\n\tfunction b64ToByteArray(b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr;\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4');\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length;\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0;\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders);\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n\t\tvar L = 0;\n\n\t\tfunction push(v) {\n\t\t\tarr[L++] = v;\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));\n\t\t\tpush((tmp & 0xFF0000) >> 16);\n\t\t\tpush((tmp & 0xFF00) >> 8);\n\t\t\tpush(tmp & 0xFF);\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;\n\t\t\tpush(tmp & 0xFF);\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;\n\t\t\tpush(tmp >> 8 & 0xFF);\n\t\t\tpush(tmp & 0xFF);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tfunction uint8ToBase64(uint8) {\n\t\tvar i,\n\t\t    extraBytes = uint8.length % 3,\n\t\t    // if we have 1 byte left, pad 2 bytes\n\t\toutput = \"\",\n\t\t    temp,\n\t\t    length;\n\n\t\tfunction encode(num) {\n\t\t\treturn lookup.charAt(num);\n\t\t}\n\n\t\tfunction tripletToBase64(num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F);\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t\t\toutput += tripletToBase64(temp);\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1];\n\t\t\t\toutput += encode(temp >> 2);\n\t\t\t\toutput += encode(temp << 4 & 0x3F);\n\t\t\t\toutput += '==';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];\n\t\t\t\toutput += encode(temp >> 10);\n\t\t\t\toutput += encode(temp >> 4 & 0x3F);\n\t\t\t\toutput += encode(temp << 2 & 0x3F);\n\t\t\t\toutput += '=';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\texports.toByteArray = b64ToByteArray;\n\texports.fromByteArray = uint8ToBase64;\n})( false ? undefined.base64js = {} : exports);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/lib/b64.js\n ** module id = 22\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/base64-js/lib/b64.js?");

/***/ },
/* 23 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 23\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/ieee754/index.js?");

/***/ },
/* 24 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 24\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/isarray/index.js?");

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(26);\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = function () {\n  return function foo() {}.name === 'foo';\n}();\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n    // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n    // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase;\n\n    // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || (typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) !== 'object') && (expected === null || (typeof expected === 'undefined' ? 'undefined' : _typeof(expected)) !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n    // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0;\n\n    // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || { actual: [], expected: [] };\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length) return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function (block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function (block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function (err) {\n  if (err) throw err;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/assert/assert.js\n ** module id = 25\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/assert/assert.js?");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global, process) {'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n      case '%d':\n        return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function (fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n  return debugs[set];\n};\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str + '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) &&\n  // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect &&\n  // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(27);\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(28);\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/util.js\n ** module id = 26\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/util/util.js?");

/***/ },
/* 27 */
/***/ function(module, exports) {

	eval("'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isBuffer(arg) {\n  return arg && (typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/support/isBufferBrowser.js\n ** module id = 27\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/util/support/isBufferBrowser.js?");

/***/ },
/* 28 */
/***/ function(module, exports) {

	eval("'use strict';\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function TempCtor() {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 28\n ** module chunks = 0 1 2\n **/\n//# sourceURL=webpack:///./~/inherits/inherits_browser.js?");

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar Crypto = exports.Crypto = __webpack_require__(30).Crypto;\n\n['hmac', 'sha1', 'pbkdf2', 'des', 'marc4', 'aes', 'md5', 'pbkdf2async', 'rabbit', 'sha256'].forEach(function (path) {\n\tvar module = __webpack_require__(31)(\"./\" + path);\n\tfor (var i in module) {\n\t\tCrypto[i] = module[i];\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/index.js\n ** module id = 29\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/index.js?");

/***/ },
/* 30 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nvar base64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n// Global Crypto object\nvar Crypto = exports.Crypto = {};\n\n// Crypto utilities\nvar util = Crypto.util = {\n\n    // Bit-wise rotate left\n    rotl: function rotl(n, b) {\n        return n << b | n >>> 32 - b;\n    },\n\n    // Bit-wise rotate right\n    rotr: function rotr(n, b) {\n        return n << 32 - b | n >>> b;\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function endian(n) {\n\n        // If number given, swap endian\n        if (n.constructor == Number) {\n            return util.rotl(n, 8) & 0x00FF00FF | util.rotl(n, 24) & 0xFF00FF00;\n        }\n\n        // Else, assume array and swap all items\n        for (var i = 0; i < n.length; i++) {\n            n[i] = util.endian(n[i]);\n        }return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function randomBytes(n) {\n        for (var bytes = []; n > 0; n--) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function bytesToWords(bytes) {\n        for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8) {\n            words[b >>> 5] |= bytes[i] << 24 - b % 32;\n        }return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function wordsToBytes(words) {\n        for (var bytes = [], b = 0; b < words.length * 32; b += 8) {\n            bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);\n        }return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function bytesToHex(bytes) {\n        for (var hex = [], i = 0; i < bytes.length; i++) {\n            hex.push((bytes[i] >>> 4).toString(16));\n            hex.push((bytes[i] & 0xF).toString(16));\n        }\n        return hex.join(\"\");\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function hexToBytes(hex) {\n        for (var bytes = [], c = 0; c < hex.length; c += 2) {\n            bytes.push(parseInt(hex.substr(c, 2), 16));\n        }return bytes;\n    },\n\n    // Convert a string to a base-64 string\n    stringToBase64: function stringToBase64(str, encoding) {\n        var bytes;\n        if (typeof encoding != 'string') {\n            bytes = UTF8.stringToBytes(str);\n        } else if (encoding.toLowerCase() == 'binary') {\n            bytes = Binary.stringToBytes(str);\n        } else if (encoding.toLowerCase() == 'utf8' || encoding.toLowerCase() == 'utf-8') {\n            bytes = UTF8.stringToBytes(str);\n        } else {\n            bytes = UTF8.stringToBytes(str);\n        }\n\n        return this.bytesToBase64(bytes);\n    },\n\n    // Convert a base-64 string to origin string\n    base64ToString: function base64ToString(base64, encoding) {\n        var bytes, str;\n\n        bytes = this.base64ToBytes(base64);\n\n        if (typeof encoding != 'string') {\n            str = UTF8.bytesToString(bytes);\n        } else if (encoding.toLowerCase() == 'binary') {\n            str = Binary.bytesToString(bytes);\n        } else if (encoding.toLowerCase() == 'utf8' || encoding.toLowerCase() == 'utf-8') {\n            str = UTF8.bytesToString(bytes);\n        } else {\n            str = UTF8.bytesToString(bytes);\n        }\n\n        return str;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function bytesToBase64(bytes) {\n\n        // Use browser-native function if it exists\n        if (typeof btoa == \"function\") return btoa(Binary.bytesToString(bytes));\n\n        for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n            var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];\n            for (var j = 0; j < 4; j++) {\n                if (i * 8 + j * 6 <= bytes.length * 8) base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));else base64.push(\"=\");\n            }\n        }\n\n        return base64.join(\"\");\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function base64ToBytes(base64) {\n\n        // Use browser-native function if it exists\n        if (typeof atob == \"function\") return Binary.stringToBytes(atob(base64));\n\n        // Remove non-base-64 characters\n        base64 = base64.replace(/[^A-Z0-9+\\/]/ig, \"\");\n\n        for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {\n            if (imod4 == 0) continue;\n            bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);\n        }\n\n        return bytes;\n    }\n\n};\n\n// Crypto character encodings\nvar charenc = Crypto.charenc = {};\n\n// UTF-8 encoding\nvar UTF8 = charenc.UTF8 = {\n\n    // Convert a string to a byte array\n    stringToBytes: function stringToBytes(str) {\n        return Binary.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function bytesToString(bytes) {\n        return decodeURIComponent(escape(Binary.bytesToString(bytes)));\n    }\n\n};\n\n// Binary encoding\nvar Binary = charenc.Binary = {\n\n    // Convert a string to a byte array\n    stringToBytes: function stringToBytes(str) {\n        for (var bytes = [], i = 0; i < str.length; i++) {\n            bytes.push(str.charCodeAt(i) & 0xFF);\n        }return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function bytesToString(bytes) {\n        for (var str = [], i = 0; i < bytes.length; i++) {\n            str.push(String.fromCharCode(bytes[i]));\n        }return str.join(\"\");\n    }\n\n};\n// Shortcut\nvar util = Crypto.util;\n\n// Convert n to unsigned 32-bit integer\nutil.u32 = function (n) {\n    return n >>> 0;\n};\n\n// Unsigned 32-bit addition\nutil.add = function () {\n    var result = this.u32(arguments[0]);\n    for (var i = 1; i < arguments.length; i++) {\n        result = this.u32(result + this.u32(arguments[i]));\n    }return result;\n};\n\n// Unsigned 32-bit multiplication\nutil.mult = function (m, n) {\n    return this.add((n & 0xFFFF0000) * m, (n & 0x0000FFFF) * m);\n};\n\n// Unsigned 32-bit greater than (>) comparison\nutil.gt = function (m, n) {\n    return this.u32(m) > this.u32(n);\n};\n\n// Unsigned 32-bit less than (<) comparison\nutil.lt = function (m, n) {\n    return this.u32(m) < this.u32(n);\n};\n\n// Create pad namespace\nvar C_pad = Crypto.pad = {};\n\n// Calculate the number of padding bytes required.\nfunction _requiredPadding(cipher, message) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n    var reqd = blockSizeInBytes - message.length % blockSizeInBytes;\n    return reqd;\n};\n\n// Remove padding when the final byte gives the number of padding bytes.\nvar _unpadLength = function _unpadLength(message) {\n    var pad = message.pop();\n    for (var i = 1; i < pad; i++) {\n        message.pop();\n    }\n};\n\n// No-operation padding, used for stream ciphers\nC_pad.NoPadding = {\n    pad: function pad(cipher, message) {},\n    unpad: function unpad(message) {}\n};\n\n// Zero Padding.\n//\n// If the message is not an exact number of blocks, the final block is\n// completed with 0x00 bytes. There is no unpadding.\nC_pad.ZeroPadding = {\n    pad: function pad(cipher, message) {\n        var blockSizeInBytes = cipher._blocksize * 4;\n        var reqd = message.length % blockSizeInBytes;\n        if (reqd != 0) {\n            for (reqd = blockSizeInBytes - reqd; reqd > 0; reqd--) {\n                message.push(0x00);\n            }\n        }\n    },\n\n    unpad: function unpad(message) {}\n};\n\n// ISO/IEC 7816-4 padding.\n//\n// Pads the plain text with an 0x80 byte followed by as many 0x00\n// bytes are required to complete the block.\nC_pad.iso7816 = {\n    pad: function pad(cipher, message) {\n        var reqd = _requiredPadding(cipher, message);\n        message.push(0x80);\n        for (; reqd > 1; reqd--) {\n            message.push(0x00);\n        }\n    },\n\n    unpad: function unpad(message) {\n        while (message.pop() != 0x80) {}\n    }\n};\n\n// ANSI X.923 padding\n//\n// The final block is padded with zeros except for the last byte of the\n// last block which contains the number of padding bytes.\nC_pad.ansix923 = {\n    pad: function pad(cipher, message) {\n        var reqd = _requiredPadding(cipher, message);\n        for (var i = 1; i < reqd; i++) {\n            message.push(0x00);\n        }\n        message.push(reqd);\n    },\n\n    unpad: _unpadLength\n};\n\n// ISO 10126\n//\n// The final block is padded with random bytes except for the last\n// byte of the last block which contains the number of padding bytes.\nC_pad.iso10126 = {\n    pad: function pad(cipher, message) {\n        var reqd = _requiredPadding(cipher, message);\n        for (var i = 1; i < reqd; i++) {\n            message.push(Math.floor(Math.random() * 256));\n        }\n        message.push(reqd);\n    },\n\n    unpad: _unpadLength\n};\n\n// PKCS7 padding\n//\n// PKCS7 is described in RFC 5652. Padding is in whole bytes. The\n// value of each added byte is the number of bytes that are added,\n// i.e. N bytes, each of value N are added.\nC_pad.pkcs7 = {\n    pad: function pad(cipher, message) {\n        var reqd = _requiredPadding(cipher, message);\n        for (var i = 0; i < reqd; i++) {\n            message.push(reqd);\n        }\n    },\n\n    unpad: _unpadLength\n};\n\n// Create mode namespace\nvar C_mode = Crypto.mode = {};\n\n/**\r\n * Mode base \"class\".\r\n */\nvar Mode = C_mode.Mode = function (padding) {\n    if (padding) {\n        this._padding = padding;\n    }\n};\n\nMode.prototype = {\n    encrypt: function encrypt(cipher, m, iv) {\n        this._padding.pad(cipher, m);\n        this._doEncrypt(cipher, m, iv);\n    },\n\n    decrypt: function decrypt(cipher, m, iv) {\n        this._doDecrypt(cipher, m, iv);\n        this._padding.unpad(m);\n    },\n\n    // Default padding\n    _padding: C_pad.iso7816\n};\n\n/**\r\n * Electronic Code Book mode.\r\n * \r\n * ECB applies the cipher directly against each block of the input.\r\n * \r\n * ECB does not require an initialization vector.\r\n */\nvar ECB = C_mode.ECB = function () {\n    // Call parent constructor\n    Mode.apply(this, arguments);\n};\n\n// Inherit from Mode\nvar ECB_prototype = ECB.prototype = new Mode();\n\n// Concrete steps for Mode template\nECB_prototype._doEncrypt = function (cipher, m, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n    // Encrypt each block\n    for (var offset = 0; offset < m.length; offset += blockSizeInBytes) {\n        cipher._encryptblock(m, offset);\n    }\n};\nECB_prototype._doDecrypt = function (cipher, c, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n    // Decrypt each block\n    for (var offset = 0; offset < c.length; offset += blockSizeInBytes) {\n        cipher._decryptblock(c, offset);\n    }\n};\n\n// ECB never uses an IV\nECB_prototype.fixOptions = function (options) {\n    options.iv = [];\n};\n\n/**\r\n * Cipher block chaining\r\n * \r\n * The first block is XORed with the IV. Subsequent blocks are XOR with the\r\n * previous cipher output.\r\n */\nvar CBC = C_mode.CBC = function () {\n    // Call parent constructor\n    Mode.apply(this, arguments);\n};\n\n// Inherit from Mode\nvar CBC_prototype = CBC.prototype = new Mode();\n\n// Concrete steps for Mode template\nCBC_prototype._doEncrypt = function (cipher, m, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n\n    // Encrypt each block\n    for (var offset = 0; offset < m.length; offset += blockSizeInBytes) {\n        if (offset == 0) {\n            // XOR first block using IV\n            for (var i = 0; i < blockSizeInBytes; i++) {\n                m[i] ^= iv[i];\n            }\n        } else {\n            // XOR this block using previous crypted block\n            for (var i = 0; i < blockSizeInBytes; i++) {\n                m[offset + i] ^= m[offset + i - blockSizeInBytes];\n            }\n        }\n        // Encrypt block\n        cipher._encryptblock(m, offset);\n    }\n};\nCBC_prototype._doDecrypt = function (cipher, c, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n\n    // At the start, the previously crypted block is the IV\n    var prevCryptedBlock = iv;\n\n    // Decrypt each block\n    for (var offset = 0; offset < c.length; offset += blockSizeInBytes) {\n        // Save this crypted block\n        var thisCryptedBlock = c.slice(offset, offset + blockSizeInBytes);\n        // Decrypt block\n        cipher._decryptblock(c, offset);\n        // XOR decrypted block using previous crypted block\n        for (var i = 0; i < blockSizeInBytes; i++) {\n            c[offset + i] ^= prevCryptedBlock[i];\n        }\n        prevCryptedBlock = thisCryptedBlock;\n    }\n};\n\n/**\r\n * Cipher feed back\r\n * \r\n * The cipher output is XORed with the plain text to produce the cipher output,\r\n * which is then fed back into the cipher to produce a bit pattern to XOR the\r\n * next block with.\r\n * \r\n * This is a stream cipher mode and does not require padding.\r\n */\nvar CFB = C_mode.CFB = function () {\n    // Call parent constructor\n    Mode.apply(this, arguments);\n};\n\n// Inherit from Mode\nvar CFB_prototype = CFB.prototype = new Mode();\n\n// Override padding\nCFB_prototype._padding = C_pad.NoPadding;\n\n// Concrete steps for Mode template\nCFB_prototype._doEncrypt = function (cipher, m, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4,\n        keystream = iv.slice(0);\n\n    // Encrypt each byte\n    for (var i = 0; i < m.length; i++) {\n\n        var j = i % blockSizeInBytes;\n        if (j == 0) cipher._encryptblock(keystream, 0);\n\n        m[i] ^= keystream[j];\n        keystream[j] = m[i];\n    }\n};\nCFB_prototype._doDecrypt = function (cipher, c, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4,\n        keystream = iv.slice(0);\n\n    // Encrypt each byte\n    for (var i = 0; i < c.length; i++) {\n\n        var j = i % blockSizeInBytes;\n        if (j == 0) cipher._encryptblock(keystream, 0);\n\n        var b = c[i];\n        c[i] ^= keystream[j];\n        keystream[j] = b;\n    }\n};\n\n/**\r\n * Output feed back\r\n * \r\n * The cipher repeatedly encrypts its own output. The output is XORed with the\r\n * plain text to produce the cipher text.\r\n * \r\n * This is a stream cipher mode and does not require padding.\r\n */\nvar OFB = C_mode.OFB = function () {\n    // Call parent constructor\n    Mode.apply(this, arguments);\n};\n\n// Inherit from Mode\nvar OFB_prototype = OFB.prototype = new Mode();\n\n// Override padding\nOFB_prototype._padding = C_pad.NoPadding;\n\n// Concrete steps for Mode template\nOFB_prototype._doEncrypt = function (cipher, m, iv) {\n\n    var blockSizeInBytes = cipher._blocksize * 4,\n        keystream = iv.slice(0);\n\n    // Encrypt each byte\n    for (var i = 0; i < m.length; i++) {\n\n        // Generate keystream\n        if (i % blockSizeInBytes == 0) cipher._encryptblock(keystream, 0);\n\n        // Encrypt byte\n        m[i] ^= keystream[i % blockSizeInBytes];\n    }\n};\nOFB_prototype._doDecrypt = OFB_prototype._doEncrypt;\n\n/**\r\n * Counter\r\n * @author Gergely Risko\r\n *\r\n * After every block the last 4 bytes of the IV is increased by one\r\n * with carry and that IV is used for the next block.\r\n *\r\n * This is a stream cipher mode and does not require padding.\r\n */\nvar CTR = C_mode.CTR = function () {\n    // Call parent constructor\n    Mode.apply(this, arguments);\n};\n\n// Inherit from Mode\nvar CTR_prototype = CTR.prototype = new Mode();\n\n// Override padding\nCTR_prototype._padding = C_pad.NoPadding;\n\nCTR_prototype._doEncrypt = function (cipher, m, iv) {\n    var blockSizeInBytes = cipher._blocksize * 4;\n\n    for (var i = 0; i < m.length;) {\n        // do not lose iv\n        var keystream = iv.slice(0);\n\n        // Generate keystream for next block\n        cipher._encryptblock(keystream, 0);\n\n        // XOR keystream with block\n        for (var j = 0; i < m.length && j < blockSizeInBytes; j++, i++) {\n            m[i] ^= keystream[j];\n        }\n\n        // Increase IV\n        if (++iv[blockSizeInBytes - 1] == 256) {\n            iv[blockSizeInBytes - 1] = 0;\n            if (++iv[blockSizeInBytes - 2] == 256) {\n                iv[blockSizeInBytes - 2] = 0;\n                if (++iv[blockSizeInBytes - 3] == 256) {\n                    iv[blockSizeInBytes - 3] = 0;\n                    ++iv[blockSizeInBytes - 4];\n                }\n            }\n        }\n    }\n};\nCTR_prototype._doDecrypt = CTR_prototype._doEncrypt;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/crypto.js\n ** module id = 30\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/crypto.js?");

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	eval("var map = {\n\t\"./aes\": 32,\n\t\"./aes.js\": 32,\n\t\"./crypto\": 30,\n\t\"./crypto.js\": 30,\n\t\"./des\": 33,\n\t\"./des.js\": 33,\n\t\"./hmac\": 34,\n\t\"./hmac.js\": 34,\n\t\"./marc4\": 35,\n\t\"./marc4.js\": 35,\n\t\"./md5\": 36,\n\t\"./md5.js\": 36,\n\t\"./pbkdf2\": 37,\n\t\"./pbkdf2.js\": 37,\n\t\"./pbkdf2async\": 38,\n\t\"./pbkdf2async.js\": 38,\n\t\"./rabbit\": 39,\n\t\"./rabbit.js\": 39,\n\t\"./sha1\": 40,\n\t\"./sha1.js\": 40,\n\t\"./sha256\": 41,\n\t\"./sha256.js\": 41\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib ^\\.\\/.*$\n ** module id = 31\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib_^\\.\\/.*$?");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8;\n\n// Precomputed SBOX\nvar SBOX = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n\n// Compute inverse SBOX lookup table\nfor (var INVSBOX = [], i = 0; i < 256; i++) {\n\tINVSBOX[SBOX[i]] = i;\n} // Compute mulitplication in GF(2^8) lookup tables\nvar MULT2 = [],\n    MULT3 = [],\n    MULT9 = [],\n    MULTB = [],\n    MULTD = [],\n    MULTE = [];\n\nfunction xtime(a, b) {\n\tfor (var result = 0, i = 0; i < 8; i++) {\n\t\tif (b & 1) result ^= a;\n\t\tvar hiBitSet = a & 0x80;\n\t\ta = a << 1 & 0xFF;\n\t\tif (hiBitSet) a ^= 0x1b;\n\t\tb >>>= 1;\n\t}\n\treturn result;\n}\n\nfor (var i = 0; i < 256; i++) {\n\tMULT2[i] = xtime(i, 2);\n\tMULT3[i] = xtime(i, 3);\n\tMULT9[i] = xtime(i, 9);\n\tMULTB[i] = xtime(i, 0xB);\n\tMULTD[i] = xtime(i, 0xD);\n\tMULTE[i] = xtime(i, 0xE);\n}\n\n// Precomputed RCon lookup\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n// Inner state\nvar state = [[], [], [], []],\n    keylength,\n    nrounds,\n    keyschedule;\n\nvar AES = C.AES = {\n\n\t/**\r\n  * Public API\r\n  */\n\n\tencrypt: function encrypt(message, password, options) {\n\n\t\toptions = options || {};\n\n\t\t// Determine mode\n\t\tvar mode = options.mode || new C.mode.OFB();\n\n\t\t// Allow mode to override options\n\t\tif (mode.fixOptions) mode.fixOptions(options);\n\n\t\tvar\n\n\t\t// Convert to bytes if message is a string\n\t\tm = message.constructor == String ? UTF8.stringToBytes(message) : message,\n\n\n\t\t// Generate random IV\n\t\tiv = options.iv || util.randomBytes(AES._blocksize * 4),\n\n\n\t\t// Generate key\n\t\tk = password.constructor == String ?\n\t\t// Derive key from passphrase\n\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t// else, assume byte array representing cryptographic key\n\t\tpassword;\n\n\t\t// Encrypt\n\t\tAES._init(k);\n\t\tmode.encrypt(AES, m, iv);\n\n\t\t// Return ciphertext\n\t\tm = options.iv ? m : iv.concat(m);\n\t\treturn options && options.asBytes ? m : util.bytesToBase64(m);\n\t},\n\n\tdecrypt: function decrypt(ciphertext, password, options) {\n\n\t\toptions = options || {};\n\n\t\t// Determine mode\n\t\tvar mode = options.mode || new C.mode.OFB();\n\n\t\t// Allow mode to override options\n\t\tif (mode.fixOptions) mode.fixOptions(options);\n\n\t\tvar\n\n\t\t// Convert to bytes if ciphertext is a string\n\t\tc = ciphertext.constructor == String ? util.base64ToBytes(ciphertext) : ciphertext,\n\n\n\t\t// Separate IV and message\n\t\tiv = options.iv || c.splice(0, AES._blocksize * 4),\n\n\n\t\t// Generate key\n\t\tk = password.constructor == String ?\n\t\t// Derive key from passphrase\n\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t// else, assume byte array representing cryptographic key\n\t\tpassword;\n\n\t\t// Decrypt\n\t\tAES._init(k);\n\t\tmode.decrypt(AES, c, iv);\n\n\t\t// Return plaintext\n\t\treturn options && options.asBytes ? c : UTF8.bytesToString(c);\n\t},\n\n\t/**\r\n  * Package private methods and properties\r\n  */\n\n\t_blocksize: 4,\n\n\t_encryptblock: function _encryptblock(m, offset) {\n\n\t\t// Set input\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] = m[offset + col * 4 + row];\n\t\t\t}\n\t\t}\n\n\t\t// Add round key\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] ^= keyschedule[col][row];\n\t\t\t}\n\t\t}\n\n\t\tfor (var round = 1; round < nrounds; round++) {\n\n\t\t\t// Sub bytes\n\t\t\tfor (var row = 0; row < 4; row++) {\n\t\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\t\tstate[row][col] = SBOX[state[row][col]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Shift rows\n\t\t\tstate[1].push(state[1].shift());\n\t\t\tstate[2].push(state[2].shift());\n\t\t\tstate[2].push(state[2].shift());\n\t\t\tstate[3].unshift(state[3].pop());\n\n\t\t\t// Mix columns\n\t\t\tfor (var col = 0; col < 4; col++) {\n\n\t\t\t\tvar s0 = state[0][col],\n\t\t\t\t    s1 = state[1][col],\n\t\t\t\t    s2 = state[2][col],\n\t\t\t\t    s3 = state[3][col];\n\n\t\t\t\tstate[0][col] = MULT2[s0] ^ MULT3[s1] ^ s2 ^ s3;\n\t\t\t\tstate[1][col] = s0 ^ MULT2[s1] ^ MULT3[s2] ^ s3;\n\t\t\t\tstate[2][col] = s0 ^ s1 ^ MULT2[s2] ^ MULT3[s3];\n\t\t\t\tstate[3][col] = MULT3[s0] ^ s1 ^ s2 ^ MULT2[s3];\n\t\t\t}\n\n\t\t\t// Add round key\n\t\t\tfor (var row = 0; row < 4; row++) {\n\t\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\t\tstate[row][col] ^= keyschedule[round * 4 + col][row];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Sub bytes\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] = SBOX[state[row][col]];\n\t\t\t}\n\t\t}\n\n\t\t// Shift rows\n\t\tstate[1].push(state[1].shift());\n\t\tstate[2].push(state[2].shift());\n\t\tstate[2].push(state[2].shift());\n\t\tstate[3].unshift(state[3].pop());\n\n\t\t// Add round key\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] ^= keyschedule[nrounds * 4 + col][row];\n\t\t\t}\n\t\t}\n\n\t\t// Set output\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tm[offset + col * 4 + row] = state[row][col];\n\t\t\t}\n\t\t}\n\t},\n\n\t_decryptblock: function _decryptblock(c, offset) {\n\n\t\t// Set input\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] = c[offset + col * 4 + row];\n\t\t\t}\n\t\t}\n\n\t\t// Add round key\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] ^= keyschedule[nrounds * 4 + col][row];\n\t\t\t}\n\t\t}\n\n\t\tfor (var round = 1; round < nrounds; round++) {\n\n\t\t\t// Inv shift rows\n\t\t\tstate[1].unshift(state[1].pop());\n\t\t\tstate[2].push(state[2].shift());\n\t\t\tstate[2].push(state[2].shift());\n\t\t\tstate[3].push(state[3].shift());\n\n\t\t\t// Inv sub bytes\n\t\t\tfor (var row = 0; row < 4; row++) {\n\t\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\t\tstate[row][col] = INVSBOX[state[row][col]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add round key\n\t\t\tfor (var row = 0; row < 4; row++) {\n\t\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\t\tstate[row][col] ^= keyschedule[(nrounds - round) * 4 + col][row];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Inv mix columns\n\t\t\tfor (var col = 0; col < 4; col++) {\n\n\t\t\t\tvar s0 = state[0][col],\n\t\t\t\t    s1 = state[1][col],\n\t\t\t\t    s2 = state[2][col],\n\t\t\t\t    s3 = state[3][col];\n\n\t\t\t\tstate[0][col] = MULTE[s0] ^ MULTB[s1] ^ MULTD[s2] ^ MULT9[s3];\n\t\t\t\tstate[1][col] = MULT9[s0] ^ MULTE[s1] ^ MULTB[s2] ^ MULTD[s3];\n\t\t\t\tstate[2][col] = MULTD[s0] ^ MULT9[s1] ^ MULTE[s2] ^ MULTB[s3];\n\t\t\t\tstate[3][col] = MULTB[s0] ^ MULTD[s1] ^ MULT9[s2] ^ MULTE[s3];\n\t\t\t}\n\t\t}\n\n\t\t// Inv shift rows\n\t\tstate[1].unshift(state[1].pop());\n\t\tstate[2].push(state[2].shift());\n\t\tstate[2].push(state[2].shift());\n\t\tstate[3].push(state[3].shift());\n\n\t\t// Inv sub bytes\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] = INVSBOX[state[row][col]];\n\t\t\t}\n\t\t}\n\n\t\t// Add round key\n\t\tfor (var row = 0; row < 4; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tstate[row][col] ^= keyschedule[col][row];\n\t\t\t}\n\t\t}\n\n\t\t// Set output\n\t\tfor (var row = 0; row < AES._blocksize; row++) {\n\t\t\tfor (var col = 0; col < 4; col++) {\n\t\t\t\tc[offset + col * 4 + row] = state[row][col];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\r\n  * Private methods\r\n  */\n\n\t_init: function _init(k) {\n\t\tkeylength = k.length / 4;\n\t\tnrounds = keylength + 6;\n\t\tAES._keyexpansion(k);\n\t},\n\n\t// Generate a key schedule\n\t_keyexpansion: function _keyexpansion(k) {\n\n\t\tkeyschedule = [];\n\n\t\tfor (var row = 0; row < keylength; row++) {\n\t\t\tkeyschedule[row] = [k[row * 4], k[row * 4 + 1], k[row * 4 + 2], k[row * 4 + 3]];\n\t\t}\n\n\t\tfor (var row = keylength; row < AES._blocksize * (nrounds + 1); row++) {\n\n\t\t\tvar temp = [keyschedule[row - 1][0], keyschedule[row - 1][1], keyschedule[row - 1][2], keyschedule[row - 1][3]];\n\n\t\t\tif (row % keylength == 0) {\n\n\t\t\t\t// Rot word\n\t\t\t\ttemp.push(temp.shift());\n\n\t\t\t\t// Sub word\n\t\t\t\ttemp[0] = SBOX[temp[0]];\n\t\t\t\ttemp[1] = SBOX[temp[1]];\n\t\t\t\ttemp[2] = SBOX[temp[2]];\n\t\t\t\ttemp[3] = SBOX[temp[3]];\n\n\t\t\t\ttemp[0] ^= RCON[row / keylength];\n\t\t\t} else if (keylength > 6 && row % keylength == 4) {\n\n\t\t\t\t// Sub word\n\t\t\t\ttemp[0] = SBOX[temp[0]];\n\t\t\t\ttemp[1] = SBOX[temp[1]];\n\t\t\t\ttemp[2] = SBOX[temp[2]];\n\t\t\t\ttemp[3] = SBOX[temp[3]];\n\t\t\t}\n\n\t\t\tkeyschedule[row] = [keyschedule[row - keylength][0] ^ temp[0], keyschedule[row - keylength][1] ^ temp[1], keyschedule[row - keylength][2] ^ temp[2], keyschedule[row - keylength][3] ^ temp[3]];\n\t\t}\n\t}\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/aes.js\n ** module id = 32\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/aes.js?");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8;\n\n/***************************************************************************\r\n * \r\n * DES Key Schedule.\r\n * \r\n * The Key consists of 16 sub-keys of 48 bits each. As each sub-key is\r\n * applied to an expanded 32-bit value where each 4 bits of input is\r\n * expanded into 6 bits of output the sub-key can be broken down into 8\r\n * 32-bit values which allows the key to be used without expansion.\r\n * \r\n * To create the 16 sub-keys, 56 bits are selected from the input 64 bit key\r\n * according to <i>PC1</i>. Each sub-key is generated by left rotating the\r\n * bits a different amount and then selecting 48 bits according to <i>PC2</i>.\r\n * \r\n **************************************************************************/\n\nvar KeySchedule;\n\n/**\r\n * Representation of a DES key schedule.\r\n * \r\n * @param {Array\r\n *            of 8 bytes} key The cipher key\r\n * \r\n * @constructor\r\n */\nKeySchedule = function KeySchedule(key) {\n  /**\r\n   * The schedule of 16 keys\r\n   */\n  this.keys = new Array(16);\n  this._initialiseKeys(key);\n};\n\n/**\r\n * Permuted Choice 1 (PC1) byte offsets into the key. Each of the 56 entries\r\n * selects one bit of DES's 56 bit key.\r\n * <p>\r\n * \r\n * <pre>\r\n * The PC1 is defined as:\r\n * \r\n * 57,   49,    41,   33,    25,    17,    9,\r\n *  1,   58,    50,   42,    34,    26,   18,\r\n * 10,    2,    59,   51,    43,    35,   27,\r\n * 19,   11,     3,   60,    52,    44,   36,\r\n * 63,   55,    47,   39,    31,    23,   15,\r\n *  7,   62,    54,   46,    38,    30,   22,\r\n * 14,    6,    61,   53,    45,    37,   29,\r\n * 21,   13,     5,   28,    20,    12,    4\r\n * </pre>\r\n * \r\n * We represent this as an offset into an 8-byte array and a bit mask upon\r\n * that byte. For example 57=(7*8)+1 so is the first (MSB) of the 7th byte.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC1_offsets = [7, 6, 5, 4, 3, 2, 1, 0, 7, 6, 5, 4, 3, 2, 1, 0, 7, 6, 5, 4, 3, 2, 1, 0, 7, 6, 5, 4, 7, 6, 5, 4, 3, 2, 1, 0, 7, 6, 5, 4, 3, 2, 1, 0, 7, 6, 5, 4, 3, 2, 1, 0, 3, 2, 1, 0];\n\n/**\r\n * Permuted Choice 1 (PC1) bit masks. Each of the 56 entries selects one bit\r\n * of DES's 56 bit key.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC1_masks = [128, 128, 128, 128, 128, 128, 128, 128, 64, 64, 64, 64, 64, 64, 64, 64, 32, 32, 32, 32, 32, 32, 32, 32, 16, 16, 16, 16, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 16, 16, 16, 16];\n\n/**\r\n * Permuted Choice 2 (PC2) selects the active 48 bits from the 56 bits of\r\n * the key.\r\n * <p>\r\n * \r\n * <pre>\r\n * The PC2 is defined as:\r\n * \r\n * 14,   17,   11,   24,    1,    5,\r\n *  3,   28,   15,    6,   21,   10,\r\n * 23,   19,   12,    4,   26,    8,\r\n * 16,    7,   27,   20,   13,    2,\r\n * 41,   52,   31,   37,   47,   55,\r\n * 30,   40,   51,   45,   33,   48,\r\n * 44,   49,   39,   56,   34,   53,\r\n * 46,   42,   50,   36,   29,   32\r\n * </pre>\r\n * \r\n * We invert the choice to specify what each bit adds to each 6-bit value of\r\n * the key. For example, bit 1 is the 5th bit selected so this add 2 to the\r\n * first 6-bit value.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC2_offsets1 = [0, 3, 1, 2, 0, 1, 3, 2, 0, 1, 0, 2, 3, 0, 1, 3, 0, 0, 2, 3, 1, 0, 2, 0, 0, 2, 3, 1];\n\n/**\r\n * PC2 offsets for 2nd block.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC2_offsets2 = [7, 5, 4, 7, 5, 6, 0, 7, 4, 0, 6, 5, 4, 7, 0, 6, 5, 7, 4, 5, 6, 7, 5, 4, 6, 0, 4, 6];\n\n/**\r\n * Permuted Choice 2 (PC2) masks for 1st block.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC2_masks1 = [2, 1, 32, 4, 1, 4, 16, 1, 0, 1, 8, 8, 2, 32, 8, 32, 16, 0, 16, 4, 2, 0, 32, 4, 0, 2, 8, 16];\n\n/**\r\n * PC2 masks for 2nd block.\r\n * \r\n * @constant\r\n */\nKeySchedule.PC2_masks2 = [2, 32, 8, 1, 2, 2, 0, 4, 4, 0, 8, 16, 32, 16, 0, 32, 4, 32, 2, 1, 16, 8, 8, 16, 1, 0, 1, 4];\n\n/**\r\n * Cumulative key shifts.\r\n * \r\n * @constant\r\n */\nKeySchedule.keyShifts = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\nKeySchedule.prototype._initialiseKeys = function (key) {\n  var i;\n\n  // extract 56 key bits in order determined by PC1\n  var bits = new Array(56);\n  for (i = 0; i < 56; i++) {\n    bits[i] = (key[KeySchedule.PC1_offsets[i]] & KeySchedule.PC1_masks[i]) != 0;\n  }\n\n  // split 56 bits into two 28-bit chunks\n  var bits1 = bits.slice(0, 28);\n  var bits2 = bits.slice(28, 56);\n\n  // duplicate each half to allow for easy bit shifts\n  bits1 = bits1.concat(bits1);\n  bits2 = bits2.concat(bits2);\n\n  // assemble the 16 keys\n  for (i = 0; i < 16; i++) {\n    var k = [0, 0, 0, 0, 0, 0, 0, 0];\n\n    // select the bits of the key according to PC2\n    var s = KeySchedule.keyShifts[i];\n    for (var j = 0; j < 28; j++) {\n      if (bits1[j + s]) {\n        k[KeySchedule.PC2_offsets1[j]] += KeySchedule.PC2_masks1[j];\n      }\n      if (bits2[j + s]) {\n        k[KeySchedule.PC2_offsets2[j]] += KeySchedule.PC2_masks2[j];\n      }\n    }\n\n    // Scale each of the 8 blocks to a 32-bit mask.\n    k[0] = ((k[0] & 0x1f) << 27) + ((k[0] & 0x20) >> 5);\n    for (var j = 1; j <= 6; j++) {\n      k[j] = k[j] << 27 - 4 * j;\n    }\n    k[7] = ((k[7] & 0x3e) >> 1) + ((k[7] & 0x1) << 31);\n    this.keys[i] = k;\n  }\n};\n\n/**\r\n * Retrieve the key for a specified round\r\n * \r\n * @param i\r\n *            the round\r\n * @returns the key\r\n */\nKeySchedule.prototype.getKey = function (i) {\n  return this.keys[i];\n};\n\n/***************************************************************************\r\n * \r\n * DES Engine State\r\n * \r\n **************************************************************************/\n\nvar State;\n\n/**\r\n * The algorithm's state. DES operates on two sets of 32-bits, with each\r\n * block of 32-bits treated as a single number.\r\n * \r\n * @class\r\n */\nState = function State() {\n  /** The LHS of the Feistel scheme */\n  this.lhs = 0;\n  /** The RHS of the Feistel scheme */\n  this.rhs = 0;\n};\n\n/**\r\n * The masks that select the SBOX input. Each SBOX accepts 6 bits from the\r\n * input.\r\n * \r\n * @constant\r\n */\nState.SBOX_MASK = [0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];\n\n/**\r\n * The SBOXes. The 8 SBOXes each map 6 bit masked bit of the input to 4 bits\r\n * of output. These SBOXes include the post SBOX permutation and benefit\r\n * from JavaScript's sparse arrays to make specifying the input match\r\n * simple.\r\n * \r\n * @constant\r\n */\nState.SBOX = new Array(8);\n\nvar SBOX = State.SBOX;\n\nSBOX[0] = new Array();\nSBOX[0][0] = 0x808200; // 0 (0, 0) = 14\nSBOX[0][268435456] = 0x8000; // 10000000 (0, 1) = 4\nSBOX[0][536870912] = 0x808002; // 20000000 (0, 2) = 13\nSBOX[0][805306368] = 0x2; // 30000000 (0, 3) = 1\nSBOX[0][1073741824] = 0x200; // 40000000 (0, 4) = 2\nSBOX[0][1342177280] = 0x808202; // 50000000 (0, 5) = 15\nSBOX[0][1610612736] = 0x800202; // 60000000 (0, 6) = 11\nSBOX[0][1879048192] = 0x800000; // 70000000 (0, 7) = 8\nSBOX[0][-2147483648] = 0x202; // 80000000 (0, 8) = 3\nSBOX[0][-1879048192] = 0x800200; // 90000000 (0, 9) = 10\nSBOX[0][-1610612736] = 0x8200; // a0000000 (0, 10) = 6\nSBOX[0][-1342177280] = 0x808000; // b0000000 (0, 11) = 12\nSBOX[0][-1073741824] = 0x8002; // c0000000 (0, 12) = 5\nSBOX[0][-805306368] = 0x800002; // d0000000 (0, 13) = 9\nSBOX[0][-536870912] = 0x0; // e0000000 (0, 14) = 0\nSBOX[0][-268435456] = 0x8202; // f0000000 (0, 15) = 7\nSBOX[0][134217728] = 0x0; // 8000000 (1, 0) = 0\nSBOX[0][402653184] = 0x808202; // 18000000 (1, 1) = 15\nSBOX[0][671088640] = 0x8202; // 28000000 (1, 2) = 7\nSBOX[0][939524096] = 0x8000; // 38000000 (1, 3) = 4\nSBOX[0][1207959552] = 0x808200; // 48000000 (1, 4) = 14\nSBOX[0][1476395008] = 0x200; // 58000000 (1, 5) = 2\nSBOX[0][1744830464] = 0x808002; // 68000000 (1, 6) = 13\nSBOX[0][2013265920] = 0x2; // 78000000 (1, 7) = 1\nSBOX[0][-2013265920] = 0x800200; // 88000000 (1, 8) = 10\nSBOX[0][-1744830464] = 0x8200; // 98000000 (1, 9) = 6\nSBOX[0][-1476395008] = 0x808000; // a8000000 (1, 10) = 12\nSBOX[0][-1207959552] = 0x800202; // b8000000 (1, 11) = 11\nSBOX[0][-939524096] = 0x800002; // c8000000 (1, 12) = 9\nSBOX[0][-671088640] = 0x8002; // d8000000 (1, 13) = 5\nSBOX[0][-402653184] = 0x202; // e8000000 (1, 14) = 3\nSBOX[0][-134217728] = 0x800000; // f8000000 (1, 15) = 8\nSBOX[0][1] = 0x8000; // 1 (2, 0) = 4\nSBOX[0][268435457] = 0x2; // 10000001 (2, 1) = 1\nSBOX[0][536870913] = 0x808200; // 20000001 (2, 2) = 14\nSBOX[0][805306369] = 0x800000; // 30000001 (2, 3) = 8\nSBOX[0][1073741825] = 0x808002; // 40000001 (2, 4) = 13\nSBOX[0][1342177281] = 0x8200; // 50000001 (2, 5) = 6\nSBOX[0][1610612737] = 0x200; // 60000001 (2, 6) = 2\nSBOX[0][1879048193] = 0x800202; // 70000001 (2, 7) = 11\nSBOX[0][-2147483647] = 0x808202; // 80000001 (2, 8) = 15\nSBOX[0][-1879048191] = 0x808000; // 90000001 (2, 9) = 12\nSBOX[0][-1610612735] = 0x800002; // a0000001 (2, 10) = 9\nSBOX[0][-1342177279] = 0x8202; // b0000001 (2, 11) = 7\nSBOX[0][-1073741823] = 0x202; // c0000001 (2, 12) = 3\nSBOX[0][-805306367] = 0x800200; // d0000001 (2, 13) = 10\nSBOX[0][-536870911] = 0x8002; // e0000001 (2, 14) = 5\nSBOX[0][-268435455] = 0x0; // f0000001 (2, 15) = 0\nSBOX[0][134217729] = 0x808202; // 8000001 (3, 0) = 15\nSBOX[0][402653185] = 0x808000; // 18000001 (3, 1) = 12\nSBOX[0][671088641] = 0x800000; // 28000001 (3, 2) = 8\nSBOX[0][939524097] = 0x200; // 38000001 (3, 3) = 2\nSBOX[0][1207959553] = 0x8000; // 48000001 (3, 4) = 4\nSBOX[0][1476395009] = 0x800002; // 58000001 (3, 5) = 9\nSBOX[0][1744830465] = 0x2; // 68000001 (3, 6) = 1\nSBOX[0][2013265921] = 0x8202; // 78000001 (3, 7) = 7\nSBOX[0][-2013265919] = 0x8002; // 88000001 (3, 8) = 5\nSBOX[0][-1744830463] = 0x800202; // 98000001 (3, 9) = 11\nSBOX[0][-1476395007] = 0x202; // a8000001 (3, 10) = 3\nSBOX[0][-1207959551] = 0x808200; // b8000001 (3, 11) = 14\nSBOX[0][-939524095] = 0x800200; // c8000001 (3, 12) = 10\nSBOX[0][-671088639] = 0x0; // d8000001 (3, 13) = 0\nSBOX[0][-402653183] = 0x8200; // e8000001 (3, 14) = 6\nSBOX[0][-134217727] = 0x808002; // f8000001 (3, 15) = 13\n\nSBOX[1] = new Array();\nSBOX[1][0] = 0x40084010; // 0 (0, 0) = 15\nSBOX[1][16777216] = 0x4000; // 1000000 (0, 1) = 1\nSBOX[1][33554432] = 0x80000; // 2000000 (0, 2) = 8\nSBOX[1][50331648] = 0x40080010; // 3000000 (0, 3) = 14\nSBOX[1][67108864] = 0x40000010; // 4000000 (0, 4) = 6\nSBOX[1][83886080] = 0x40084000; // 5000000 (0, 5) = 11\nSBOX[1][100663296] = 0x40004000; // 6000000 (0, 6) = 3\nSBOX[1][117440512] = 0x10; // 7000000 (0, 7) = 4\nSBOX[1][134217728] = 0x84000; // 8000000 (0, 8) = 9\nSBOX[1][150994944] = 0x40004010; // 9000000 (0, 9) = 7\nSBOX[1][167772160] = 0x40000000; // a000000 (0, 10) = 2\nSBOX[1][184549376] = 0x84010; // b000000 (0, 11) = 13\nSBOX[1][201326592] = 0x80010; // c000000 (0, 12) = 12\nSBOX[1][218103808] = 0x0; // d000000 (0, 13) = 0\nSBOX[1][234881024] = 0x4010; // e000000 (0, 14) = 5\nSBOX[1][251658240] = 0x40080000; // f000000 (0, 15) = 10\nSBOX[1][8388608] = 0x40004000; // 800000 (1, 0) = 3\nSBOX[1][25165824] = 0x84010; // 1800000 (1, 1) = 13\nSBOX[1][41943040] = 0x10; // 2800000 (1, 2) = 4\nSBOX[1][58720256] = 0x40004010; // 3800000 (1, 3) = 7\nSBOX[1][75497472] = 0x40084010; // 4800000 (1, 4) = 15\nSBOX[1][92274688] = 0x40000000; // 5800000 (1, 5) = 2\nSBOX[1][109051904] = 0x80000; // 6800000 (1, 6) = 8\nSBOX[1][125829120] = 0x40080010; // 7800000 (1, 7) = 14\nSBOX[1][142606336] = 0x80010; // 8800000 (1, 8) = 12\nSBOX[1][159383552] = 0x0; // 9800000 (1, 9) = 0\nSBOX[1][176160768] = 0x4000; // a800000 (1, 10) = 1\nSBOX[1][192937984] = 0x40080000; // b800000 (1, 11) = 10\nSBOX[1][209715200] = 0x40000010; // c800000 (1, 12) = 6\nSBOX[1][226492416] = 0x84000; // d800000 (1, 13) = 9\nSBOX[1][243269632] = 0x40084000; // e800000 (1, 14) = 11\nSBOX[1][260046848] = 0x4010; // f800000 (1, 15) = 5\nSBOX[1][268435456] = 0x0; // 10000000 (2, 0) = 0\nSBOX[1][285212672] = 0x40080010; // 11000000 (2, 1) = 14\nSBOX[1][301989888] = 0x40004010; // 12000000 (2, 2) = 7\nSBOX[1][318767104] = 0x40084000; // 13000000 (2, 3) = 11\nSBOX[1][335544320] = 0x40080000; // 14000000 (2, 4) = 10\nSBOX[1][352321536] = 0x10; // 15000000 (2, 5) = 4\nSBOX[1][369098752] = 0x84010; // 16000000 (2, 6) = 13\nSBOX[1][385875968] = 0x4000; // 17000000 (2, 7) = 1\nSBOX[1][402653184] = 0x4010; // 18000000 (2, 8) = 5\nSBOX[1][419430400] = 0x80000; // 19000000 (2, 9) = 8\nSBOX[1][436207616] = 0x80010; // 1a000000 (2, 10) = 12\nSBOX[1][452984832] = 0x40000010; // 1b000000 (2, 11) = 6\nSBOX[1][469762048] = 0x84000; // 1c000000 (2, 12) = 9\nSBOX[1][486539264] = 0x40004000; // 1d000000 (2, 13) = 3\nSBOX[1][503316480] = 0x40000000; // 1e000000 (2, 14) = 2\nSBOX[1][520093696] = 0x40084010; // 1f000000 (2, 15) = 15\nSBOX[1][276824064] = 0x84010; // 10800000 (3, 0) = 13\nSBOX[1][293601280] = 0x80000; // 11800000 (3, 1) = 8\nSBOX[1][310378496] = 0x40080000; // 12800000 (3, 2) = 10\nSBOX[1][327155712] = 0x4000; // 13800000 (3, 3) = 1\nSBOX[1][343932928] = 0x40004000; // 14800000 (3, 4) = 3\nSBOX[1][360710144] = 0x40084010; // 15800000 (3, 5) = 15\nSBOX[1][377487360] = 0x10; // 16800000 (3, 6) = 4\nSBOX[1][394264576] = 0x40000000; // 17800000 (3, 7) = 2\nSBOX[1][411041792] = 0x40084000; // 18800000 (3, 8) = 11\nSBOX[1][427819008] = 0x40000010; // 19800000 (3, 9) = 6\nSBOX[1][444596224] = 0x40004010; // 1a800000 (3, 10) = 7\nSBOX[1][461373440] = 0x80010; // 1b800000 (3, 11) = 12\nSBOX[1][478150656] = 0x0; // 1c800000 (3, 12) = 0\nSBOX[1][494927872] = 0x4010; // 1d800000 (3, 13) = 5\nSBOX[1][511705088] = 0x40080010; // 1e800000 (3, 14) = 14\nSBOX[1][528482304] = 0x84000; // 1f800000 (3, 15) = 9\n\nSBOX[2] = new Array();\nSBOX[2][0] = 0x104; // 0 (0, 0) = 10\nSBOX[2][1048576] = 0x0; // 100000 (0, 1) = 0\nSBOX[2][2097152] = 0x4000100; // 200000 (0, 2) = 9\nSBOX[2][3145728] = 0x10104; // 300000 (0, 3) = 14\nSBOX[2][4194304] = 0x10004; // 400000 (0, 4) = 6\nSBOX[2][5242880] = 0x4000004; // 500000 (0, 5) = 3\nSBOX[2][6291456] = 0x4010104; // 600000 (0, 6) = 15\nSBOX[2][7340032] = 0x4010000; // 700000 (0, 7) = 5\nSBOX[2][8388608] = 0x4000000; // 800000 (0, 8) = 1\nSBOX[2][9437184] = 0x4010100; // 900000 (0, 9) = 13\nSBOX[2][10485760] = 0x10100; // a00000 (0, 10) = 12\nSBOX[2][11534336] = 0x4010004; // b00000 (0, 11) = 7\nSBOX[2][12582912] = 0x4000104; // c00000 (0, 12) = 11\nSBOX[2][13631488] = 0x10000; // d00000 (0, 13) = 4\nSBOX[2][14680064] = 0x4; // e00000 (0, 14) = 2\nSBOX[2][15728640] = 0x100; // f00000 (0, 15) = 8\nSBOX[2][524288] = 0x4010100; // 80000 (1, 0) = 13\nSBOX[2][1572864] = 0x4010004; // 180000 (1, 1) = 7\nSBOX[2][2621440] = 0x0; // 280000 (1, 2) = 0\nSBOX[2][3670016] = 0x4000100; // 380000 (1, 3) = 9\nSBOX[2][4718592] = 0x4000004; // 480000 (1, 4) = 3\nSBOX[2][5767168] = 0x10000; // 580000 (1, 5) = 4\nSBOX[2][6815744] = 0x10004; // 680000 (1, 6) = 6\nSBOX[2][7864320] = 0x104; // 780000 (1, 7) = 10\nSBOX[2][8912896] = 0x4; // 880000 (1, 8) = 2\nSBOX[2][9961472] = 0x100; // 980000 (1, 9) = 8\nSBOX[2][11010048] = 0x4010000; // a80000 (1, 10) = 5\nSBOX[2][12058624] = 0x10104; // b80000 (1, 11) = 14\nSBOX[2][13107200] = 0x10100; // c80000 (1, 12) = 12\nSBOX[2][14155776] = 0x4000104; // d80000 (1, 13) = 11\nSBOX[2][15204352] = 0x4010104; // e80000 (1, 14) = 15\nSBOX[2][16252928] = 0x4000000; // f80000 (1, 15) = 1\nSBOX[2][16777216] = 0x4010100; // 1000000 (2, 0) = 13\nSBOX[2][17825792] = 0x10004; // 1100000 (2, 1) = 6\nSBOX[2][18874368] = 0x10000; // 1200000 (2, 2) = 4\nSBOX[2][19922944] = 0x4000100; // 1300000 (2, 3) = 9\nSBOX[2][20971520] = 0x100; // 1400000 (2, 4) = 8\nSBOX[2][22020096] = 0x4010104; // 1500000 (2, 5) = 15\nSBOX[2][23068672] = 0x4000004; // 1600000 (2, 6) = 3\nSBOX[2][24117248] = 0x0; // 1700000 (2, 7) = 0\nSBOX[2][25165824] = 0x4000104; // 1800000 (2, 8) = 11\nSBOX[2][26214400] = 0x4000000; // 1900000 (2, 9) = 1\nSBOX[2][27262976] = 0x4; // 1a00000 (2, 10) = 2\nSBOX[2][28311552] = 0x10100; // 1b00000 (2, 11) = 12\nSBOX[2][29360128] = 0x4010000; // 1c00000 (2, 12) = 5\nSBOX[2][30408704] = 0x104; // 1d00000 (2, 13) = 10\nSBOX[2][31457280] = 0x10104; // 1e00000 (2, 14) = 14\nSBOX[2][32505856] = 0x4010004; // 1f00000 (2, 15) = 7\nSBOX[2][17301504] = 0x4000000; // 1080000 (3, 0) = 1\nSBOX[2][18350080] = 0x104; // 1180000 (3, 1) = 10\nSBOX[2][19398656] = 0x4010100; // 1280000 (3, 2) = 13\nSBOX[2][20447232] = 0x0; // 1380000 (3, 3) = 0\nSBOX[2][21495808] = 0x10004; // 1480000 (3, 4) = 6\nSBOX[2][22544384] = 0x4000100; // 1580000 (3, 5) = 9\nSBOX[2][23592960] = 0x100; // 1680000 (3, 6) = 8\nSBOX[2][24641536] = 0x4010004; // 1780000 (3, 7) = 7\nSBOX[2][25690112] = 0x10000; // 1880000 (3, 8) = 4\nSBOX[2][26738688] = 0x4010104; // 1980000 (3, 9) = 15\nSBOX[2][27787264] = 0x10104; // 1a80000 (3, 10) = 14\nSBOX[2][28835840] = 0x4000004; // 1b80000 (3, 11) = 3\nSBOX[2][29884416] = 0x4000104; // 1c80000 (3, 12) = 11\nSBOX[2][30932992] = 0x4010000; // 1d80000 (3, 13) = 5\nSBOX[2][31981568] = 0x4; // 1e80000 (3, 14) = 2\nSBOX[2][33030144] = 0x10100; // 1f80000 (3, 15) = 12\n\nSBOX[3] = new Array();\nSBOX[3][0] = 0x80401000; // 0 (0, 0) = 7\nSBOX[3][65536] = 0x80001040; // 10000 (0, 1) = 13\nSBOX[3][131072] = 0x401040; // 20000 (0, 2) = 14\nSBOX[3][196608] = 0x80400000; // 30000 (0, 3) = 3\nSBOX[3][262144] = 0x0; // 40000 (0, 4) = 0\nSBOX[3][327680] = 0x401000; // 50000 (0, 5) = 6\nSBOX[3][393216] = 0x80000040; // 60000 (0, 6) = 9\nSBOX[3][458752] = 0x400040; // 70000 (0, 7) = 10\nSBOX[3][524288] = 0x80000000; // 80000 (0, 8) = 1\nSBOX[3][589824] = 0x400000; // 90000 (0, 9) = 2\nSBOX[3][655360] = 0x40; // a0000 (0, 10) = 8\nSBOX[3][720896] = 0x80001000; // b0000 (0, 11) = 5\nSBOX[3][786432] = 0x80400040; // c0000 (0, 12) = 11\nSBOX[3][851968] = 0x1040; // d0000 (0, 13) = 12\nSBOX[3][917504] = 0x1000; // e0000 (0, 14) = 4\nSBOX[3][983040] = 0x80401040; // f0000 (0, 15) = 15\nSBOX[3][32768] = 0x80001040; // 8000 (1, 0) = 13\nSBOX[3][98304] = 0x40; // 18000 (1, 1) = 8\nSBOX[3][163840] = 0x80400040; // 28000 (1, 2) = 11\nSBOX[3][229376] = 0x80001000; // 38000 (1, 3) = 5\nSBOX[3][294912] = 0x401000; // 48000 (1, 4) = 6\nSBOX[3][360448] = 0x80401040; // 58000 (1, 5) = 15\nSBOX[3][425984] = 0x0; // 68000 (1, 6) = 0\nSBOX[3][491520] = 0x80400000; // 78000 (1, 7) = 3\nSBOX[3][557056] = 0x1000; // 88000 (1, 8) = 4\nSBOX[3][622592] = 0x80401000; // 98000 (1, 9) = 7\nSBOX[3][688128] = 0x400000; // a8000 (1, 10) = 2\nSBOX[3][753664] = 0x1040; // b8000 (1, 11) = 12\nSBOX[3][819200] = 0x80000000; // c8000 (1, 12) = 1\nSBOX[3][884736] = 0x400040; // d8000 (1, 13) = 10\nSBOX[3][950272] = 0x401040; // e8000 (1, 14) = 14\nSBOX[3][1015808] = 0x80000040; // f8000 (1, 15) = 9\nSBOX[3][1048576] = 0x400040; // 100000 (2, 0) = 10\nSBOX[3][1114112] = 0x401000; // 110000 (2, 1) = 6\nSBOX[3][1179648] = 0x80000040; // 120000 (2, 2) = 9\nSBOX[3][1245184] = 0x0; // 130000 (2, 3) = 0\nSBOX[3][1310720] = 0x1040; // 140000 (2, 4) = 12\nSBOX[3][1376256] = 0x80400040; // 150000 (2, 5) = 11\nSBOX[3][1441792] = 0x80401000; // 160000 (2, 6) = 7\nSBOX[3][1507328] = 0x80001040; // 170000 (2, 7) = 13\nSBOX[3][1572864] = 0x80401040; // 180000 (2, 8) = 15\nSBOX[3][1638400] = 0x80000000; // 190000 (2, 9) = 1\nSBOX[3][1703936] = 0x80400000; // 1a0000 (2, 10) = 3\nSBOX[3][1769472] = 0x401040; // 1b0000 (2, 11) = 14\nSBOX[3][1835008] = 0x80001000; // 1c0000 (2, 12) = 5\nSBOX[3][1900544] = 0x400000; // 1d0000 (2, 13) = 2\nSBOX[3][1966080] = 0x40; // 1e0000 (2, 14) = 8\nSBOX[3][2031616] = 0x1000; // 1f0000 (2, 15) = 4\nSBOX[3][1081344] = 0x80400000; // 108000 (3, 0) = 3\nSBOX[3][1146880] = 0x80401040; // 118000 (3, 1) = 15\nSBOX[3][1212416] = 0x0; // 128000 (3, 2) = 0\nSBOX[3][1277952] = 0x401000; // 138000 (3, 3) = 6\nSBOX[3][1343488] = 0x400040; // 148000 (3, 4) = 10\nSBOX[3][1409024] = 0x80000000; // 158000 (3, 5) = 1\nSBOX[3][1474560] = 0x80001040; // 168000 (3, 6) = 13\nSBOX[3][1540096] = 0x40; // 178000 (3, 7) = 8\nSBOX[3][1605632] = 0x80000040; // 188000 (3, 8) = 9\nSBOX[3][1671168] = 0x1000; // 198000 (3, 9) = 4\nSBOX[3][1736704] = 0x80001000; // 1a8000 (3, 10) = 5\nSBOX[3][1802240] = 0x80400040; // 1b8000 (3, 11) = 11\nSBOX[3][1867776] = 0x1040; // 1c8000 (3, 12) = 12\nSBOX[3][1933312] = 0x80401000; // 1d8000 (3, 13) = 7\nSBOX[3][1998848] = 0x400000; // 1e8000 (3, 14) = 2\nSBOX[3][2064384] = 0x401040; // 1f8000 (3, 15) = 14\n\nSBOX[4] = new Array();\nSBOX[4][0] = 0x80; // 0 (0, 0) = 2\nSBOX[4][4096] = 0x1040000; // 1000 (0, 1) = 12\nSBOX[4][8192] = 0x40000; // 2000 (0, 2) = 4\nSBOX[4][12288] = 0x20000000; // 3000 (0, 3) = 1\nSBOX[4][16384] = 0x20040080; // 4000 (0, 4) = 7\nSBOX[4][20480] = 0x1000080; // 5000 (0, 5) = 10\nSBOX[4][24576] = 0x21000080; // 6000 (0, 6) = 11\nSBOX[4][28672] = 0x40080; // 7000 (0, 7) = 6\nSBOX[4][32768] = 0x1000000; // 8000 (0, 8) = 8\nSBOX[4][36864] = 0x20040000; // 9000 (0, 9) = 5\nSBOX[4][40960] = 0x20000080; // a000 (0, 10) = 3\nSBOX[4][45056] = 0x21040080; // b000 (0, 11) = 15\nSBOX[4][49152] = 0x21040000; // c000 (0, 12) = 13\nSBOX[4][53248] = 0x0; // d000 (0, 13) = 0\nSBOX[4][57344] = 0x1040080; // e000 (0, 14) = 14\nSBOX[4][61440] = 0x21000000; // f000 (0, 15) = 9\nSBOX[4][2048] = 0x1040080; // 800 (1, 0) = 14\nSBOX[4][6144] = 0x21000080; // 1800 (1, 1) = 11\nSBOX[4][10240] = 0x80; // 2800 (1, 2) = 2\nSBOX[4][14336] = 0x1040000; // 3800 (1, 3) = 12\nSBOX[4][18432] = 0x40000; // 4800 (1, 4) = 4\nSBOX[4][22528] = 0x20040080; // 5800 (1, 5) = 7\nSBOX[4][26624] = 0x21040000; // 6800 (1, 6) = 13\nSBOX[4][30720] = 0x20000000; // 7800 (1, 7) = 1\nSBOX[4][34816] = 0x20040000; // 8800 (1, 8) = 5\nSBOX[4][38912] = 0x0; // 9800 (1, 9) = 0\nSBOX[4][43008] = 0x21040080; // a800 (1, 10) = 15\nSBOX[4][47104] = 0x1000080; // b800 (1, 11) = 10\nSBOX[4][51200] = 0x20000080; // c800 (1, 12) = 3\nSBOX[4][55296] = 0x21000000; // d800 (1, 13) = 9\nSBOX[4][59392] = 0x1000000; // e800 (1, 14) = 8\nSBOX[4][63488] = 0x40080; // f800 (1, 15) = 6\nSBOX[4][65536] = 0x40000; // 10000 (2, 0) = 4\nSBOX[4][69632] = 0x80; // 11000 (2, 1) = 2\nSBOX[4][73728] = 0x20000000; // 12000 (2, 2) = 1\nSBOX[4][77824] = 0x21000080; // 13000 (2, 3) = 11\nSBOX[4][81920] = 0x1000080; // 14000 (2, 4) = 10\nSBOX[4][86016] = 0x21040000; // 15000 (2, 5) = 13\nSBOX[4][90112] = 0x20040080; // 16000 (2, 6) = 7\nSBOX[4][94208] = 0x1000000; // 17000 (2, 7) = 8\nSBOX[4][98304] = 0x21040080; // 18000 (2, 8) = 15\nSBOX[4][102400] = 0x21000000; // 19000 (2, 9) = 9\nSBOX[4][106496] = 0x1040000; // 1a000 (2, 10) = 12\nSBOX[4][110592] = 0x20040000; // 1b000 (2, 11) = 5\nSBOX[4][114688] = 0x40080; // 1c000 (2, 12) = 6\nSBOX[4][118784] = 0x20000080; // 1d000 (2, 13) = 3\nSBOX[4][122880] = 0x0; // 1e000 (2, 14) = 0\nSBOX[4][126976] = 0x1040080; // 1f000 (2, 15) = 14\nSBOX[4][67584] = 0x21000080; // 10800 (3, 0) = 11\nSBOX[4][71680] = 0x1000000; // 11800 (3, 1) = 8\nSBOX[4][75776] = 0x1040000; // 12800 (3, 2) = 12\nSBOX[4][79872] = 0x20040080; // 13800 (3, 3) = 7\nSBOX[4][83968] = 0x20000000; // 14800 (3, 4) = 1\nSBOX[4][88064] = 0x1040080; // 15800 (3, 5) = 14\nSBOX[4][92160] = 0x80; // 16800 (3, 6) = 2\nSBOX[4][96256] = 0x21040000; // 17800 (3, 7) = 13\nSBOX[4][100352] = 0x40080; // 18800 (3, 8) = 6\nSBOX[4][104448] = 0x21040080; // 19800 (3, 9) = 15\nSBOX[4][108544] = 0x0; // 1a800 (3, 10) = 0\nSBOX[4][112640] = 0x21000000; // 1b800 (3, 11) = 9\nSBOX[4][116736] = 0x1000080; // 1c800 (3, 12) = 10\nSBOX[4][120832] = 0x40000; // 1d800 (3, 13) = 4\nSBOX[4][124928] = 0x20040000; // 1e800 (3, 14) = 5\nSBOX[4][129024] = 0x20000080; // 1f800 (3, 15) = 3\n\nSBOX[5] = new Array();\nSBOX[5][0] = 0x10000008; // 0 (0, 0) = 12\nSBOX[5][256] = 0x2000; // 100 (0, 1) = 1\nSBOX[5][512] = 0x10200000; // 200 (0, 2) = 10\nSBOX[5][768] = 0x10202008; // 300 (0, 3) = 15\nSBOX[5][1024] = 0x10002000; // 400 (0, 4) = 9\nSBOX[5][1280] = 0x200000; // 500 (0, 5) = 2\nSBOX[5][1536] = 0x200008; // 600 (0, 6) = 6\nSBOX[5][1792] = 0x10000000; // 700 (0, 7) = 8\nSBOX[5][2048] = 0x0; // 800 (0, 8) = 0\nSBOX[5][2304] = 0x10002008; // 900 (0, 9) = 13\nSBOX[5][2560] = 0x202000; // a00 (0, 10) = 3\nSBOX[5][2816] = 0x8; // b00 (0, 11) = 4\nSBOX[5][3072] = 0x10200008; // c00 (0, 12) = 14\nSBOX[5][3328] = 0x202008; // d00 (0, 13) = 7\nSBOX[5][3584] = 0x2008; // e00 (0, 14) = 5\nSBOX[5][3840] = 0x10202000; // f00 (0, 15) = 11\nSBOX[5][128] = 0x10200000; // 80 (1, 0) = 10\nSBOX[5][384] = 0x10202008; // 180 (1, 1) = 15\nSBOX[5][640] = 0x8; // 280 (1, 2) = 4\nSBOX[5][896] = 0x200000; // 380 (1, 3) = 2\nSBOX[5][1152] = 0x202008; // 480 (1, 4) = 7\nSBOX[5][1408] = 0x10000008; // 580 (1, 5) = 12\nSBOX[5][1664] = 0x10002000; // 680 (1, 6) = 9\nSBOX[5][1920] = 0x2008; // 780 (1, 7) = 5\nSBOX[5][2176] = 0x200008; // 880 (1, 8) = 6\nSBOX[5][2432] = 0x2000; // 980 (1, 9) = 1\nSBOX[5][2688] = 0x10002008; // a80 (1, 10) = 13\nSBOX[5][2944] = 0x10200008; // b80 (1, 11) = 14\nSBOX[5][3200] = 0x0; // c80 (1, 12) = 0\nSBOX[5][3456] = 0x10202000; // d80 (1, 13) = 11\nSBOX[5][3712] = 0x202000; // e80 (1, 14) = 3\nSBOX[5][3968] = 0x10000000; // f80 (1, 15) = 8\nSBOX[5][4096] = 0x10002000; // 1000 (2, 0) = 9\nSBOX[5][4352] = 0x10200008; // 1100 (2, 1) = 14\nSBOX[5][4608] = 0x10202008; // 1200 (2, 2) = 15\nSBOX[5][4864] = 0x2008; // 1300 (2, 3) = 5\nSBOX[5][5120] = 0x200000; // 1400 (2, 4) = 2\nSBOX[5][5376] = 0x10000000; // 1500 (2, 5) = 8\nSBOX[5][5632] = 0x10000008; // 1600 (2, 6) = 12\nSBOX[5][5888] = 0x202000; // 1700 (2, 7) = 3\nSBOX[5][6144] = 0x202008; // 1800 (2, 8) = 7\nSBOX[5][6400] = 0x0; // 1900 (2, 9) = 0\nSBOX[5][6656] = 0x8; // 1a00 (2, 10) = 4\nSBOX[5][6912] = 0x10200000; // 1b00 (2, 11) = 10\nSBOX[5][7168] = 0x2000; // 1c00 (2, 12) = 1\nSBOX[5][7424] = 0x10002008; // 1d00 (2, 13) = 13\nSBOX[5][7680] = 0x10202000; // 1e00 (2, 14) = 11\nSBOX[5][7936] = 0x200008; // 1f00 (2, 15) = 6\nSBOX[5][4224] = 0x8; // 1080 (3, 0) = 4\nSBOX[5][4480] = 0x202000; // 1180 (3, 1) = 3\nSBOX[5][4736] = 0x200000; // 1280 (3, 2) = 2\nSBOX[5][4992] = 0x10000008; // 1380 (3, 3) = 12\nSBOX[5][5248] = 0x10002000; // 1480 (3, 4) = 9\nSBOX[5][5504] = 0x2008; // 1580 (3, 5) = 5\nSBOX[5][5760] = 0x10202008; // 1680 (3, 6) = 15\nSBOX[5][6016] = 0x10200000; // 1780 (3, 7) = 10\nSBOX[5][6272] = 0x10202000; // 1880 (3, 8) = 11\nSBOX[5][6528] = 0x10200008; // 1980 (3, 9) = 14\nSBOX[5][6784] = 0x2000; // 1a80 (3, 10) = 1\nSBOX[5][7040] = 0x202008; // 1b80 (3, 11) = 7\nSBOX[5][7296] = 0x200008; // 1c80 (3, 12) = 6\nSBOX[5][7552] = 0x0; // 1d80 (3, 13) = 0\nSBOX[5][7808] = 0x10000000; // 1e80 (3, 14) = 8\nSBOX[5][8064] = 0x10002008; // 1f80 (3, 15) = 13\n\nSBOX[6] = new Array();\nSBOX[6][0] = 0x100000; // 0 (0, 0) = 4\nSBOX[6][16] = 0x2000401; // 10 (0, 1) = 11\nSBOX[6][32] = 0x400; // 20 (0, 2) = 2\nSBOX[6][48] = 0x100401; // 30 (0, 3) = 14\nSBOX[6][64] = 0x2100401; // 40 (0, 4) = 15\nSBOX[6][80] = 0x0; // 50 (0, 5) = 0\nSBOX[6][96] = 0x1; // 60 (0, 6) = 8\nSBOX[6][112] = 0x2100001; // 70 (0, 7) = 13\nSBOX[6][128] = 0x2000400; // 80 (0, 8) = 3\nSBOX[6][144] = 0x100001; // 90 (0, 9) = 12\nSBOX[6][160] = 0x2000001; // a0 (0, 10) = 9\nSBOX[6][176] = 0x2100400; // b0 (0, 11) = 7\nSBOX[6][192] = 0x2100000; // c0 (0, 12) = 5\nSBOX[6][208] = 0x401; // d0 (0, 13) = 10\nSBOX[6][224] = 0x100400; // e0 (0, 14) = 6\nSBOX[6][240] = 0x2000000; // f0 (0, 15) = 1\nSBOX[6][8] = 0x2100001; // 8 (1, 0) = 13\nSBOX[6][24] = 0x0; // 18 (1, 1) = 0\nSBOX[6][40] = 0x2000401; // 28 (1, 2) = 11\nSBOX[6][56] = 0x2100400; // 38 (1, 3) = 7\nSBOX[6][72] = 0x100000; // 48 (1, 4) = 4\nSBOX[6][88] = 0x2000001; // 58 (1, 5) = 9\nSBOX[6][104] = 0x2000000; // 68 (1, 6) = 1\nSBOX[6][120] = 0x401; // 78 (1, 7) = 10\nSBOX[6][136] = 0x100401; // 88 (1, 8) = 14\nSBOX[6][152] = 0x2000400; // 98 (1, 9) = 3\nSBOX[6][168] = 0x2100000; // a8 (1, 10) = 5\nSBOX[6][184] = 0x100001; // b8 (1, 11) = 12\nSBOX[6][200] = 0x400; // c8 (1, 12) = 2\nSBOX[6][216] = 0x2100401; // d8 (1, 13) = 15\nSBOX[6][232] = 0x1; // e8 (1, 14) = 8\nSBOX[6][248] = 0x100400; // f8 (1, 15) = 6\nSBOX[6][256] = 0x2000000; // 100 (2, 0) = 1\nSBOX[6][272] = 0x100000; // 110 (2, 1) = 4\nSBOX[6][288] = 0x2000401; // 120 (2, 2) = 11\nSBOX[6][304] = 0x2100001; // 130 (2, 3) = 13\nSBOX[6][320] = 0x100001; // 140 (2, 4) = 12\nSBOX[6][336] = 0x2000400; // 150 (2, 5) = 3\nSBOX[6][352] = 0x2100400; // 160 (2, 6) = 7\nSBOX[6][368] = 0x100401; // 170 (2, 7) = 14\nSBOX[6][384] = 0x401; // 180 (2, 8) = 10\nSBOX[6][400] = 0x2100401; // 190 (2, 9) = 15\nSBOX[6][416] = 0x100400; // 1a0 (2, 10) = 6\nSBOX[6][432] = 0x1; // 1b0 (2, 11) = 8\nSBOX[6][448] = 0x0; // 1c0 (2, 12) = 0\nSBOX[6][464] = 0x2100000; // 1d0 (2, 13) = 5\nSBOX[6][480] = 0x2000001; // 1e0 (2, 14) = 9\nSBOX[6][496] = 0x400; // 1f0 (2, 15) = 2\nSBOX[6][264] = 0x100400; // 108 (3, 0) = 6\nSBOX[6][280] = 0x2000401; // 118 (3, 1) = 11\nSBOX[6][296] = 0x2100001; // 128 (3, 2) = 13\nSBOX[6][312] = 0x1; // 138 (3, 3) = 8\nSBOX[6][328] = 0x2000000; // 148 (3, 4) = 1\nSBOX[6][344] = 0x100000; // 158 (3, 5) = 4\nSBOX[6][360] = 0x401; // 168 (3, 6) = 10\nSBOX[6][376] = 0x2100400; // 178 (3, 7) = 7\nSBOX[6][392] = 0x2000001; // 188 (3, 8) = 9\nSBOX[6][408] = 0x2100000; // 198 (3, 9) = 5\nSBOX[6][424] = 0x0; // 1a8 (3, 10) = 0\nSBOX[6][440] = 0x2100401; // 1b8 (3, 11) = 15\nSBOX[6][456] = 0x100401; // 1c8 (3, 12) = 14\nSBOX[6][472] = 0x400; // 1d8 (3, 13) = 2\nSBOX[6][488] = 0x2000400; // 1e8 (3, 14) = 3\nSBOX[6][504] = 0x100001; // 1f8 (3, 15) = 12\n\nSBOX[7] = new Array();\nSBOX[7][0] = 0x8000820; // 0 (0, 0) = 13\nSBOX[7][1] = 0x20000; // 1 (0, 1) = 2\nSBOX[7][2] = 0x8000000; // 2 (0, 2) = 8\nSBOX[7][3] = 0x20; // 3 (0, 3) = 4\nSBOX[7][4] = 0x20020; // 4 (0, 4) = 6\nSBOX[7][5] = 0x8020820; // 5 (0, 5) = 15\nSBOX[7][6] = 0x8020800; // 6 (0, 6) = 11\nSBOX[7][7] = 0x800; // 7 (0, 7) = 1\nSBOX[7][8] = 0x8020000; // 8 (0, 8) = 10\nSBOX[7][9] = 0x8000800; // 9 (0, 9) = 9\nSBOX[7][10] = 0x20800; // a (0, 10) = 3\nSBOX[7][11] = 0x8020020; // b (0, 11) = 14\nSBOX[7][12] = 0x820; // c (0, 12) = 5\nSBOX[7][13] = 0x0; // d (0, 13) = 0\nSBOX[7][14] = 0x8000020; // e (0, 14) = 12\nSBOX[7][15] = 0x20820; // f (0, 15) = 7\nSBOX[7][-2147483648] = 0x800; // 80000000 (1, 0) = 1\nSBOX[7][-2147483647] = 0x8020820; // 80000001 (1, 1) = 15\nSBOX[7][-2147483646] = 0x8000820; // 80000002 (1, 2) = 13\nSBOX[7][-2147483645] = 0x8000000; // 80000003 (1, 3) = 8\nSBOX[7][-2147483644] = 0x8020000; // 80000004 (1, 4) = 10\nSBOX[7][-2147483643] = 0x20800; // 80000005 (1, 5) = 3\nSBOX[7][-2147483642] = 0x20820; // 80000006 (1, 6) = 7\nSBOX[7][-2147483641] = 0x20; // 80000007 (1, 7) = 4\nSBOX[7][-2147483640] = 0x8000020; // 80000008 (1, 8) = 12\nSBOX[7][-2147483639] = 0x820; // 80000009 (1, 9) = 5\nSBOX[7][-2147483638] = 0x20020; // 8000000a (1, 10) = 6\nSBOX[7][-2147483637] = 0x8020800; // 8000000b (1, 11) = 11\nSBOX[7][-2147483636] = 0x0; // 8000000c (1, 12) = 0\nSBOX[7][-2147483635] = 0x8020020; // 8000000d (1, 13) = 14\nSBOX[7][-2147483634] = 0x8000800; // 8000000e (1, 14) = 9\nSBOX[7][-2147483633] = 0x20000; // 8000000f (1, 15) = 2\nSBOX[7][16] = 0x20820; // 10 (2, 0) = 7\nSBOX[7][17] = 0x8020800; // 11 (2, 1) = 11\nSBOX[7][18] = 0x20; // 12 (2, 2) = 4\nSBOX[7][19] = 0x800; // 13 (2, 3) = 1\nSBOX[7][20] = 0x8000800; // 14 (2, 4) = 9\nSBOX[7][21] = 0x8000020; // 15 (2, 5) = 12\nSBOX[7][22] = 0x8020020; // 16 (2, 6) = 14\nSBOX[7][23] = 0x20000; // 17 (2, 7) = 2\nSBOX[7][24] = 0x0; // 18 (2, 8) = 0\nSBOX[7][25] = 0x20020; // 19 (2, 9) = 6\nSBOX[7][26] = 0x8020000; // 1a (2, 10) = 10\nSBOX[7][27] = 0x8000820; // 1b (2, 11) = 13\nSBOX[7][28] = 0x8020820; // 1c (2, 12) = 15\nSBOX[7][29] = 0x20800; // 1d (2, 13) = 3\nSBOX[7][30] = 0x820; // 1e (2, 14) = 5\nSBOX[7][31] = 0x8000000; // 1f (2, 15) = 8\nSBOX[7][-2147483632] = 0x20000; // 80000010 (3, 0) = 2\nSBOX[7][-2147483631] = 0x800; // 80000011 (3, 1) = 1\nSBOX[7][-2147483630] = 0x8020020; // 80000012 (3, 2) = 14\nSBOX[7][-2147483629] = 0x20820; // 80000013 (3, 3) = 7\nSBOX[7][-2147483628] = 0x20; // 80000014 (3, 4) = 4\nSBOX[7][-2147483627] = 0x8020000; // 80000015 (3, 5) = 10\nSBOX[7][-2147483626] = 0x8000000; // 80000016 (3, 6) = 8\nSBOX[7][-2147483625] = 0x8000820; // 80000017 (3, 7) = 13\nSBOX[7][-2147483624] = 0x8020820; // 80000018 (3, 8) = 15\nSBOX[7][-2147483623] = 0x8000020; // 80000019 (3, 9) = 12\nSBOX[7][-2147483622] = 0x8000800; // 8000001a (3, 10) = 9\nSBOX[7][-2147483621] = 0x0; // 8000001b (3, 11) = 0\nSBOX[7][-2147483620] = 0x20800; // 8000001c (3, 12) = 3\nSBOX[7][-2147483619] = 0x820; // 8000001d (3, 13) = 5\nSBOX[7][-2147483618] = 0x20020; // 8000001e (3, 14) = 6\nSBOX[7][-2147483617] = 0x8020800; // 8000001f (3, 15) = 11\n\nState.prototype._exchangeLR = function (v, m) {\n  var t = (this.lhs >> v ^ this.rhs) & m;\n  this.rhs ^= t;\n  this.lhs ^= t << v;\n};\n\nState.prototype._exchangeRL = function (v, m) {\n  var t = (this.rhs >> v ^ this.lhs) & m;\n  this.lhs ^= t;\n  this.rhs ^= t << v;\n};\n\n/**\r\n * Perform the initial permutation of the input to create the starting state\r\n * of the algorithm. The initial permutation maps each consecutive bit of\r\n * the input into a different byte of the state.\r\n * \r\n * <pre>\r\n * The initial permutation is defined to be:\r\n * \r\n *      58    50   42    34    26   18    10    2  \r\n *      60    52   44    36    28   20    12    4\r\n *      62    54   46    38    30   22    14    6\r\n *      64    56   48    40    32   24    16    8\r\n *      57    49   41    33    25   17     9    1\r\n *      59    51   43    35    27   19    11    3\r\n *      61    53   45    37    29   21    13    5\r\n *      63    55   47    39    31   23    15    7\r\n * </pre>\r\n * \r\n * \r\n * @param message\r\n *            The message as an array of unsigned bytes.\r\n * @param offset\r\n *            The offset into the message that the current 64-bit block\r\n *            begins.\r\n * @returns the initial engine state\r\n */\nState.prototype.initialPerm = function (message, offset) {\n  var input = message.slice(offset, offset + 8);\n\n  this.lhs = (input[0] << 24) + (input[1] << 16) + (input[2] << 8) + input[3];\n  this.rhs = (input[4] << 24) + (input[5] << 16) + (input[6] << 8) + input[7];\n\n  this._exchangeLR(4, 0x0f0f0f0f);\n  this._exchangeLR(16, 0x0000ffff);\n  this._exchangeRL(2, 0x33333333);\n  this._exchangeRL(8, 0x00ff00ff);\n  this._exchangeLR(1, 0x55555555);\n};\n\n/**\r\n * Perform one round of the DES algorithm using the given key. A round is\r\n * defined as:\r\n * \r\n * <pre>\r\n * L&amp;rsquo = R\r\n * R&amp;rsquo = L &circ; f(R, k)\r\n * </pre>\r\n * \r\n * where f consists of expanding, XORing with the key and contracting back\r\n * with the SBOXes.\r\n * \r\n * Note that the final round is defined slightly differently as:\r\n * \r\n * <pre>\r\n * L&amp;rsquo = L &circ; f(R, k)\r\n * R&amp;rsquo = R\r\n * </pre>\r\n * \r\n * Therefore in the final round this function produces LHS and RHS the wrong\r\n * way around.\r\n * \r\n * @param k\r\n *            the key\r\n */\nState.prototype.round = function (k) {\n  var r = this.rhs,\n      l = this.lhs;\n  var f = 0;\n  for (var i = 0; i < 8; i++) {\n    var v = (r ^ k[i]) & State.SBOX_MASK[i];\n    f += State.SBOX[i][v];\n  }\n\n  this.lhs = r;\n  this.rhs = l ^ f;\n};\n\n/**\r\n * Apply the inverse of the initial permutation.\r\n * \r\n * <pre>\r\n * The inverse is defined to be:\r\n * \r\n *      40     8   48    16    56   24    64   32\r\n *      39     7   47    15    55   23    63   31\r\n *      38     6   46    14    54   22    62   30\r\n *      37     5   45    13    53   21    61   29\r\n *      36     4   44    12    52   20    60   28\r\n *      35     3   43    11    51   19    59   27\r\n *      34     2   42    10    50   18    58   26\r\n *      33     1   41     9    49   17    57   25\r\n * </pre>\r\n * \r\n * @param cipherText\r\n * @param offset\r\n */\nState.prototype.finalPerm = function (cipherText, offset) {\n  var t = this.lhs;\n  this.lhs = this.rhs;\n  this.rhs = t;\n\n  this._exchangeLR(1, 0x55555555);\n  this._exchangeRL(8, 0x00ff00ff);\n  this._exchangeRL(2, 0x33333333);\n  this._exchangeLR(16, 0x0000ffff);\n  this._exchangeLR(4, 0x0f0f0f0f);\n\n  cipherText[offset] = this.lhs >> 24 & 0xff;\n  cipherText[offset + 1] = this.lhs >> 16 & 0xff;\n  cipherText[offset + 2] = this.lhs >> 8 & 0xff;\n  cipherText[offset + 3] = this.lhs & 0xff;\n  cipherText[offset + 4] = this.rhs >> 24 & 0xff;\n  cipherText[offset + 5] = this.rhs >> 16 & 0xff;\n  cipherText[offset + 6] = this.rhs >> 8 & 0xff;\n  cipherText[offset + 7] = this.rhs & 0xff;\n};\n\n/**\r\n * DES cipher\r\n */\nvar DES = C.DES = {\n  _blockSize: 2,\n\n  _keyschedule: null,\n\n  _state: new State(),\n\n  _init: function _init(k) {\n    this._keyschedule = new KeySchedule(k);\n  },\n\n  encrypt: function encrypt(message, password, options) {\n\n    options = options || {};\n\n    // Determine mode\n    var mode = options.mode || new C.mode.OFB();\n\n    // Allow mode to override options\n    if (mode.fixOptions) mode.fixOptions(options);\n\n    var\n    // Convert to bytes if message is a string\n    m = message.constructor == String ? UTF8.stringToBytes(message) : message,\n\n\n    // Generate random IV\n    iv = options.iv || util.randomBytes(8),\n\n\n    // Generate key\n    k = password.constructor == String ?\n    // Derive key from passphrase\n    C.PBKDF2(password, iv, 8, {\n      asBytes: true\n    }) :\n    // else, assume byte array representing cryptographic key\n    password;\n\n    // Create key schedule\n    this._keyschedule = new KeySchedule(k);\n\n    // Encrypt\n    mode.encrypt(DES, m, iv);\n\n    // Return ciphertext\n    m = options.iv ? m : iv.concat(m);\n    return options && options.asBytes ? m : util.bytesToBase64(m);\n  },\n\n  _encryptBlock: function _encryptBlock(message, offset) {\n    this._state.initialPerm(message, offset);\n    for (var i = 0; i <= 15; i++) {\n      this._state.round(this._keyschedule.getKey(i));\n    }\n    this._state.finalPerm(message, offset);\n  },\n\n  decrypt: function decrypt(ciphertext, password, options) {\n    options = options || {};\n\n    // Determine mode\n    var mode = options.mode || new C.mode.OFB();\n\n    // Allow mode to override options\n    if (mode.fixOptions) mode.fixOptions(options);\n\n    var\n\n    // Convert to bytes if ciphertext is a string\n    c = ciphertext.constructor == String ? util.base64ToBytes(ciphertext) : ciphertext,\n\n\n    // Separate IV and message\n    iv = options.iv || c.splice(0, 8),\n\n\n    // Generate key\n    k = password.constructor == String ?\n    // Derive key from passphrase\n    C.PBKDF2(password, iv, 32, {\n      asBytes: true\n    }) :\n    // else, assume byte array representing cryptographic key\n    password;\n\n    // Create key schedule\n    this._keyschedule = new KeySchedule(k);\n\n    mode.decrypt(DES, c, iv);\n\n    // Return plaintext\n    return options && options.asBytes ? c : UTF8.bytesToString(c);\n  },\n\n  _decryptBlock: function _decryptBlock(message, offset) {\n    this._state.initialPerm(message, offset);\n    for (var i = 15; i >= 0; i--) {\n      this._state.round(this._keyschedule.getKey(i));\n    }\n    this._state.finalPerm(message, offset);\n  }\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/des.js\n ** module id = 33\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/des.js?");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\nvar HMAC = exports.HMAC = function (hasher, message, key, options) {\n\n\t// Convert to byte arrays\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\n\tif (key.constructor == String) key = UTF8.stringToBytes(key);\n\t/* else, assume byte arrays already */\n\n\t// Allow arbitrary length keys\n\tif (key.length > hasher._blocksize * 4) key = hasher(key, { asBytes: true });\n\n\t// XOR keys with pad constants\n\tvar okey = key.slice(0),\n\t    ikey = key.slice(0);\n\tfor (var i = 0; i < hasher._blocksize * 4; i++) {\n\t\tokey[i] ^= 0x5C;\n\t\tikey[i] ^= 0x36;\n\t}\n\n\tvar hmacbytes = hasher(okey.concat(hasher(ikey.concat(message), { asBytes: true })), { asBytes: true });\n\n\treturn options && options.asBytes ? hmacbytes : options && options.asString ? Binary.bytesToString(hmacbytes) : util.bytesToHex(hmacbytes);\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/hmac.js\n ** module id = 34\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/hmac.js?");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\nvar MARC4 = exports.MARC4 = {\n\n\t\t/**\r\n   * Public API\r\n   */\n\n\t\tencrypt: function encrypt(message, password) {\n\n\t\t\t\tvar\n\n\t\t\t\t// Convert to bytes\n\t\t\t\tm = UTF8.stringToBytes(message),\n\n\n\t\t\t\t// Generate random IV\n\t\t\t\tiv = util.randomBytes(16),\n\n\n\t\t\t\t// Generate key\n\t\t\t\tk = password.constructor == String ?\n\t\t\t\t// Derive key from passphrase\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t\t\t// else, assume byte array representing cryptographic key\n\t\t\t\tpassword;\n\n\t\t\t\t// Encrypt\n\t\t\t\tMARC4._marc4(m, k, 1536);\n\n\t\t\t\t// Return ciphertext\n\t\t\t\treturn util.bytesToBase64(iv.concat(m));\n\t\t},\n\n\t\tdecrypt: function decrypt(ciphertext, password) {\n\n\t\t\t\tvar\n\n\t\t\t\t// Convert to bytes\n\t\t\t\tc = util.base64ToBytes(ciphertext),\n\n\n\t\t\t\t// Separate IV and message\n\t\t\t\tiv = c.splice(0, 16),\n\n\n\t\t\t\t// Generate key\n\t\t\t\tk = password.constructor == String ?\n\t\t\t\t// Derive key from passphrase\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t\t\t// else, assume byte array representing cryptographic key\n\t\t\t\tpassword;\n\n\t\t\t\t// Decrypt\n\t\t\t\tMARC4._marc4(c, k, 1536);\n\n\t\t\t\t// Return plaintext\n\t\t\t\treturn UTF8.bytesToString(c);\n\t\t},\n\n\t\t/**\r\n   * Internal methods\r\n   */\n\n\t\t// The core\n\t\t_marc4: function _marc4(m, k, drop) {\n\n\t\t\t\t// State variables\n\t\t\t\tvar i, j, s, temp;\n\n\t\t\t\t// Key setup\n\t\t\t\tfor (i = 0, s = []; i < 256; i++) {\n\t\t\t\t\t\ts[i] = i;\n\t\t\t\t}for (i = 0, j = 0; i < 256; i++) {\n\n\t\t\t\t\t\tj = (j + s[i] + k[i % k.length]) % 256;\n\n\t\t\t\t\t\t// Swap\n\t\t\t\t\t\ttemp = s[i];\n\t\t\t\t\t\ts[i] = s[j];\n\t\t\t\t\t\ts[j] = temp;\n\t\t\t\t}\n\n\t\t\t\t// Clear counters\n\t\t\t\ti = j = 0;\n\n\t\t\t\t// Encryption\n\t\t\t\tfor (var k = -drop; k < m.length; k++) {\n\n\t\t\t\t\t\ti = (i + 1) % 256;\n\t\t\t\t\t\tj = (j + s[i]) % 256;\n\n\t\t\t\t\t\t// Swap\n\t\t\t\t\t\ttemp = s[i];\n\t\t\t\t\t\ts[i] = s[j];\n\t\t\t\t\t\ts[j] = temp;\n\n\t\t\t\t\t\t// Stop here if we're still dropping keystream\n\t\t\t\t\t\tif (k < 0) continue;\n\n\t\t\t\t\t\t// Encrypt\n\t\t\t\t\t\tm[k] ^= s[(s[i] + s[j]) % 256];\n\t\t\t\t}\n\t\t}\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/marc4.js\n ** module id = 35\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/marc4.js?");

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\n// Public API\nvar MD5 = exports.MD5 = function (message, options) {\n\tvar digestbytes = util.wordsToBytes(MD5._md5(message));\n\treturn options && options.asBytes ? digestbytes : options && options.asString ? Binary.bytesToString(digestbytes) : util.bytesToHex(digestbytes);\n};\n\n// The core\nMD5._md5 = function (message) {\n\n\t// Convert to byte array\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\n\t/* else, assume byte array already */\n\n\tvar m = util.bytesToWords(message),\n\t    l = message.length * 8,\n\t    a = 1732584193,\n\t    b = -271733879,\n\t    c = -1732584194,\n\t    d = 271733878;\n\n\t// Swap endian\n\tfor (var i = 0; i < m.length; i++) {\n\t\tm[i] = (m[i] << 8 | m[i] >>> 24) & 0x00FF00FF | (m[i] << 24 | m[i] >>> 8) & 0xFF00FF00;\n\t}\n\n\t// Padding\n\tm[l >>> 5] |= 0x80 << l % 32;\n\tm[(l + 64 >>> 9 << 4) + 14] = l;\n\n\t// Method shortcuts\n\tvar FF = MD5._ff,\n\t    GG = MD5._gg,\n\t    HH = MD5._hh,\n\t    II = MD5._ii;\n\n\tfor (var i = 0; i < m.length; i += 16) {\n\n\t\tvar aa = a,\n\t\t    bb = b,\n\t\t    cc = c,\n\t\t    dd = d;\n\n\t\ta = FF(a, b, c, d, m[i + 0], 7, -680876936);\n\t\td = FF(d, a, b, c, m[i + 1], 12, -389564586);\n\t\tc = FF(c, d, a, b, m[i + 2], 17, 606105819);\n\t\tb = FF(b, c, d, a, m[i + 3], 22, -1044525330);\n\t\ta = FF(a, b, c, d, m[i + 4], 7, -176418897);\n\t\td = FF(d, a, b, c, m[i + 5], 12, 1200080426);\n\t\tc = FF(c, d, a, b, m[i + 6], 17, -1473231341);\n\t\tb = FF(b, c, d, a, m[i + 7], 22, -45705983);\n\t\ta = FF(a, b, c, d, m[i + 8], 7, 1770035416);\n\t\td = FF(d, a, b, c, m[i + 9], 12, -1958414417);\n\t\tc = FF(c, d, a, b, m[i + 10], 17, -42063);\n\t\tb = FF(b, c, d, a, m[i + 11], 22, -1990404162);\n\t\ta = FF(a, b, c, d, m[i + 12], 7, 1804603682);\n\t\td = FF(d, a, b, c, m[i + 13], 12, -40341101);\n\t\tc = FF(c, d, a, b, m[i + 14], 17, -1502002290);\n\t\tb = FF(b, c, d, a, m[i + 15], 22, 1236535329);\n\n\t\ta = GG(a, b, c, d, m[i + 1], 5, -165796510);\n\t\td = GG(d, a, b, c, m[i + 6], 9, -1069501632);\n\t\tc = GG(c, d, a, b, m[i + 11], 14, 643717713);\n\t\tb = GG(b, c, d, a, m[i + 0], 20, -373897302);\n\t\ta = GG(a, b, c, d, m[i + 5], 5, -701558691);\n\t\td = GG(d, a, b, c, m[i + 10], 9, 38016083);\n\t\tc = GG(c, d, a, b, m[i + 15], 14, -660478335);\n\t\tb = GG(b, c, d, a, m[i + 4], 20, -405537848);\n\t\ta = GG(a, b, c, d, m[i + 9], 5, 568446438);\n\t\td = GG(d, a, b, c, m[i + 14], 9, -1019803690);\n\t\tc = GG(c, d, a, b, m[i + 3], 14, -187363961);\n\t\tb = GG(b, c, d, a, m[i + 8], 20, 1163531501);\n\t\ta = GG(a, b, c, d, m[i + 13], 5, -1444681467);\n\t\td = GG(d, a, b, c, m[i + 2], 9, -51403784);\n\t\tc = GG(c, d, a, b, m[i + 7], 14, 1735328473);\n\t\tb = GG(b, c, d, a, m[i + 12], 20, -1926607734);\n\n\t\ta = HH(a, b, c, d, m[i + 5], 4, -378558);\n\t\td = HH(d, a, b, c, m[i + 8], 11, -2022574463);\n\t\tc = HH(c, d, a, b, m[i + 11], 16, 1839030562);\n\t\tb = HH(b, c, d, a, m[i + 14], 23, -35309556);\n\t\ta = HH(a, b, c, d, m[i + 1], 4, -1530992060);\n\t\td = HH(d, a, b, c, m[i + 4], 11, 1272893353);\n\t\tc = HH(c, d, a, b, m[i + 7], 16, -155497632);\n\t\tb = HH(b, c, d, a, m[i + 10], 23, -1094730640);\n\t\ta = HH(a, b, c, d, m[i + 13], 4, 681279174);\n\t\td = HH(d, a, b, c, m[i + 0], 11, -358537222);\n\t\tc = HH(c, d, a, b, m[i + 3], 16, -722521979);\n\t\tb = HH(b, c, d, a, m[i + 6], 23, 76029189);\n\t\ta = HH(a, b, c, d, m[i + 9], 4, -640364487);\n\t\td = HH(d, a, b, c, m[i + 12], 11, -421815835);\n\t\tc = HH(c, d, a, b, m[i + 15], 16, 530742520);\n\t\tb = HH(b, c, d, a, m[i + 2], 23, -995338651);\n\n\t\ta = II(a, b, c, d, m[i + 0], 6, -198630844);\n\t\td = II(d, a, b, c, m[i + 7], 10, 1126891415);\n\t\tc = II(c, d, a, b, m[i + 14], 15, -1416354905);\n\t\tb = II(b, c, d, a, m[i + 5], 21, -57434055);\n\t\ta = II(a, b, c, d, m[i + 12], 6, 1700485571);\n\t\td = II(d, a, b, c, m[i + 3], 10, -1894986606);\n\t\tc = II(c, d, a, b, m[i + 10], 15, -1051523);\n\t\tb = II(b, c, d, a, m[i + 1], 21, -2054922799);\n\t\ta = II(a, b, c, d, m[i + 8], 6, 1873313359);\n\t\td = II(d, a, b, c, m[i + 15], 10, -30611744);\n\t\tc = II(c, d, a, b, m[i + 6], 15, -1560198380);\n\t\tb = II(b, c, d, a, m[i + 13], 21, 1309151649);\n\t\ta = II(a, b, c, d, m[i + 4], 6, -145523070);\n\t\td = II(d, a, b, c, m[i + 11], 10, -1120210379);\n\t\tc = II(c, d, a, b, m[i + 2], 15, 718787259);\n\t\tb = II(b, c, d, a, m[i + 9], 21, -343485551);\n\n\t\ta = a + aa >>> 0;\n\t\tb = b + bb >>> 0;\n\t\tc = c + cc >>> 0;\n\t\td = d + dd >>> 0;\n\t}\n\n\treturn util.endian([a, b, c, d]);\n};\n\n// Auxiliary functions\nMD5._ff = function (a, b, c, d, x, s, t) {\n\tvar n = a + (b & c | ~b & d) + (x >>> 0) + t;\n\treturn (n << s | n >>> 32 - s) + b;\n};\nMD5._gg = function (a, b, c, d, x, s, t) {\n\tvar n = a + (b & d | c & ~d) + (x >>> 0) + t;\n\treturn (n << s | n >>> 32 - s) + b;\n};\nMD5._hh = function (a, b, c, d, x, s, t) {\n\tvar n = a + (b ^ c ^ d) + (x >>> 0) + t;\n\treturn (n << s | n >>> 32 - s) + b;\n};\nMD5._ii = function (a, b, c, d, x, s, t) {\n\tvar n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\n\treturn (n << s | n >>> 32 - s) + b;\n};\n\n// Package private blocksize\nMD5._blocksize = 16;\n\nMD5._digestsize = 16;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/md5.js\n ** module id = 36\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/md5.js?");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\nexports.PBKDF2 = function (password, salt, keylen, options) {\n\n\t// Convert to byte arrays\n\tif (password.constructor == String) password = UTF8.stringToBytes(password);\n\tif (salt.constructor == String) salt = UTF8.stringToBytes(salt);\n\t/* else, assume byte arrays already */\n\n\t// Defaults\n\tvar hasher = options && options.hasher || C.SHA1,\n\t    iterations = options && options.iterations || 1;\n\n\t// Pseudo-random function\n\tfunction PRF(password, salt) {\n\t\treturn C.HMAC(hasher, salt, password, { asBytes: true });\n\t}\n\n\t// Generate key\n\tvar derivedKeyBytes = [],\n\t    blockindex = 1;\n\twhile (derivedKeyBytes.length < keylen) {\n\t\tvar block = PRF(password, salt.concat(util.wordsToBytes([blockindex])));\n\t\tfor (var u = block, i = 1; i < iterations; i++) {\n\t\t\tu = PRF(password, u);\n\t\t\tfor (var j = 0; j < block.length; j++) {\n\t\t\t\tblock[j] ^= u[j];\n\t\t\t}\n\t\t}\n\t\tderivedKeyBytes = derivedKeyBytes.concat(block);\n\t\tblockindex++;\n\t}\n\n\t// Truncate excess bytes\n\tderivedKeyBytes.length = keylen;\n\n\treturn options && options.asBytes ? derivedKeyBytes : options && options.asString ? Binary.bytesToString(derivedKeyBytes) : util.bytesToHex(derivedKeyBytes);\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/pbkdf2.js\n ** module id = 37\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/pbkdf2.js?");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\nif (!C.nextTick) {\n    // node.js has setTime out but prefer process.nextTick\n    if (typeof process != 'undefined' && typeof process.nextTick !== 'undefined') {\n        C.nextTick = process.nextTick;\n    } else if (typeof setTimeout !== 'undefined') {\n        C.nextTick = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n}\n\nexports.PBKDF2Async = function (password, salt, keylen, callback, options) {\n\n    // Convert to byte arrays\n    if (password.constructor == String) password = UTF8.stringToBytes(password);\n    if (salt.constructor == String) salt = UTF8.stringToBytes(salt);\n    /* else, assume byte arrays already */\n\n    // Defaults\n    var hasher = options && options.hasher || C.SHA1,\n        iterations = options && options.iterations || 1;\n\n    // Progress callback option\n    var progressChangeHandler = options && options.onProgressChange;\n    var totalIterations = Math.ceil(keylen / hasher._digestsize) * iterations;\n    function fireProgressChange(currentIteration) {\n        if (progressChangeHandler) {\n            var iterationsSoFar = derivedKeyBytes.length / hasher._digestsize * iterations + currentIteration;\n            setTimeout(function () {\n                progressChangeHandler(Math.round(iterationsSoFar / totalIterations * 100));\n            }, 0);\n        }\n    }\n\n    // Pseudo-random function\n    function PRF(password, salt) {\n        return C.HMAC(hasher, salt, password, { asBytes: true });\n    }\n\n    var nextTick = C.nextTick;\n\n    // Generate key\n    var derivedKeyBytes = [],\n        blockindex = 1;\n\n    var _outer, _inner;\n    nextTick(_outer = function outer() {\n        if (derivedKeyBytes.length < keylen) {\n            var block = PRF(password, salt.concat(util.wordsToBytes([blockindex])));\n            fireProgressChange(1);\n\n            var u = block,\n                i = 1;\n            nextTick(_inner = function inner() {\n                if (i < iterations) {\n                    u = PRF(password, u);\n                    for (var j = 0; j < block.length; j++) {\n                        block[j] ^= u[j];\n                    }i++;\n                    fireProgressChange(i);\n\n                    nextTick(_inner);\n                } else {\n                    derivedKeyBytes = derivedKeyBytes.concat(block);\n                    blockindex++;\n                    nextTick(_outer);\n                }\n            });\n        } else {\n            // Truncate excess bytes\n            derivedKeyBytes.length = keylen;\n            callback(options && options.asBytes ? derivedKeyBytes : options && options.asString ? Binary.bytesToString(derivedKeyBytes) : util.bytesToHex(derivedKeyBytes));\n        }\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/pbkdf2async.js\n ** module id = 38\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/pbkdf2async.js?");

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\n// Inner state\nvar x = [],\n    c = [],\n    b;\n\nexports.Rabbit = {\n\n\t\t/**\r\n   * Public API\r\n   */\n\n\t\tencrypt: function encrypt(message, password) {\n\n\t\t\t\tvar\n\n\t\t\t\t// Convert to bytes\n\t\t\t\tm = UTF8.stringToBytes(message),\n\n\n\t\t\t\t// Generate random IV\n\t\t\t\tiv = util.randomBytes(8),\n\n\n\t\t\t\t// Generate key\n\t\t\t\tk = password.constructor == String ?\n\t\t\t\t// Derive key from passphrase\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t\t\t// else, assume byte array representing cryptographic key\n\t\t\t\tpassword;\n\n\t\t\t\t// Encrypt\n\t\t\t\tRabbit._rabbit(m, k, util.bytesToWords(iv));\n\n\t\t\t\t// Return ciphertext\n\t\t\t\treturn util.bytesToBase64(iv.concat(m));\n\t\t},\n\n\t\tdecrypt: function decrypt(ciphertext, password) {\n\n\t\t\t\tvar\n\n\t\t\t\t// Convert to bytes\n\t\t\t\tc = util.base64ToBytes(ciphertext),\n\n\n\t\t\t\t// Separate IV and message\n\t\t\t\tiv = c.splice(0, 8),\n\n\n\t\t\t\t// Generate key\n\t\t\t\tk = password.constructor == String ?\n\t\t\t\t// Derive key from passphrase\n\t\t\t\tC.PBKDF2(password, iv, 32, { asBytes: true }) :\n\t\t\t\t// else, assume byte array representing cryptographic key\n\t\t\t\tpassword;\n\n\t\t\t\t// Decrypt\n\t\t\t\tRabbit._rabbit(c, k, util.bytesToWords(iv));\n\n\t\t\t\t// Return plaintext\n\t\t\t\treturn UTF8.bytesToString(c);\n\t\t},\n\n\t\t/**\r\n   * Internal methods\r\n   */\n\n\t\t// Encryption/decryption scheme\n\t\t_rabbit: function _rabbit(m, k, iv) {\n\n\t\t\t\tRabbit._keysetup(k);\n\t\t\t\tif (iv) Rabbit._ivsetup(iv);\n\n\t\t\t\tfor (var s = [], i = 0; i < m.length; i++) {\n\n\t\t\t\t\t\tif (i % 16 == 0) {\n\n\t\t\t\t\t\t\t\t// Iterate the system\n\t\t\t\t\t\t\t\tRabbit._nextstate();\n\n\t\t\t\t\t\t\t\t// Generate 16 bytes of pseudo-random data\n\t\t\t\t\t\t\t\ts[0] = x[0] ^ x[5] >>> 16 ^ x[3] << 16;\n\t\t\t\t\t\t\t\ts[1] = x[2] ^ x[7] >>> 16 ^ x[5] << 16;\n\t\t\t\t\t\t\t\ts[2] = x[4] ^ x[1] >>> 16 ^ x[7] << 16;\n\t\t\t\t\t\t\t\ts[3] = x[6] ^ x[3] >>> 16 ^ x[1] << 16;\n\n\t\t\t\t\t\t\t\t// Swap endian\n\t\t\t\t\t\t\t\tfor (var j = 0; j < 4; j++) {\n\t\t\t\t\t\t\t\t\t\ts[j] = (s[j] << 8 | s[j] >>> 24) & 0x00FF00FF | (s[j] << 24 | s[j] >>> 8) & 0xFF00FF00;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Convert words to bytes\n\t\t\t\t\t\t\t\tfor (var b = 120; b >= 0; b -= 8) {\n\t\t\t\t\t\t\t\t\t\ts[b / 8] = s[b >>> 5] >>> 24 - b % 32 & 0xFF;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tm[i] ^= s[i % 16];\n\t\t\t\t}\n\t\t},\n\n\t\t// Key setup scheme\n\t\t_keysetup: function _keysetup(k) {\n\n\t\t\t\t// Generate initial state values\n\t\t\t\tx[0] = k[0];\n\t\t\t\tx[2] = k[1];\n\t\t\t\tx[4] = k[2];\n\t\t\t\tx[6] = k[3];\n\t\t\t\tx[1] = k[3] << 16 | k[2] >>> 16;\n\t\t\t\tx[3] = k[0] << 16 | k[3] >>> 16;\n\t\t\t\tx[5] = k[1] << 16 | k[0] >>> 16;\n\t\t\t\tx[7] = k[2] << 16 | k[1] >>> 16;\n\n\t\t\t\t// Generate initial counter values\n\t\t\t\tc[0] = util.rotl(k[2], 16);\n\t\t\t\tc[2] = util.rotl(k[3], 16);\n\t\t\t\tc[4] = util.rotl(k[0], 16);\n\t\t\t\tc[6] = util.rotl(k[1], 16);\n\t\t\t\tc[1] = k[0] & 0xFFFF0000 | k[1] & 0xFFFF;\n\t\t\t\tc[3] = k[1] & 0xFFFF0000 | k[2] & 0xFFFF;\n\t\t\t\tc[5] = k[2] & 0xFFFF0000 | k[3] & 0xFFFF;\n\t\t\t\tc[7] = k[3] & 0xFFFF0000 | k[0] & 0xFFFF;\n\n\t\t\t\t// Clear carry bit\n\t\t\t\tb = 0;\n\n\t\t\t\t// Iterate the system four times\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tRabbit._nextstate();\n\t\t\t\t} // Modify the counters\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\t\tc[i] ^= x[i + 4 & 7];\n\t\t\t\t}\n\t\t},\n\n\t\t// IV setup scheme\n\t\t_ivsetup: function _ivsetup(iv) {\n\n\t\t\t\t// Generate four subvectors\n\t\t\t\tvar i0 = util.endian(iv[0]),\n\t\t\t\t    i2 = util.endian(iv[1]),\n\t\t\t\t    i1 = i0 >>> 16 | i2 & 0xFFFF0000,\n\t\t\t\t    i3 = i2 << 16 | i0 & 0x0000FFFF;\n\n\t\t\t\t// Modify counter values\n\t\t\t\tc[0] ^= i0;\n\t\t\t\tc[1] ^= i1;\n\t\t\t\tc[2] ^= i2;\n\t\t\t\tc[3] ^= i3;\n\t\t\t\tc[4] ^= i0;\n\t\t\t\tc[5] ^= i1;\n\t\t\t\tc[6] ^= i2;\n\t\t\t\tc[7] ^= i3;\n\n\t\t\t\t// Iterate the system four times\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tRabbit._nextstate();\n\t\t\t\t}\n\t\t},\n\n\t\t// Next-state function\n\t\t_nextstate: function _nextstate() {\n\n\t\t\t\t// Save old counter values\n\t\t\t\tfor (var c_old = [], i = 0; i < 8; i++) {\n\t\t\t\t\t\tc_old[i] = c[i];\n\t\t\t\t} // Calculate new counter values\n\t\t\t\tc[0] = c[0] + 0x4D34D34D + b >>> 0;\n\t\t\t\tc[1] = c[1] + 0xD34D34D3 + (c[0] >>> 0 < c_old[0] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[2] = c[2] + 0x34D34D34 + (c[1] >>> 0 < c_old[1] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[3] = c[3] + 0x4D34D34D + (c[2] >>> 0 < c_old[2] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[4] = c[4] + 0xD34D34D3 + (c[3] >>> 0 < c_old[3] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[5] = c[5] + 0x34D34D34 + (c[4] >>> 0 < c_old[4] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[6] = c[6] + 0x4D34D34D + (c[5] >>> 0 < c_old[5] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tc[7] = c[7] + 0xD34D34D3 + (c[6] >>> 0 < c_old[6] >>> 0 ? 1 : 0) >>> 0;\n\t\t\t\tb = c[7] >>> 0 < c_old[7] >>> 0 ? 1 : 0;\n\n\t\t\t\t// Calculate the g-values\n\t\t\t\tfor (var g = [], i = 0; i < 8; i++) {\n\n\t\t\t\t\t\tvar gx = x[i] + c[i] >>> 0;\n\n\t\t\t\t\t\t// Construct high and low argument for squaring\n\t\t\t\t\t\tvar ga = gx & 0xFFFF,\n\t\t\t\t\t\t    gb = gx >>> 16;\n\n\t\t\t\t\t\t// Calculate high and low result of squaring\n\t\t\t\t\t\tvar gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb,\n\t\t\t\t\t\t    gl = ((gx & 0xFFFF0000) * gx >>> 0) + ((gx & 0x0000FFFF) * gx >>> 0) >>> 0;\n\n\t\t\t\t\t\t// High XOR low\n\t\t\t\t\t\tg[i] = gh ^ gl;\n\t\t\t\t}\n\n\t\t\t\t// Calculate new state values\n\t\t\t\tx[0] = g[0] + (g[7] << 16 | g[7] >>> 16) + (g[6] << 16 | g[6] >>> 16);\n\t\t\t\tx[1] = g[1] + (g[0] << 8 | g[0] >>> 24) + g[7];\n\t\t\t\tx[2] = g[2] + (g[1] << 16 | g[1] >>> 16) + (g[0] << 16 | g[0] >>> 16);\n\t\t\t\tx[3] = g[3] + (g[2] << 8 | g[2] >>> 24) + g[1];\n\t\t\t\tx[4] = g[4] + (g[3] << 16 | g[3] >>> 16) + (g[2] << 16 | g[2] >>> 16);\n\t\t\t\tx[5] = g[5] + (g[4] << 8 | g[4] >>> 24) + g[3];\n\t\t\t\tx[6] = g[6] + (g[5] << 16 | g[5] >>> 16) + (g[4] << 16 | g[4] >>> 16);\n\t\t\t\tx[7] = g[7] + (g[6] << 8 | g[6] >>> 24) + g[5];\n\t\t}\n\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/rabbit.js\n ** module id = 39\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/rabbit.js?");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\n// Public API\nvar SHA1 = exports.SHA1 = function (message, options) {\n\tvar digestbytes = util.wordsToBytes(SHA1._sha1(message));\n\treturn options && options.asBytes ? digestbytes : options && options.asString ? Binary.bytesToString(digestbytes) : util.bytesToHex(digestbytes);\n};\n\n// The core\nSHA1._sha1 = function (message) {\n\n\t// Convert to byte array\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\n\t/* else, assume byte array already */\n\n\tvar m = util.bytesToWords(message),\n\t    l = message.length * 8,\n\t    w = [],\n\t    H0 = 1732584193,\n\t    H1 = -271733879,\n\t    H2 = -1732584194,\n\t    H3 = 271733878,\n\t    H4 = -1009589776;\n\n\t// Padding\n\tm[l >> 5] |= 0x80 << 24 - l % 32;\n\tm[(l + 64 >>> 9 << 4) + 15] = l;\n\n\tfor (var i = 0; i < m.length; i += 16) {\n\n\t\tvar a = H0,\n\t\t    b = H1,\n\t\t    c = H2,\n\t\t    d = H3,\n\t\t    e = H4;\n\n\t\tfor (var j = 0; j < 80; j++) {\n\n\t\t\tif (j < 16) w[j] = m[i + j];else {\n\t\t\t\tvar n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n\t\t\t\tw[j] = n << 1 | n >>> 31;\n\t\t\t}\n\n\t\t\tvar t = (H0 << 5 | H0 >>> 27) + H4 + (w[j] >>> 0) + (j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 : j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 : j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 : (H1 ^ H2 ^ H3) - 899497514);\n\n\t\t\tH4 = H3;\n\t\t\tH3 = H2;\n\t\t\tH2 = H1 << 30 | H1 >>> 2;\n\t\t\tH1 = H0;\n\t\t\tH0 = t;\n\t\t}\n\n\t\tH0 += a;\n\t\tH1 += b;\n\t\tH2 += c;\n\t\tH3 += d;\n\t\tH4 += e;\n\t}\n\n\treturn [H0, H1, H2, H3, H4];\n};\n\n// Package private blocksize\nSHA1._blocksize = 16;\n\nSHA1._digestsize = 20;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/sha1.js\n ** module id = 40\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/sha1.js?");

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// Shortcuts\nvar C = __webpack_require__(30).Crypto,\n    util = C.util,\n    charenc = C.charenc,\n    UTF8 = charenc.UTF8,\n    Binary = charenc.Binary;\n\n// Constants\nvar K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\n\n// Public API\nvar SHA256 = exports.SHA256 = function (message, options) {\n\tvar digestbytes = util.wordsToBytes(SHA256._sha256(message));\n\treturn options && options.asBytes ? digestbytes : options && options.asString ? Binary.bytesToString(digestbytes) : util.bytesToHex(digestbytes);\n};\n\n// The core\nSHA256._sha256 = function (message) {\n\n\t// Convert to byte array\n\tif (message.constructor == String) message = UTF8.stringToBytes(message);\n\t/* else, assume byte array already */\n\n\tvar m = util.bytesToWords(message),\n\t    l = message.length * 8,\n\t    H = [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19],\n\t    w = [],\n\t    a,\n\t    b,\n\t    c,\n\t    d,\n\t    e,\n\t    f,\n\t    g,\n\t    h,\n\t    i,\n\t    j,\n\t    t1,\n\t    t2;\n\n\t// Padding\n\tm[l >> 5] |= 0x80 << 24 - l % 32;\n\tm[(l + 64 >> 9 << 4) + 15] = l;\n\n\tfor (var i = 0; i < m.length; i += 16) {\n\n\t\ta = H[0];\n\t\tb = H[1];\n\t\tc = H[2];\n\t\td = H[3];\n\t\te = H[4];\n\t\tf = H[5];\n\t\tg = H[6];\n\t\th = H[7];\n\n\t\tfor (var j = 0; j < 64; j++) {\n\n\t\t\tif (j < 16) w[j] = m[j + i];else {\n\n\t\t\t\tvar gamma0x = w[j - 15],\n\t\t\t\t    gamma1x = w[j - 2],\n\t\t\t\t    gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3,\n\t\t\t\t    gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n\n\t\t\t\tw[j] = gamma0 + (w[j - 7] >>> 0) + gamma1 + (w[j - 16] >>> 0);\n\t\t\t}\n\n\t\t\tvar ch = e & f ^ ~e & g,\n\t\t\t    maj = a & b ^ a & c ^ b & c,\n\t\t\t    sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22),\n\t\t\t    sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n\n\t\t\tt1 = (h >>> 0) + sigma1 + ch + K[j] + (w[j] >>> 0);\n\t\t\tt2 = sigma0 + maj;\n\n\t\t\th = g;\n\t\t\tg = f;\n\t\t\tf = e;\n\t\t\te = d + t1;\n\t\t\td = c;\n\t\t\tc = b;\n\t\t\tb = a;\n\t\t\ta = t1 + t2;\n\t\t}\n\n\t\tH[0] += a;\n\t\tH[1] += b;\n\t\tH[2] += c;\n\t\tH[3] += d;\n\t\tH[4] += e;\n\t\tH[5] += f;\n\t\tH[6] += g;\n\t\tH[7] += h;\n\t}\n\n\treturn H;\n};\n\n// Package private blocksize\nSHA256._blocksize = 16;\n\nSHA256._digestsize = 32;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/ezcrypto/lib/sha256.js\n ** module id = 41\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/ezcrypto/lib/sha256.js?");

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};var navigator={};navigator.userAgent=false;var window={};/*\n * jsrsasign 5.0.1 (c) 2010-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n *//*\nyahoo-min.js\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\nCode licensed under the BSD License:\nhttp://developer.yahoo.com/yui/license.html\nversion: 2.9.0\n*/if(typeof YAHOO==\"undefined\"||!YAHOO){var YAHOO={};}YAHOO.namespace=function(){var b=arguments,g=null,e,c,f;for(e=0;e<b.length;e=e+1){f=(\"\"+b[e]).split(\".\");g=YAHOO;for(c=f[0]==\"YAHOO\"?1:0;c<f.length;c=c+1){g[f[c]]=g[f[c]]||{};g=g[f[c]];}}return g;};YAHOO.log=function(d,a,c){var b=YAHOO.widget.Logger;if(b&&b.log){return b.log(d,a,c);}else{return false;}};YAHOO.register=function(a,f,e){var k=YAHOO.env.modules,c,j,h,g,d;if(!k[a]){k[a]={versions:[],builds:[]};}c=k[a];j=e.version;h=e.build;g=YAHOO.env.listeners;c.name=a;c.version=j;c.build=h;c.versions.push(j);c.builds.push(h);c.mainClass=f;for(d=0;d<g.length;d=d+1){g[d](c);}if(f){f.VERSION=j;f.BUILD=h;}else{YAHOO.log(\"mainClass is undefined for module \"+a,\"warn\");}};YAHOO.env=YAHOO.env||{modules:[],listeners:[]};YAHOO.env.getVersion=function(a){return YAHOO.env.modules[a]||null;};YAHOO.env.parseUA=function(d){var e=function e(i){var j=0;return parseFloat(i.replace(/\\./g,function(){return j++==1?\"\":\".\";}));},h=navigator,g={ie:0,opera:0,gecko:0,webkit:0,chrome:0,mobile:null,air:0,ipad:0,iphone:0,ipod:0,ios:null,android:0,webos:0,caja:h&&h.cajaVersion,secure:false,os:null},c=d||navigator&&navigator.userAgent,f=window&&window.location,b=f&&f.href,a;g.secure=b&&b.toLowerCase().indexOf(\"https\")===0;if(c){if(/windows|win32/i.test(c)){g.os=\"windows\";}else{if(/macintosh/i.test(c)){g.os=\"macintosh\";}else{if(/rhino/i.test(c)){g.os=\"rhino\";}}}if(/KHTML/.test(c)){g.webkit=1;}a=c.match(/AppleWebKit\\/([^\\s]*)/);if(a&&a[1]){g.webkit=e(a[1]);if(/ Mobile\\//.test(c)){g.mobile=\"Apple\";a=c.match(/OS ([^\\s]*)/);if(a&&a[1]){a=e(a[1].replace(\"_\",\".\"));}g.ios=a;g.ipad=g.ipod=g.iphone=0;a=c.match(/iPad|iPod|iPhone/);if(a&&a[0]){g[a[0].toLowerCase()]=g.ios;}}else{a=c.match(/NokiaN[^\\/]*|Android \\d\\.\\d|webOS\\/\\d\\.\\d/);if(a){g.mobile=a[0];}if(/webOS/.test(c)){g.mobile=\"WebOS\";a=c.match(/webOS\\/([^\\s]*);/);if(a&&a[1]){g.webos=e(a[1]);}}if(/ Android/.test(c)){g.mobile=\"Android\";a=c.match(/Android ([^\\s]*);/);if(a&&a[1]){g.android=e(a[1]);}}}a=c.match(/Chrome\\/([^\\s]*)/);if(a&&a[1]){g.chrome=e(a[1]);}else{a=c.match(/AdobeAIR\\/([^\\s]*)/);if(a){g.air=a[0];}}}if(!g.webkit){a=c.match(/Opera[\\s\\/]([^\\s]*)/);if(a&&a[1]){g.opera=e(a[1]);a=c.match(/Version\\/([^\\s]*)/);if(a&&a[1]){g.opera=e(a[1]);}a=c.match(/Opera Mini[^;]*/);if(a){g.mobile=a[0];}}else{a=c.match(/MSIE\\s([^;]*)/);if(a&&a[1]){g.ie=e(a[1]);}else{a=c.match(/Gecko\\/([^\\s]*)/);if(a){g.gecko=1;a=c.match(/rv:([^\\s\\)]*)/);if(a&&a[1]){g.gecko=e(a[1]);}}}}}}return g;};YAHOO.env.ua=YAHOO.env.parseUA();(function(){YAHOO.namespace(\"util\",\"widget\",\"example\");if(\"undefined\"!==typeof YAHOO_config){var b=YAHOO_config.listener,a=YAHOO.env.listeners,d=true,c;if(b){for(c=0;c<a.length;c++){if(a[c]==b){d=false;break;}}if(d){a.push(b);}}}})();YAHOO.lang=YAHOO.lang||{};(function(){var f=YAHOO.lang,a=Object.prototype,c=\"[object Array]\",h=\"[object Function]\",i=\"[object Object]\",b=[],g={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"/\":\"&#x2F;\",\"`\":\"&#x60;\"},d=[\"toString\",\"valueOf\"],e={isArray:function isArray(j){return a.toString.apply(j)===c;},isBoolean:function isBoolean(j){return typeof j===\"boolean\";},isFunction:function isFunction(j){return typeof j===\"function\"||a.toString.apply(j)===h;},isNull:function isNull(j){return j===null;},isNumber:function isNumber(j){return typeof j===\"number\"&&isFinite(j);},isObject:function isObject(j){return j&&((typeof j===\"undefined\"?\"undefined\":_typeof(j))===\"object\"||f.isFunction(j))||false;},isString:function isString(j){return typeof j===\"string\";},isUndefined:function isUndefined(j){return typeof j===\"undefined\";},_IEEnumFix:YAHOO.env.ua.ie?function(l,k){var j,n,m;for(j=0;j<d.length;j=j+1){n=d[j];m=k[n];if(f.isFunction(m)&&m!=a[n]){l[n]=m;}}}:function(){},escapeHTML:function escapeHTML(j){return j.replace(/[&<>\"'\\/`]/g,function(k){return g[k];});},extend:function extend(m,n,l){if(!n||!m){throw new Error(\"extend failed, please check that \"+\"all dependencies are included.\");}var k=function k(){},j;k.prototype=n.prototype;m.prototype=new k();m.prototype.constructor=m;m.superclass=n.prototype;if(n.prototype.constructor==a.constructor){n.prototype.constructor=n;}if(l){for(j in l){if(f.hasOwnProperty(l,j)){m.prototype[j]=l[j];}}f._IEEnumFix(m.prototype,l);}},augmentObject:function augmentObject(n,m){if(!m||!n){throw new Error(\"Absorb failed, verify dependencies.\");}var j=arguments,l,o,k=j[2];if(k&&k!==true){for(l=2;l<j.length;l=l+1){n[j[l]]=m[j[l]];}}else{for(o in m){if(k||!(o in n)){n[o]=m[o];}}f._IEEnumFix(n,m);}return n;},augmentProto:function augmentProto(m,l){if(!l||!m){throw new Error(\"Augment failed, verify dependencies.\");}var j=[m.prototype,l.prototype],k;for(k=2;k<arguments.length;k=k+1){j.push(arguments[k]);}f.augmentObject.apply(this,j);return m;},dump:function dump(j,p){var l,n,r=[],t=\"{...}\",k=\"f(){...}\",q=\", \",m=\" => \";if(!f.isObject(j)){return j+\"\";}else{if(j instanceof Date||\"nodeType\"in j&&\"tagName\"in j){return j;}else{if(f.isFunction(j)){return k;}}}p=f.isNumber(p)?p:3;if(f.isArray(j)){r.push(\"[\");for(l=0,n=j.length;l<n;l=l+1){if(f.isObject(j[l])){r.push(p>0?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}if(r.length>1){r.pop();}r.push(\"]\");}else{r.push(\"{\");for(l in j){if(f.hasOwnProperty(j,l)){r.push(l+m);if(f.isObject(j[l])){r.push(p>0?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}}if(r.length>1){r.pop();}r.push(\"}\");}return r.join(\"\");},substitute:function substitute(x,y,E,l){var D,C,B,G,t,u,F=[],p,z=x.length,A=\"dump\",r=\" \",q=\"{\",m=\"}\",n,w;for(;;){D=x.lastIndexOf(q,z);if(D<0){break;}C=x.indexOf(m,D);if(D+1>C){break;}p=x.substring(D+1,C);G=p;u=null;B=G.indexOf(r);if(B>-1){u=G.substring(B+1);G=G.substring(0,B);}t=y[G];if(E){t=E(G,t,u);}if(f.isObject(t)){if(f.isArray(t)){t=f.dump(t,parseInt(u,10));}else{u=u||\"\";n=u.indexOf(A);if(n>-1){u=u.substring(4);}w=t.toString();if(w===i||n>-1){t=f.dump(t,parseInt(u,10));}else{t=w;}}}else{if(!f.isString(t)&&!f.isNumber(t)){t=\"~-\"+F.length+\"-~\";F[F.length]=p;}}x=x.substring(0,D)+t+x.substring(C+1);if(l===false){z=D-1;}}for(D=F.length-1;D>=0;D=D-1){x=x.replace(new RegExp(\"~-\"+D+\"-~\"),\"{\"+F[D]+\"}\",\"g\");}return x;},trim:function trim(j){try{return j.replace(/^\\s+|\\s+$/g,\"\");}catch(k){return j;}},merge:function merge(){var n={},k=arguments,j=k.length,m;for(m=0;m<j;m=m+1){f.augmentObject(n,k[m],true);}return n;},later:function later(t,k,u,n,p){t=t||0;k=k||{};var l=u,s=n,q,j;if(f.isString(u)){l=k[u];}if(!l){throw new TypeError(\"method undefined\");}if(!f.isUndefined(n)&&!f.isArray(s)){s=[n];}q=function q(){l.apply(k,s||b);};j=p?setInterval(q,t):setTimeout(q,t);return{interval:p,cancel:function cancel(){if(this.interval){clearInterval(j);}else{clearTimeout(j);}}};},isValue:function isValue(j){return f.isObject(j)||f.isString(j)||f.isNumber(j)||f.isBoolean(j);}};f.hasOwnProperty=a.hasOwnProperty?function(j,k){return j&&j.hasOwnProperty&&j.hasOwnProperty(k);}:function(j,k){return!f.isUndefined(j[k])&&j.constructor.prototype[k]!==j[k];};e.augmentObject(f,e,true);YAHOO.util.Lang=f;f.augment=f.augmentProto;YAHOO.augment=f.augmentProto;YAHOO.extend=f.extend;})();YAHOO.register(\"yahoo\",YAHOO,{version:\"2.9.0\",build:\"2800\"});/*! CryptoJS v3.1.2 core-fix.js\n * code.google.com/p/crypto-js\n * (c) 2009-2013 by Jeff Mott. All rights reserved.\n * code.google.com/p/crypto-js/wiki/License\n * THIS IS FIX of 'core.js' to fix Hmac issue.\n * https://code.google.com/p/crypto-js/issues/detail?id=84\n * https://crypto-js.googlecode.com/svn-history/r667/branches/3.x/src/core.js\n */var CryptoJS=CryptoJS||function(e,g){var a={};var b=a.lib={};var j=b.Base=function(){function n(){}return{extend:function extend(p){n.prototype=this;var o=new n();if(p){o.mixIn(p);}if(!o.hasOwnProperty(\"init\")){o.init=function(){o.$super.init.apply(this,arguments);};}o.init.prototype=o;o.$super=this;return o;},create:function create(){var o=this.extend();o.init.apply(o,arguments);return o;},init:function init(){},mixIn:function mixIn(p){for(var o in p){if(p.hasOwnProperty(o)){this[o]=p[o];}}if(p.hasOwnProperty(\"toString\")){this.toString=p.toString;}},clone:function clone(){return this.init.prototype.extend(this);}};}();var l=b.WordArray=j.extend({init:function init(o,n){o=this.words=o||[];if(n!=g){this.sigBytes=n;}else{this.sigBytes=o.length*4;}},toString:function toString(n){return(n||h).stringify(this);},concat:function concat(t){var q=this.words;var p=t.words;var n=this.sigBytes;var s=t.sigBytes;this.clamp();if(n%4){for(var r=0;r<s;r++){var o=p[r>>>2]>>>24-r%4*8&255;q[n+r>>>2]|=o<<24-(n+r)%4*8;}}else{for(var r=0;r<s;r+=4){q[n+r>>>2]=p[r>>>2];}}this.sigBytes+=s;return this;},clamp:function clamp(){var o=this.words;var n=this.sigBytes;o[n>>>2]&=4294967295<<32-n%4*8;o.length=e.ceil(n/4);},clone:function clone(){var n=j.clone.call(this);n.words=this.words.slice(0);return n;},random:function random(p){var o=[];for(var n=0;n<p;n+=4){o.push(e.random()*4294967296|0);}return new l.init(o,p);}});var m=a.enc={};var h=m.Hex={stringify:function stringify(p){var r=p.words;var o=p.sigBytes;var q=[];for(var n=0;n<o;n++){var s=r[n>>>2]>>>24-n%4*8&255;q.push((s>>>4).toString(16));q.push((s&15).toString(16));}return q.join(\"\");},parse:function parse(p){var n=p.length;var q=[];for(var o=0;o<n;o+=2){q[o>>>3]|=parseInt(p.substr(o,2),16)<<24-o%8*4;}return new l.init(q,n/2);}};var d=m.Latin1={stringify:function stringify(q){var r=q.words;var p=q.sigBytes;var n=[];for(var o=0;o<p;o++){var s=r[o>>>2]>>>24-o%4*8&255;n.push(String.fromCharCode(s));}return n.join(\"\");},parse:function parse(p){var n=p.length;var q=[];for(var o=0;o<n;o++){q[o>>>2]|=(p.charCodeAt(o)&255)<<24-o%4*8;}return new l.init(q,n);}};var c=m.Utf8={stringify:function stringify(n){try{return decodeURIComponent(escape(d.stringify(n)));}catch(o){throw new Error(\"Malformed UTF-8 data\");}},parse:function parse(n){return d.parse(unescape(encodeURIComponent(n)));}};var i=b.BufferedBlockAlgorithm=j.extend({reset:function reset(){this._data=new l.init();this._nDataBytes=0;},_append:function _append(n){if(typeof n==\"string\"){n=c.parse(n);}this._data.concat(n);this._nDataBytes+=n.sigBytes;},_process:function _process(w){var q=this._data;var x=q.words;var n=q.sigBytes;var t=this.blockSize;var v=t*4;var u=n/v;if(w){u=e.ceil(u);}else{u=e.max((u|0)-this._minBufferSize,0);}var s=u*t;var r=e.min(s*4,n);if(s){for(var p=0;p<s;p+=t){this._doProcessBlock(x,p);}var o=x.splice(0,s);q.sigBytes-=r;}return new l.init(o,r);},clone:function clone(){var n=j.clone.call(this);n._data=this._data.clone();return n;},_minBufferSize:0});var f=b.Hasher=i.extend({cfg:j.extend(),init:function init(n){this.cfg=this.cfg.extend(n);this.reset();},reset:function reset(){i.reset.call(this);this._doReset();},update:function update(n){this._append(n);this._process();return this;},finalize:function finalize(n){if(n){this._append(n);}var o=this._doFinalize();return o;},blockSize:512/32,_createHelper:function _createHelper(n){return function(p,o){return new n.init(o).finalize(p);};},_createHmacHelper:function _createHmacHelper(n){return function(p,o){return new k.HMAC.init(n,o).finalize(p);};}});var k=a.algo={};return a;}(Math);/*\nCryptoJS v3.1.2 x64-core-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(g){var a=CryptoJS,f=a.lib,e=f.Base,h=f.WordArray,a=a.x64={};a.Word=e.extend({init:function init(b,c){this.high=b;this.low=c;}});a.WordArray=e.extend({init:function init(b,c){b=this.words=b||[];this.sigBytes=c!=g?c:8*b.length;},toX32:function toX32(){for(var b=this.words,c=b.length,a=[],d=0;d<c;d++){var e=b[d];a.push(e.high);a.push(e.low);}return h.create(a,this.sigBytes);},clone:function clone(){for(var b=e.clone.call(this),c=b.words=this.words.slice(0),a=c.length,d=0;d<a;d++){c[d]=c[d].clone();}return b;}});})();/*\nCryptoJS v3.1.2 hmac-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var c=CryptoJS,k=c.enc.Utf8;c.algo.HMAC=c.lib.Base.extend({init:function init(a,b){a=this._hasher=new a.init();\"string\"==typeof b&&(b=k.parse(b));var c=a.blockSize,e=4*c;b.sigBytes>e&&(b=a.finalize(b));b.clamp();for(var f=this._oKey=b.clone(),g=this._iKey=b.clone(),h=f.words,j=g.words,d=0;d<c;d++){h[d]^=1549556828,j[d]^=909522486;}f.sigBytes=g.sigBytes=e;this.reset();},reset:function reset(){var a=this._hasher;a.reset();a.update(this._iKey);},update:function update(a){this._hasher.update(a);return this;},finalize:function finalize(a){var b=this._hasher;a=b.finalize(a);b.reset();return b.finalize(this._oKey.clone().concat(a));}});})();/*\nCryptoJS v3.1.2 sha256-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(k){for(var g=CryptoJS,h=g.lib,v=h.WordArray,j=h.Hasher,h=g.algo,s=[],t=[],u=function u(q){return 4294967296*(q-(q|0))|0;},l=2,b=0;64>b;){var d;a:{d=l;for(var w=k.sqrt(d),r=2;r<=w;r++){if(!(d%r)){d=!1;break a;}}d=!0;}d&&(8>b&&(s[b]=u(k.pow(l,0.5))),t[b]=u(k.pow(l,1/3)),b++);l++;}var n=[],h=h.SHA256=j.extend({_doReset:function _doReset(){this._hash=new v.init(s.slice(0));},_doProcessBlock:function _doProcessBlock(q,h){for(var a=this._hash.words,c=a[0],d=a[1],b=a[2],k=a[3],f=a[4],g=a[5],j=a[6],l=a[7],e=0;64>e;e++){if(16>e)n[e]=q[h+e]|0;else{var m=n[e-15],p=n[e-2];n[e]=((m<<25|m>>>7)^(m<<14|m>>>18)^m>>>3)+n[e-7]+((p<<15|p>>>17)^(p<<13|p>>>19)^p>>>10)+n[e-16];}m=l+((f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25))+(f&g^~f&j)+t[e]+n[e];p=((c<<30|c>>>2)^(c<<19|c>>>13)^(c<<10|c>>>22))+(c&d^c&b^d&b);l=j;j=g;g=f;f=k+m|0;k=b;b=d;d=c;c=m+p|0;}a[0]=a[0]+c|0;a[1]=a[1]+d|0;a[2]=a[2]+b|0;a[3]=a[3]+k|0;a[4]=a[4]+f|0;a[5]=a[5]+g|0;a[6]=a[6]+j|0;a[7]=a[7]+l|0;},_doFinalize:function _doFinalize(){var d=this._data,b=d.words,a=8*this._nDataBytes,c=8*d.sigBytes;b[c>>>5]|=128<<24-c%32;b[(c+64>>>9<<4)+14]=k.floor(a/4294967296);b[(c+64>>>9<<4)+15]=a;d.sigBytes=4*b.length;this._process();return this._hash;},clone:function clone(){var b=j.clone.call(this);b._hash=this._hash.clone();return b;}});g.SHA256=j._createHelper(h);g.HmacSHA256=j._createHmacHelper(h);})(Math);/*\nCryptoJS v3.1.2 sha224-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var b=CryptoJS,d=b.lib.WordArray,a=b.algo,c=a.SHA256,a=a.SHA224=c.extend({_doReset:function _doReset(){this._hash=new d.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]);},_doFinalize:function _doFinalize(){var a=c._doFinalize.call(this);a.sigBytes-=4;return a;}});b.SHA224=c._createHelper(a);b.HmacSHA224=c._createHmacHelper(a);})();/*\nCryptoJS v3.1.2 sha512-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){function a(){return d.create.apply(d,arguments);}for(var n=CryptoJS,r=n.lib.Hasher,e=n.x64,d=e.Word,T=e.WordArray,e=n.algo,ea=[a(1116352408,3609767458),a(1899447441,602891725),a(3049323471,3964484399),a(3921009573,2173295548),a(961987163,4081628472),a(1508970993,3053834265),a(2453635748,2937671579),a(2870763221,3664609560),a(3624381080,2734883394),a(310598401,1164996542),a(607225278,1323610764),a(1426881987,3590304994),a(1925078388,4068182383),a(2162078206,991336113),a(2614888103,633803317),a(3248222580,3479774868),a(3835390401,2666613458),a(4022224774,944711139),a(264347078,2341262773),a(604807628,2007800933),a(770255983,1495990901),a(1249150122,1856431235),a(1555081692,3175218132),a(1996064986,2198950837),a(2554220882,3999719339),a(2821834349,766784016),a(2952996808,2566594879),a(3210313671,3203337956),a(3336571891,1034457026),a(3584528711,2466948901),a(113926993,3758326383),a(338241895,168717936),a(666307205,1188179964),a(773529912,1546045734),a(1294757372,1522805485),a(1396182291,2643833823),a(1695183700,2343527390),a(1986661051,1014477480),a(2177026350,1206759142),a(2456956037,344077627),a(2730485921,1290863460),a(2820302411,3158454273),a(3259730800,3505952657),a(3345764771,106217008),a(3516065817,3606008344),a(3600352804,1432725776),a(4094571909,1467031594),a(275423344,851169720),a(430227734,3100823752),a(506948616,1363258195),a(659060556,3750685593),a(883997877,3785050280),a(958139571,3318307427),a(1322822218,3812723403),a(1537002063,2003034995),a(1747873779,3602036899),a(1955562222,1575990012),a(2024104815,1125592928),a(2227730452,2716904306),a(2361852424,442776044),a(2428436474,593698344),a(2756734187,3733110249),a(3204031479,2999351573),a(3329325298,3815920427),a(3391569614,3928383900),a(3515267271,566280711),a(3940187606,3454069534),a(4118630271,4000239992),a(116418474,1914138554),a(174292421,2731055270),a(289380356,3203993006),a(460393269,320620315),a(685471733,587496836),a(852142971,1086792851),a(1017036298,365543100),a(1126000580,2618297676),a(1288033470,3409855158),a(1501505948,4234509866),a(1607167915,987167468),a(1816402316,1246189591)],v=[],w=0;80>w;w++){v[w]=a();}e=e.SHA512=r.extend({_doReset:function _doReset(){this._hash=new T.init([new d.init(1779033703,4089235720),new d.init(3144134277,2227873595),new d.init(1013904242,4271175723),new d.init(2773480762,1595750129),new d.init(1359893119,2917565137),new d.init(2600822924,725511199),new d.init(528734635,4215389547),new d.init(1541459225,327033209)]);},_doProcessBlock:function _doProcessBlock(a,d){for(var f=this._hash.words,F=f[0],e=f[1],n=f[2],r=f[3],G=f[4],H=f[5],I=f[6],f=f[7],w=F.high,J=F.low,X=e.high,K=e.low,Y=n.high,L=n.low,Z=r.high,M=r.low,$=G.high,N=G.low,aa=H.high,O=H.low,ba=I.high,P=I.low,ca=f.high,Q=f.low,k=w,g=J,z=X,x=K,A=Y,y=L,U=Z,B=M,l=$,h=N,R=aa,C=O,S=ba,D=P,V=ca,E=Q,m=0;80>m;m++){var s=v[m];if(16>m)var j=s.high=a[d+2*m]|0,b=s.low=a[d+2*m+1]|0;else{var j=v[m-15],b=j.high,p=j.low,j=(b>>>1|p<<31)^(b>>>8|p<<24)^b>>>7,p=(p>>>1|b<<31)^(p>>>8|b<<24)^(p>>>7|b<<25),u=v[m-2],b=u.high,c=u.low,u=(b>>>19|c<<13)^(b<<3|c>>>29)^b>>>6,c=(c>>>19|b<<13)^(c<<3|b>>>29)^(c>>>6|b<<26),b=v[m-7],W=b.high,t=v[m-16],q=t.high,t=t.low,b=p+b.low,j=j+W+(b>>>0<p>>>0?1:0),b=b+c,j=j+u+(b>>>0<c>>>0?1:0),b=b+t,j=j+q+(b>>>0<t>>>0?1:0);s.high=j;s.low=b;}var W=l&R^~l&S,t=h&C^~h&D,s=k&z^k&A^z&A,T=g&x^g&y^x&y,p=(k>>>28|g<<4)^(k<<30|g>>>2)^(k<<25|g>>>7),u=(g>>>28|k<<4)^(g<<30|k>>>2)^(g<<25|k>>>7),c=ea[m],fa=c.high,da=c.low,c=E+((h>>>14|l<<18)^(h>>>18|l<<14)^(h<<23|l>>>9)),q=V+((l>>>14|h<<18)^(l>>>18|h<<14)^(l<<23|h>>>9))+(c>>>0<E>>>0?1:0),c=c+t,q=q+W+(c>>>0<t>>>0?1:0),c=c+da,q=q+fa+(c>>>0<da>>>0?1:0),c=c+b,q=q+j+(c>>>0<b>>>0?1:0),b=u+T,s=p+s+(b>>>0<u>>>0?1:0),V=S,E=D,S=R,D=C,R=l,C=h,h=B+c|0,l=U+q+(h>>>0<B>>>0?1:0)|0,U=A,B=y,A=z,y=x,z=k,x=g,g=c+b|0,k=q+s+(g>>>0<c>>>0?1:0)|0;}J=F.low=J+g;F.high=w+k+(J>>>0<g>>>0?1:0);K=e.low=K+x;e.high=X+z+(K>>>0<x>>>0?1:0);L=n.low=L+y;n.high=Y+A+(L>>>0<y>>>0?1:0);M=r.low=M+B;r.high=Z+U+(M>>>0<B>>>0?1:0);N=G.low=N+h;G.high=$+l+(N>>>0<h>>>0?1:0);O=H.low=O+C;H.high=aa+R+(O>>>0<C>>>0?1:0);P=I.low=P+D;I.high=ba+S+(P>>>0<D>>>0?1:0);Q=f.low=Q+E;f.high=ca+V+(Q>>>0<E>>>0?1:0);},_doFinalize:function _doFinalize(){var a=this._data,d=a.words,f=8*this._nDataBytes,e=8*a.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+128>>>10<<5)+30]=Math.floor(f/4294967296);d[(e+128>>>10<<5)+31]=f;a.sigBytes=4*d.length;this._process();return this._hash.toX32();},clone:function clone(){var a=r.clone.call(this);a._hash=this._hash.clone();return a;},blockSize:32});n.SHA512=r._createHelper(e);n.HmacSHA512=r._createHmacHelper(e);})();/*\nCryptoJS v3.1.2 sha384-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var c=CryptoJS,a=c.x64,b=a.Word,e=a.WordArray,a=c.algo,d=a.SHA512,a=a.SHA384=d.extend({_doReset:function _doReset(){this._hash=new e.init([new b.init(3418070365,3238371032),new b.init(1654270250,914150663),new b.init(2438529370,812702999),new b.init(355462360,4144912697),new b.init(1731405415,4290775857),new b.init(2394180231,1750603025),new b.init(3675008525,1694076839),new b.init(1203062813,3204075428)]);},_doFinalize:function _doFinalize(){var a=d._doFinalize.call(this);a.sigBytes-=16;return a;}});c.SHA384=d._createHelper(a);c.HmacSHA384=d._createHmacHelper(a);})();/*\nCryptoJS v3.1.2 md5-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(E){function h(a,f,g,j,p,h,k){a=a+(f&g|~f&j)+p+k;return(a<<h|a>>>32-h)+f;}function k(a,f,g,j,p,h,k){a=a+(f&j|g&~j)+p+k;return(a<<h|a>>>32-h)+f;}function l(a,f,g,j,h,k,l){a=a+(f^g^j)+h+l;return(a<<k|a>>>32-k)+f;}function n(a,f,g,j,h,k,l){a=a+(g^(f|~j))+h+l;return(a<<k|a>>>32-k)+f;}for(var r=CryptoJS,q=r.lib,F=q.WordArray,s=q.Hasher,q=r.algo,a=[],t=0;64>t;t++){a[t]=4294967296*E.abs(E.sin(t+1))|0;}q=q.MD5=s.extend({_doReset:function _doReset(){this._hash=new F.init([1732584193,4023233417,2562383102,271733878]);},_doProcessBlock:function _doProcessBlock(m,f){for(var g=0;16>g;g++){var j=f+g,p=m[j];m[j]=(p<<8|p>>>24)&16711935|(p<<24|p>>>8)&4278255360;}var g=this._hash.words,j=m[f+0],p=m[f+1],q=m[f+2],r=m[f+3],s=m[f+4],t=m[f+5],u=m[f+6],v=m[f+7],w=m[f+8],x=m[f+9],y=m[f+10],z=m[f+11],A=m[f+12],B=m[f+13],C=m[f+14],D=m[f+15],b=g[0],c=g[1],d=g[2],e=g[3],b=h(b,c,d,e,j,7,a[0]),e=h(e,b,c,d,p,12,a[1]),d=h(d,e,b,c,q,17,a[2]),c=h(c,d,e,b,r,22,a[3]),b=h(b,c,d,e,s,7,a[4]),e=h(e,b,c,d,t,12,a[5]),d=h(d,e,b,c,u,17,a[6]),c=h(c,d,e,b,v,22,a[7]),b=h(b,c,d,e,w,7,a[8]),e=h(e,b,c,d,x,12,a[9]),d=h(d,e,b,c,y,17,a[10]),c=h(c,d,e,b,z,22,a[11]),b=h(b,c,d,e,A,7,a[12]),e=h(e,b,c,d,B,12,a[13]),d=h(d,e,b,c,C,17,a[14]),c=h(c,d,e,b,D,22,a[15]),b=k(b,c,d,e,p,5,a[16]),e=k(e,b,c,d,u,9,a[17]),d=k(d,e,b,c,z,14,a[18]),c=k(c,d,e,b,j,20,a[19]),b=k(b,c,d,e,t,5,a[20]),e=k(e,b,c,d,y,9,a[21]),d=k(d,e,b,c,D,14,a[22]),c=k(c,d,e,b,s,20,a[23]),b=k(b,c,d,e,x,5,a[24]),e=k(e,b,c,d,C,9,a[25]),d=k(d,e,b,c,r,14,a[26]),c=k(c,d,e,b,w,20,a[27]),b=k(b,c,d,e,B,5,a[28]),e=k(e,b,c,d,q,9,a[29]),d=k(d,e,b,c,v,14,a[30]),c=k(c,d,e,b,A,20,a[31]),b=l(b,c,d,e,t,4,a[32]),e=l(e,b,c,d,w,11,a[33]),d=l(d,e,b,c,z,16,a[34]),c=l(c,d,e,b,C,23,a[35]),b=l(b,c,d,e,p,4,a[36]),e=l(e,b,c,d,s,11,a[37]),d=l(d,e,b,c,v,16,a[38]),c=l(c,d,e,b,y,23,a[39]),b=l(b,c,d,e,B,4,a[40]),e=l(e,b,c,d,j,11,a[41]),d=l(d,e,b,c,r,16,a[42]),c=l(c,d,e,b,u,23,a[43]),b=l(b,c,d,e,x,4,a[44]),e=l(e,b,c,d,A,11,a[45]),d=l(d,e,b,c,D,16,a[46]),c=l(c,d,e,b,q,23,a[47]),b=n(b,c,d,e,j,6,a[48]),e=n(e,b,c,d,v,10,a[49]),d=n(d,e,b,c,C,15,a[50]),c=n(c,d,e,b,t,21,a[51]),b=n(b,c,d,e,A,6,a[52]),e=n(e,b,c,d,r,10,a[53]),d=n(d,e,b,c,y,15,a[54]),c=n(c,d,e,b,p,21,a[55]),b=n(b,c,d,e,w,6,a[56]),e=n(e,b,c,d,D,10,a[57]),d=n(d,e,b,c,u,15,a[58]),c=n(c,d,e,b,B,21,a[59]),b=n(b,c,d,e,s,6,a[60]),e=n(e,b,c,d,z,10,a[61]),d=n(d,e,b,c,q,15,a[62]),c=n(c,d,e,b,x,21,a[63]);g[0]=g[0]+b|0;g[1]=g[1]+c|0;g[2]=g[2]+d|0;g[3]=g[3]+e|0;},_doFinalize:function _doFinalize(){var a=this._data,f=a.words,g=8*this._nDataBytes,j=8*a.sigBytes;f[j>>>5]|=128<<24-j%32;var h=E.floor(g/4294967296);f[(j+64>>>9<<4)+15]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;f[(j+64>>>9<<4)+14]=(g<<8|g>>>24)&16711935|(g<<24|g>>>8)&4278255360;a.sigBytes=4*(f.length+1);this._process();a=this._hash;f=a.words;for(g=0;4>g;g++){j=f[g],f[g]=(j<<8|j>>>24)&16711935|(j<<24|j>>>8)&4278255360;}return a;},clone:function clone(){var a=s.clone.call(this);a._hash=this._hash.clone();return a;}});r.MD5=s._createHelper(q);r.HmacMD5=s._createHmacHelper(q);})(Math);/*\nCryptoJS v3.1.2 enc-base64-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var h=CryptoJS,j=h.lib.WordArray;h.enc.Base64={stringify:function stringify(b){var e=b.words,f=b.sigBytes,c=this._map;b.clamp();b=[];for(var a=0;a<f;a+=3){for(var d=(e[a>>>2]>>>24-8*(a%4)&255)<<16|(e[a+1>>>2]>>>24-8*((a+1)%4)&255)<<8|e[a+2>>>2]>>>24-8*((a+2)%4)&255,g=0;4>g&&a+0.75*g<f;g++){b.push(c.charAt(d>>>6*(3-g)&63));}}if(e=c.charAt(64))for(;b.length%4;){b.push(e);}return b.join(\"\");},parse:function parse(b){var e=b.length,f=this._map,c=f.charAt(64);c&&(c=b.indexOf(c),-1!=c&&(e=c));for(var c=[],a=0,d=0;d<e;d++){if(d%4){var g=f.indexOf(b.charAt(d-1))<<2*(d%4),h=f.indexOf(b.charAt(d))>>>6-2*(d%4);c[a>>>2]|=(g|h)<<24-8*(a%4);a++;}}return j.create(c,a);},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"};})();/*\nCryptoJS v3.1.2 cipher-core-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/CryptoJS.lib.Cipher||function(u){var g=CryptoJS,f=g.lib,k=f.Base,l=f.WordArray,q=f.BufferedBlockAlgorithm,r=g.enc.Base64,v=g.algo.EvpKDF,n=f.Cipher=q.extend({cfg:k.extend(),createEncryptor:function createEncryptor(a,b){return this.create(this._ENC_XFORM_MODE,a,b);},createDecryptor:function createDecryptor(a,b){return this.create(this._DEC_XFORM_MODE,a,b);},init:function init(a,b,c){this.cfg=this.cfg.extend(c);this._xformMode=a;this._key=b;this.reset();},reset:function reset(){q.reset.call(this);this._doReset();},process:function process(a){this._append(a);return this._process();},finalize:function finalize(a){a&&this._append(a);return this._doFinalize();},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function _createHelper(a){return{encrypt:function encrypt(b,c,d){return(\"string\"==typeof c?s:j).encrypt(a,b,c,d);},decrypt:function decrypt(b,c,d){return(\"string\"==typeof c?s:j).decrypt(a,b,c,d);}};}});f.StreamCipher=n.extend({_doFinalize:function _doFinalize(){return this._process(!0);},blockSize:1});var m=g.mode={},t=function t(a,b,c){var d=this._iv;d?this._iv=u:d=this._prevBlock;for(var e=0;e<c;e++){a[b+e]^=d[e];}},h=(f.BlockCipherMode=k.extend({createEncryptor:function createEncryptor(a,b){return this.Encryptor.create(a,b);},createDecryptor:function createDecryptor(a,b){return this.Decryptor.create(a,b);},init:function init(a,b){this._cipher=a;this._iv=b;}})).extend();h.Encryptor=h.extend({processBlock:function processBlock(a,b){var c=this._cipher,d=c.blockSize;t.call(this,a,b,d);c.encryptBlock(a,b);this._prevBlock=a.slice(b,b+d);}});h.Decryptor=h.extend({processBlock:function processBlock(a,b){var c=this._cipher,d=c.blockSize,e=a.slice(b,b+d);c.decryptBlock(a,b);t.call(this,a,b,d);this._prevBlock=e;}});m=m.CBC=h;h=(g.pad={}).Pkcs7={pad:function pad(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,e=[],f=0;f<c;f+=4){e.push(d);}c=l.create(e,c);a.concat(c);},unpad:function unpad(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255;}};f.BlockCipher=n.extend({cfg:n.cfg.extend({mode:m,padding:h}),reset:function reset(){n.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,this,b&&b.words);},_doProcessBlock:function _doProcessBlock(a,b){this._mode.processBlock(a,b);},_doFinalize:function _doFinalize(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0);}else b=this._process(!0),a.unpad(b);return b;},blockSize:4});var p=f.CipherParams=k.extend({init:function init(a){this.mixIn(a);},toString:function toString(a){return(a||this.formatter).stringify(this);}}),m=(g.format={}).OpenSSL={stringify:function stringify(a){var b=a.ciphertext;a=a.salt;return(a?l.create([1398893684,1701076831]).concat(a).concat(b):b).toString(r);},parse:function parse(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=l.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16;}return p.create({ciphertext:a,salt:c});}},j=f.SerializableCipher=k.extend({cfg:k.extend({format:m}),encrypt:function encrypt(a,b,c,d){d=this.cfg.extend(d);var e=a.createEncryptor(c,d);b=e.finalize(b);e=e.cfg;return p.create({ciphertext:b,key:c,iv:e.iv,algorithm:a,mode:e.mode,padding:e.padding,blockSize:a.blockSize,formatter:d.format});},decrypt:function decrypt(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext);},_parse:function _parse(a,b){return\"string\"==typeof a?b.parse(a,this):a;}}),g=(g.kdf={}).OpenSSL={execute:function execute(a,b,c,d){d||(d=l.random(8));a=v.create({keySize:b+c}).compute(a,d);c=l.create(a.words.slice(b),4*c);a.sigBytes=4*b;return p.create({key:a,iv:c,salt:d});}},s=f.PasswordBasedCipher=j.extend({cfg:j.cfg.extend({kdf:g}),encrypt:function encrypt(a,b,c,d){d=this.cfg.extend(d);c=d.kdf.execute(c,a.keySize,a.ivSize);d.iv=c.iv;a=j.encrypt.call(this,a,b,c.key,d);a.mixIn(c);return a;},decrypt:function decrypt(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);c=d.kdf.execute(c,a.keySize,a.ivSize,b.salt);d.iv=c.iv;return j.decrypt.call(this,a,b,c.key,d);}});}();/*\nCryptoJS v3.1.2 aes-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){for(var q=CryptoJS,x=q.lib.BlockCipher,r=q.algo,j=[],y=[],z=[],A=[],B=[],C=[],s=[],u=[],v=[],w=[],g=[],k=0;256>k;k++){g[k]=128>k?k<<1:k<<1^283;}for(var n=0,l=0,k=0;256>k;k++){var f=l^l<<1^l<<2^l<<3^l<<4,f=f>>>8^f&255^99;j[n]=f;y[f]=n;var t=g[n],D=g[t],E=g[D],b=257*g[f]^16843008*f;z[n]=b<<24|b>>>8;A[n]=b<<16|b>>>16;B[n]=b<<8|b>>>24;C[n]=b;b=16843009*E^65537*D^257*t^16843008*n;s[f]=b<<24|b>>>8;u[f]=b<<16|b>>>16;v[f]=b<<8|b>>>24;w[f]=b;n?(n=t^g[g[g[E^t]]],l^=g[g[l]]):n=l=1;}var F=[0,1,2,4,8,16,32,64,128,27,54],r=r.AES=x.extend({_doReset:function _doReset(){for(var c=this._key,e=c.words,a=c.sigBytes/4,c=4*((this._nRounds=a+6)+1),b=this._keySchedule=[],h=0;h<c;h++){if(h<a)b[h]=e[h];else{var d=b[h-1];h%a?6<a&&4==h%a&&(d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255]):(d=d<<8|d>>>24,d=j[d>>>24]<<24|j[d>>>16&255]<<16|j[d>>>8&255]<<8|j[d&255],d^=F[h/a|0]<<24);b[h]=b[h-a]^d;}}e=this._invKeySchedule=[];for(a=0;a<c;a++){h=c-a,d=a%4?b[h]:b[h-4],e[a]=4>a||4>=h?d:s[j[d>>>24]]^u[j[d>>>16&255]]^v[j[d>>>8&255]]^w[j[d&255]];}},encryptBlock:function encryptBlock(c,e){this._doCryptBlock(c,e,this._keySchedule,z,A,B,C,j);},decryptBlock:function decryptBlock(c,e){var a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;this._doCryptBlock(c,e,this._invKeySchedule,s,u,v,w,y);a=c[e+1];c[e+1]=c[e+3];c[e+3]=a;},_doCryptBlock:function _doCryptBlock(c,e,a,b,h,d,j,m){for(var n=this._nRounds,f=c[e]^a[0],g=c[e+1]^a[1],k=c[e+2]^a[2],p=c[e+3]^a[3],l=4,t=1;t<n;t++){var q=b[f>>>24]^h[g>>>16&255]^d[k>>>8&255]^j[p&255]^a[l++],r=b[g>>>24]^h[k>>>16&255]^d[p>>>8&255]^j[f&255]^a[l++],s=b[k>>>24]^h[p>>>16&255]^d[f>>>8&255]^j[g&255]^a[l++],p=b[p>>>24]^h[f>>>16&255]^d[g>>>8&255]^j[k&255]^a[l++],f=q,g=r,k=s;}q=(m[f>>>24]<<24|m[g>>>16&255]<<16|m[k>>>8&255]<<8|m[p&255])^a[l++];r=(m[g>>>24]<<24|m[k>>>16&255]<<16|m[p>>>8&255]<<8|m[f&255])^a[l++];s=(m[k>>>24]<<24|m[p>>>16&255]<<16|m[f>>>8&255]<<8|m[g&255])^a[l++];p=(m[p>>>24]<<24|m[f>>>16&255]<<16|m[g>>>8&255]<<8|m[k&255])^a[l++];c[e]=q;c[e+1]=r;c[e+2]=s;c[e+3]=p;},keySize:8});q.AES=x._createHelper(r);})();/*\nCryptoJS v3.1.2 tripledes-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){function j(b,c){var a=(this._lBlock>>>b^this._rBlock)&c;this._rBlock^=a;this._lBlock^=a<<b;}function l(b,c){var a=(this._rBlock>>>b^this._lBlock)&c;this._lBlock^=a;this._rBlock^=a<<b;}var h=CryptoJS,e=h.lib,n=e.WordArray,e=e.BlockCipher,g=h.algo,q=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],p=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],r=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],s=[{\"0\":8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{\"0\":1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{\"0\":260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{\"0\":2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{\"0\":128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{\"0\":268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{\"0\":1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{\"0\":134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],t=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],m=g.DES=e.extend({_doReset:function _doReset(){for(var b=this._key.words,c=[],a=0;56>a;a++){var f=q[a]-1;c[a]=b[f>>>5]>>>31-f%32&1;}b=this._subKeys=[];for(f=0;16>f;f++){for(var d=b[f]=[],e=r[f],a=0;24>a;a++){d[a/6|0]|=c[(p[a]-1+e)%28]<<31-a%6,d[4+(a/6|0)]|=c[28+(p[a+24]-1+e)%28]<<31-a%6;}d[0]=d[0]<<1|d[0]>>>31;for(a=1;7>a;a++){d[a]>>>=4*(a-1)+3;}d[7]=d[7]<<5|d[7]>>>27;}c=this._invSubKeys=[];for(a=0;16>a;a++){c[a]=b[15-a];}},encryptBlock:function encryptBlock(b,c){this._doCryptBlock(b,c,this._subKeys);},decryptBlock:function decryptBlock(b,c){this._doCryptBlock(b,c,this._invSubKeys);},_doCryptBlock:function _doCryptBlock(b,c,a){this._lBlock=b[c];this._rBlock=b[c+1];j.call(this,4,252645135);j.call(this,16,65535);l.call(this,2,858993459);l.call(this,8,16711935);j.call(this,1,1431655765);for(var f=0;16>f;f++){for(var d=a[f],e=this._lBlock,h=this._rBlock,g=0,k=0;8>k;k++){g|=s[k][((h^d[k])&t[k])>>>0];}this._lBlock=h;this._rBlock=e^g;}a=this._lBlock;this._lBlock=this._rBlock;this._rBlock=a;j.call(this,1,1431655765);l.call(this,8,16711935);l.call(this,2,858993459);j.call(this,16,65535);j.call(this,4,252645135);b[c]=this._lBlock;b[c+1]=this._rBlock;},keySize:2,ivSize:2,blockSize:2});h.DES=e._createHelper(m);g=g.TripleDES=e.extend({_doReset:function _doReset(){var b=this._key.words;this._des1=m.createEncryptor(n.create(b.slice(0,2)));this._des2=m.createEncryptor(n.create(b.slice(2,4)));this._des3=m.createEncryptor(n.create(b.slice(4,6)));},encryptBlock:function encryptBlock(b,c){this._des1.encryptBlock(b,c);this._des2.decryptBlock(b,c);this._des3.encryptBlock(b,c);},decryptBlock:function decryptBlock(b,c){this._des3.decryptBlock(b,c);this._des2.encryptBlock(b,c);this._des1.decryptBlock(b,c);},keySize:6,ivSize:2,blockSize:2});h.TripleDES=e._createHelper(g);})();/*\nCryptoJS v3.1.2 sha1-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var k=CryptoJS,b=k.lib,m=b.WordArray,l=b.Hasher,d=[],b=k.algo.SHA1=l.extend({_doReset:function _doReset(){this._hash=new m.init([1732584193,4023233417,2562383102,271733878,3285377520]);},_doProcessBlock:function _doProcessBlock(n,p){for(var a=this._hash.words,e=a[0],f=a[1],h=a[2],j=a[3],b=a[4],c=0;80>c;c++){if(16>c)d[c]=n[p+c]|0;else{var g=d[c-3]^d[c-8]^d[c-14]^d[c-16];d[c]=g<<1|g>>>31;}g=(e<<5|e>>>27)+b+d[c];g=20>c?g+((f&h|~f&j)+1518500249):40>c?g+((f^h^j)+1859775393):60>c?g+((f&h|f&j|h&j)-1894007588):g+((f^h^j)-899497514);b=j;j=h;h=f<<30|f>>>2;f=e;e=g;}a[0]=a[0]+e|0;a[1]=a[1]+f|0;a[2]=a[2]+h|0;a[3]=a[3]+j|0;a[4]=a[4]+b|0;},_doFinalize:function _doFinalize(){var b=this._data,d=b.words,a=8*this._nDataBytes,e=8*b.sigBytes;d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=Math.floor(a/4294967296);d[(e+64>>>9<<4)+15]=a;b.sigBytes=4*d.length;this._process();return this._hash;},clone:function clone(){var b=l.clone.call(this);b._hash=this._hash.clone();return b;}});k.SHA1=l._createHelper(b);k.HmacSHA1=l._createHmacHelper(b);})();/*\nCryptoJS v3.1.2 ripemd160-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*//*\n\n(c) 2012 by Cedric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/(function(){var q=CryptoJS,d=q.lib,n=d.WordArray,p=d.Hasher,d=q.algo,x=n.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),y=n.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),z=n.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),A=n.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),B=n.create([0,1518500249,1859775393,2400959708,2840853838]),C=n.create([1352829926,1548603684,1836072691,2053994217,0]),d=d.RIPEMD160=p.extend({_doReset:function _doReset(){this._hash=n.create([1732584193,4023233417,2562383102,271733878,3285377520]);},_doProcessBlock:function _doProcessBlock(e,v){for(var b=0;16>b;b++){var c=v+b,f=e[c];e[c]=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360;}var c=this._hash.words,f=B.words,d=C.words,n=x.words,q=y.words,p=z.words,w=A.words,t,g,h,j,r,u,k,l,m,s;u=t=c[0];k=g=c[1];l=h=c[2];m=j=c[3];s=r=c[4];for(var a,b=0;80>b;b+=1){a=t+e[v+n[b]]|0,a=16>b?a+((g^h^j)+f[0]):32>b?a+((g&h|~g&j)+f[1]):48>b?a+(((g|~h)^j)+f[2]):64>b?a+((g&j|h&~j)+f[3]):a+((g^(h|~j))+f[4]),a|=0,a=a<<p[b]|a>>>32-p[b],a=a+r|0,t=r,r=j,j=h<<10|h>>>22,h=g,g=a,a=u+e[v+q[b]]|0,a=16>b?a+((k^(l|~m))+d[0]):32>b?a+((k&m|l&~m)+d[1]):48>b?a+(((k|~l)^m)+d[2]):64>b?a+((k&l|~k&m)+d[3]):a+((k^l^m)+d[4]),a|=0,a=a<<w[b]|a>>>32-w[b],a=a+s|0,u=s,s=m,m=l<<10|l>>>22,l=k,k=a;}a=c[1]+h+m|0;c[1]=c[2]+j+s|0;c[2]=c[3]+r+u|0;c[3]=c[4]+t+k|0;c[4]=c[0]+g+l|0;c[0]=a;},_doFinalize:function _doFinalize(){var e=this._data,d=e.words,b=8*this._nDataBytes,c=8*e.sigBytes;d[c>>>5]|=128<<24-c%32;d[(c+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;e.sigBytes=4*(d.length+1);this._process();e=this._hash;d=e.words;for(b=0;5>b;b++){c=d[b],d[b]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;}return e;},clone:function clone(){var d=p.clone.call(this);d._hash=this._hash.clone();return d;}});q.RIPEMD160=p._createHelper(d);q.HmacRIPEMD160=p._createHmacHelper(d);})(Math);/*\nCryptoJS v3.1.2 pbkdf2-min.js\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/(function(){var b=CryptoJS,a=b.lib,d=a.Base,m=a.WordArray,a=b.algo,q=a.HMAC,l=a.PBKDF2=d.extend({cfg:d.extend({keySize:4,hasher:a.SHA1,iterations:1}),init:function init(a){this.cfg=this.cfg.extend(a);},compute:function compute(a,b){for(var c=this.cfg,f=q.create(c.hasher,a),g=m.create(),d=m.create([1]),l=g.words,r=d.words,n=c.keySize,c=c.iterations;l.length<n;){var h=f.update(b).finalize(d);f.reset();for(var j=h.words,s=j.length,k=h,p=1;p<c;p++){k=f.finalize(k);f.reset();for(var t=k.words,e=0;e<s;e++){j[e]^=t[e];}}g.concat(h);r[0]++;}g.sigBytes=4*n;return g;}});b.PBKDF2=function(a,b,c){return l.create(c).compute(a,b);};})();/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */var b64map=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var b64pad=\"=\";function hex2b64(d){var b;var e;var a=\"\";for(b=0;b+3<=d.length;b+=3){e=parseInt(d.substring(b,b+3),16);a+=b64map.charAt(e>>6)+b64map.charAt(e&63);}if(b+1==d.length){e=parseInt(d.substring(b,b+1),16);a+=b64map.charAt(e<<2);}else{if(b+2==d.length){e=parseInt(d.substring(b,b+2),16);a+=b64map.charAt(e>>2)+b64map.charAt((e&3)<<4);}}if(b64pad){while((a.length&3)>0){a+=b64pad;}}return a;}function b64tohex(f){var d=\"\";var e;var b=0;var c;var a;for(e=0;e<f.length;++e){if(f.charAt(e)==b64pad){break;}a=b64map.indexOf(f.charAt(e));if(a<0){continue;}if(b==0){d+=int2char(a>>2);c=a&3;b=1;}else{if(b==1){d+=int2char(c<<2|a>>4);c=a&15;b=2;}else{if(b==2){d+=int2char(c);d+=int2char(a>>2);c=a&3;b=3;}else{d+=int2char(c<<2|a>>4);d+=int2char(a&15);b=0;}}}}if(b==1){d+=int2char(c<<2);}return d;}function b64toBA(e){var d=b64tohex(e);var c;var b=new Array();for(c=0;2*c<d.length;++c){b[c]=parseInt(d.substring(2*c,2*c+2),16);}return b;};/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */var dbits;var canary=244837814094590;var j_lm=(canary&16777215)==15715070;function BigInteger(e,d,f){if(e!=null){if(\"number\"==typeof e){this.fromNumber(e,d,f);}else{if(d==null&&\"string\"!=typeof e){this.fromString(e,256);}else{this.fromString(e,d);}}}}function nbi(){return new BigInteger(null);}function am1(f,a,b,e,h,g){while(--g>=0){var d=a*this[f++]+b[e]+h;h=Math.floor(d/67108864);b[e++]=d&67108863;}return h;}function am2(f,q,r,e,o,a){var k=q&32767,p=q>>15;while(--a>=0){var d=this[f]&32767;var g=this[f++]>>15;var b=p*d+g*k;d=k*d+((b&32767)<<15)+r[e]+(o&1073741823);o=(d>>>30)+(b>>>15)+p*g+(o>>>30);r[e++]=d&1073741823;}return o;}function am3(f,q,r,e,o,a){var k=q&16383,p=q>>14;while(--a>=0){var d=this[f]&16383;var g=this[f++]>>14;var b=p*d+g*k;d=k*d+((b&16383)<<14)+r[e]+o;o=(d>>28)+(b>>14)+p*g;r[e++]=d&268435455;}return o;}if(j_lm&&navigator.appName==\"Microsoft Internet Explorer\"){BigInteger.prototype.am=am2;dbits=30;}else{if(j_lm&&navigator.appName!=\"Netscape\"){BigInteger.prototype.am=am1;dbits=26;}else{BigInteger.prototype.am=am3;dbits=28;}}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM=\"0123456789abcdefghijklmnopqrstuvwxyz\";var BI_RC=new Array();var rr,vv;rr=\"0\".charCodeAt(0);for(vv=0;vv<=9;++vv){BI_RC[rr++]=vv;}rr=\"a\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv;}rr=\"A\".charCodeAt(0);for(vv=10;vv<36;++vv){BI_RC[rr++]=vv;}function int2char(a){return BI_RM.charAt(a);}function intAt(b,a){var d=BI_RC[b.charCodeAt(a)];return d==null?-1:d;}function bnpCopyTo(b){for(var a=this.t-1;a>=0;--a){b[a]=this[a];}b.t=this.t;b.s=this.s;}function bnpFromInt(a){this.t=1;this.s=a<0?-1:0;if(a>0){this[0]=a;}else{if(a<-1){this[0]=a+this.DV;}else{this.t=0;}}}function nbv(a){var b=nbi();b.fromInt(a);return b;}function bnpFromString(h,c){var e;if(c==16){e=4;}else{if(c==8){e=3;}else{if(c==256){e=8;}else{if(c==2){e=1;}else{if(c==32){e=5;}else{if(c==4){e=2;}else{this.fromRadix(h,c);return;}}}}}}this.t=0;this.s=0;var g=h.length,d=false,f=0;while(--g>=0){var a=e==8?h[g]&255:intAt(h,g);if(a<0){if(h.charAt(g)==\"-\"){d=true;}continue;}d=false;if(f==0){this[this.t++]=a;}else{if(f+e>this.DB){this[this.t-1]|=(a&(1<<this.DB-f)-1)<<f;this[this.t++]=a>>this.DB-f;}else{this[this.t-1]|=a<<f;}}f+=e;if(f>=this.DB){f-=this.DB;}}if(e==8&&(h[0]&128)!=0){this.s=-1;if(f>0){this[this.t-1]|=(1<<this.DB-f)-1<<f;}}this.clamp();if(d){BigInteger.ZERO.subTo(this,this);}}function bnpClamp(){var a=this.s&this.DM;while(this.t>0&&this[this.t-1]==a){--this.t;}}function bnToString(c){if(this.s<0){return\"-\"+this.negate().toString(c);}var e;if(c==16){e=4;}else{if(c==8){e=3;}else{if(c==2){e=1;}else{if(c==32){e=5;}else{if(c==4){e=2;}else{return this.toRadix(c);}}}}}var g=(1<<e)-1,l,a=false,h=\"\",f=this.t;var j=this.DB-f*this.DB%e;if(f-->0){if(j<this.DB&&(l=this[f]>>j)>0){a=true;h=int2char(l);}while(f>=0){if(j<e){l=(this[f]&(1<<j)-1)<<e-j;l|=this[--f]>>(j+=this.DB-e);}else{l=this[f]>>(j-=e)&g;if(j<=0){j+=this.DB;--f;}}if(l>0){a=true;}if(a){h+=int2char(l);}}}return a?h:\"0\";}function bnNegate(){var a=nbi();BigInteger.ZERO.subTo(this,a);return a;}function bnAbs(){return this.s<0?this.negate():this;}function bnCompareTo(b){var d=this.s-b.s;if(d!=0){return d;}var c=this.t;d=c-b.t;if(d!=0){return this.s<0?-d:d;}while(--c>=0){if((d=this[c]-b[c])!=0){return d;}}return 0;}function nbits(a){var c=1,b;if((b=a>>>16)!=0){a=b;c+=16;}if((b=a>>8)!=0){a=b;c+=8;}if((b=a>>4)!=0){a=b;c+=4;}if((b=a>>2)!=0){a=b;c+=2;}if((b=a>>1)!=0){a=b;c+=1;}return c;}function bnBitLength(){if(this.t<=0){return 0;}return this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM);}function bnpDLShiftTo(c,b){var a;for(a=this.t-1;a>=0;--a){b[a+c]=this[a];}for(a=c-1;a>=0;--a){b[a]=0;}b.t=this.t+c;b.s=this.s;}function bnpDRShiftTo(c,b){for(var a=c;a<this.t;++a){b[a-c]=this[a];}b.t=Math.max(this.t-c,0);b.s=this.s;}function bnpLShiftTo(j,e){var b=j%this.DB;var a=this.DB-b;var g=(1<<a)-1;var f=Math.floor(j/this.DB),h=this.s<<b&this.DM,d;for(d=this.t-1;d>=0;--d){e[d+f+1]=this[d]>>a|h;h=(this[d]&g)<<b;}for(d=f-1;d>=0;--d){e[d]=0;}e[f]=h;e.t=this.t+f+1;e.s=this.s;e.clamp();}function bnpRShiftTo(g,d){d.s=this.s;var e=Math.floor(g/this.DB);if(e>=this.t){d.t=0;return;}var b=g%this.DB;var a=this.DB-b;var f=(1<<b)-1;d[0]=this[e]>>b;for(var c=e+1;c<this.t;++c){d[c-e-1]|=(this[c]&f)<<a;d[c-e]=this[c]>>b;}if(b>0){d[this.t-e-1]|=(this.s&f)<<a;}d.t=this.t-e;d.clamp();}function bnpSubTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]-d[e];f[e++]=g&this.DM;g>>=this.DB;}if(d.t<this.t){g-=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB;}g+=this.s;}else{g+=this.s;while(e<d.t){g-=d[e];f[e++]=g&this.DM;g>>=this.DB;}g-=d.s;}f.s=g<0?-1:0;if(g<-1){f[e++]=this.DV+g;}else{if(g>0){f[e++]=g;}}f.t=e;f.clamp();}function bnpMultiplyTo(c,e){var b=this.abs(),f=c.abs();var d=b.t;e.t=d+f.t;while(--d>=0){e[d]=0;}for(d=0;d<f.t;++d){e[d+b.t]=b.am(0,f[d],e,d,0,b.t);}e.s=0;e.clamp();if(this.s!=c.s){BigInteger.ZERO.subTo(e,e);}}function bnpSquareTo(d){var a=this.abs();var b=d.t=2*a.t;while(--b>=0){d[b]=0;}for(b=0;b<a.t-1;++b){var e=a.am(b,a[b],d,2*b,0,1);if((d[b+a.t]+=a.am(b+1,2*a[b],d,2*b+1,e,a.t-b-1))>=a.DV){d[b+a.t]-=a.DV;d[b+a.t+1]=1;}}if(d.t>0){d[d.t-1]+=a.am(b,a[b],d,2*b,0,1);}d.s=0;d.clamp();}function bnpDivRemTo(n,h,g){var w=n.abs();if(w.t<=0){return;}var k=this.abs();if(k.t<w.t){if(h!=null){h.fromInt(0);}if(g!=null){this.copyTo(g);}return;}if(g==null){g=nbi();}var d=nbi(),a=this.s,l=n.s;var v=this.DB-nbits(w[w.t-1]);if(v>0){w.lShiftTo(v,d);k.lShiftTo(v,g);}else{w.copyTo(d);k.copyTo(g);}var p=d.t;var b=d[p-1];if(b==0){return;}var o=b*(1<<this.F1)+(p>1?d[p-2]>>this.F2:0);var A=this.FV/o,z=(1<<this.F1)/o,x=1<<this.F2;var u=g.t,s=u-p,f=h==null?nbi():h;d.dlShiftTo(s,f);if(g.compareTo(f)>=0){g[g.t++]=1;g.subTo(f,g);}BigInteger.ONE.dlShiftTo(p,f);f.subTo(d,d);while(d.t<p){d[d.t++]=0;}while(--s>=0){var c=g[--u]==b?this.DM:Math.floor(g[u]*A+(g[u-1]+x)*z);if((g[u]+=d.am(0,c,g,s,0,p))<c){d.dlShiftTo(s,f);g.subTo(f,g);while(g[u]<--c){g.subTo(f,g);}}}if(h!=null){g.drShiftTo(p,h);if(a!=l){BigInteger.ZERO.subTo(h,h);}}g.t=p;g.clamp();if(v>0){g.rShiftTo(v,g);}if(a<0){BigInteger.ZERO.subTo(g,g);}}function bnMod(b){var c=nbi();this.abs().divRemTo(b,null,c);if(this.s<0&&c.compareTo(BigInteger.ZERO)>0){b.subTo(c,c);}return c;}function Classic(a){this.m=a;}function cConvert(a){if(a.s<0||a.compareTo(this.m)>=0){return a.mod(this.m);}else{return a;}}function cRevert(a){return a;}function cReduce(a){a.divRemTo(this.m,null,a);}function cMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b);}function cSqrTo(a,b){a.squareTo(b);this.reduce(b);}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1){return 0;}var a=this[0];if((a&1)==0){return 0;}var b=a&3;b=b*(2-(a&15)*b)&15;b=b*(2-(a&255)*b)&255;b=b*(2-((a&65535)*b&65535))&65535;b=b*(2-a*b%this.DV)%this.DV;return b>0?this.DV-b:-b;}function Montgomery(a){this.m=a;this.mp=a.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<a.DB-15)-1;this.mt2=2*a.t;}function montConvert(a){var b=nbi();a.abs().dlShiftTo(this.m.t,b);b.divRemTo(this.m,null,b);if(a.s<0&&b.compareTo(BigInteger.ZERO)>0){this.m.subTo(b,b);}return b;}function montRevert(a){var b=nbi();a.copyTo(b);this.reduce(b);return b;}function montReduce(a){while(a.t<=this.mt2){a[a.t++]=0;}for(var c=0;c<this.m.t;++c){var b=a[c]&32767;var d=b*this.mpl+((b*this.mph+(a[c]>>15)*this.mpl&this.um)<<15)&a.DM;b=c+this.m.t;a[b]+=this.m.am(0,d,a,c,0,this.m.t);while(a[b]>=a.DV){a[b]-=a.DV;a[++b]++;}}a.clamp();a.drShiftTo(this.m.t,a);if(a.compareTo(this.m)>=0){a.subTo(this.m,a);}}function montSqrTo(a,b){a.squareTo(b);this.reduce(b);}function montMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b);}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0;}function bnpExp(h,j){if(h>4294967295||h<1){return BigInteger.ONE;}var f=nbi(),a=nbi(),d=j.convert(this),c=nbits(h)-1;d.copyTo(f);while(--c>=0){j.sqrTo(f,a);if((h&1<<c)>0){j.mulTo(a,d,f);}else{var b=f;f=a;a=b;}}return j.revert(f);}function bnModPowInt(b,a){var c;if(b<256||a.isEven()){c=new Classic(a);}else{c=new Montgomery(a);}return this.exp(b,c);}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function bnClone(){var a=nbi();this.copyTo(a);return a;}function bnIntValue(){if(this.s<0){if(this.t==1){return this[0]-this.DV;}else{if(this.t==0){return-1;}}}else{if(this.t==1){return this[0];}else{if(this.t==0){return 0;}}}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0];}function bnByteValue(){return this.t==0?this.s:this[0]<<24>>24;}function bnShortValue(){return this.t==0?this.s:this[0]<<16>>16;}function bnpChunkSize(a){return Math.floor(Math.LN2*this.DB/Math.log(a));}function bnSigNum(){if(this.s<0){return-1;}else{if(this.t<=0||this.t==1&&this[0]<=0){return 0;}else{return 1;}}}function bnpToRadix(c){if(c==null){c=10;}if(this.signum()==0||c<2||c>36){return\"0\";}var f=this.chunkSize(c);var e=Math.pow(c,f);var i=nbv(e),j=nbi(),h=nbi(),g=\"\";this.divRemTo(i,j,h);while(j.signum()>0){g=(e+h.intValue()).toString(c).substr(1)+g;j.divRemTo(i,j,h);}return h.intValue().toString(c)+g;}function bnpFromRadix(m,h){this.fromInt(0);if(h==null){h=10;}var f=this.chunkSize(h);var g=Math.pow(h,f),e=false,a=0,l=0;for(var c=0;c<m.length;++c){var k=intAt(m,c);if(k<0){if(m.charAt(c)==\"-\"&&this.signum()==0){e=true;}continue;}l=h*l+k;if(++a>=f){this.dMultiply(g);this.dAddOffset(l,0);a=0;l=0;}}if(a>0){this.dMultiply(Math.pow(h,a));this.dAddOffset(l,0);}if(e){BigInteger.ZERO.subTo(this,this);}}function bnpFromNumber(f,e,h){if(\"number\"==typeof e){if(f<2){this.fromInt(1);}else{this.fromNumber(f,h);if(!this.testBit(f-1)){this.bitwiseTo(BigInteger.ONE.shiftLeft(f-1),op_or,this);}if(this.isEven()){this.dAddOffset(1,0);}while(!this.isProbablePrime(e)){this.dAddOffset(2,0);if(this.bitLength()>f){this.subTo(BigInteger.ONE.shiftLeft(f-1),this);}}}}else{var d=new Array(),g=f&7;d.length=(f>>3)+1;e.nextBytes(d);if(g>0){d[0]&=(1<<g)-1;}else{d[0]=0;}this.fromString(d,256);}}function bnToByteArray(){var b=this.t,c=new Array();c[0]=this.s;var e=this.DB-b*this.DB%8,f,a=0;if(b-->0){if(e<this.DB&&(f=this[b]>>e)!=(this.s&this.DM)>>e){c[a++]=f|this.s<<this.DB-e;}while(b>=0){if(e<8){f=(this[b]&(1<<e)-1)<<8-e;f|=this[--b]>>(e+=this.DB-8);}else{f=this[b]>>(e-=8)&255;if(e<=0){e+=this.DB;--b;}}if((f&128)!=0){f|=-256;}if(a==0&&(this.s&128)!=(f&128)){++a;}if(a>0||f!=this.s){c[a++]=f;}}}return c;}function bnEquals(b){return this.compareTo(b)==0;}function bnMin(b){return this.compareTo(b)<0?this:b;}function bnMax(b){return this.compareTo(b)>0?this:b;}function bnpBitwiseTo(c,h,e){var d,g,b=Math.min(c.t,this.t);for(d=0;d<b;++d){e[d]=h(this[d],c[d]);}if(c.t<this.t){g=c.s&this.DM;for(d=b;d<this.t;++d){e[d]=h(this[d],g);}e.t=this.t;}else{g=this.s&this.DM;for(d=b;d<c.t;++d){e[d]=h(g,c[d]);}e.t=c.t;}e.s=h(this.s,c.s);e.clamp();}function op_and(a,b){return a&b;}function bnAnd(b){var c=nbi();this.bitwiseTo(b,op_and,c);return c;}function op_or(a,b){return a|b;}function bnOr(b){var c=nbi();this.bitwiseTo(b,op_or,c);return c;}function op_xor(a,b){return a^b;}function bnXor(b){var c=nbi();this.bitwiseTo(b,op_xor,c);return c;}function op_andnot(a,b){return a&~b;}function bnAndNot(b){var c=nbi();this.bitwiseTo(b,op_andnot,c);return c;}function bnNot(){var b=nbi();for(var a=0;a<this.t;++a){b[a]=this.DM&~this[a];}b.t=this.t;b.s=~this.s;return b;}function bnShiftLeft(b){var a=nbi();if(b<0){this.rShiftTo(-b,a);}else{this.lShiftTo(b,a);}return a;}function bnShiftRight(b){var a=nbi();if(b<0){this.lShiftTo(-b,a);}else{this.rShiftTo(b,a);}return a;}function lbit(a){if(a==0){return-1;}var b=0;if((a&65535)==0){a>>=16;b+=16;}if((a&255)==0){a>>=8;b+=8;}if((a&15)==0){a>>=4;b+=4;}if((a&3)==0){a>>=2;b+=2;}if((a&1)==0){++b;}return b;}function bnGetLowestSetBit(){for(var a=0;a<this.t;++a){if(this[a]!=0){return a*this.DB+lbit(this[a]);}}if(this.s<0){return this.t*this.DB;}return-1;}function cbit(a){var b=0;while(a!=0){a&=a-1;++b;}return b;}function bnBitCount(){var c=0,a=this.s&this.DM;for(var b=0;b<this.t;++b){c+=cbit(this[b]^a);}return c;}function bnTestBit(b){var a=Math.floor(b/this.DB);if(a>=this.t){return this.s!=0;}return(this[a]&1<<b%this.DB)!=0;}function bnpChangeBit(c,b){var a=BigInteger.ONE.shiftLeft(c);this.bitwiseTo(a,b,a);return a;}function bnSetBit(a){return this.changeBit(a,op_or);}function bnClearBit(a){return this.changeBit(a,op_andnot);}function bnFlipBit(a){return this.changeBit(a,op_xor);}function bnpAddTo(d,f){var e=0,g=0,b=Math.min(d.t,this.t);while(e<b){g+=this[e]+d[e];f[e++]=g&this.DM;g>>=this.DB;}if(d.t<this.t){g+=d.s;while(e<this.t){g+=this[e];f[e++]=g&this.DM;g>>=this.DB;}g+=this.s;}else{g+=this.s;while(e<d.t){g+=d[e];f[e++]=g&this.DM;g>>=this.DB;}g+=d.s;}f.s=g<0?-1:0;if(g>0){f[e++]=g;}else{if(g<-1){f[e++]=this.DV+g;}}f.t=e;f.clamp();}function bnAdd(b){var c=nbi();this.addTo(b,c);return c;}function bnSubtract(b){var c=nbi();this.subTo(b,c);return c;}function bnMultiply(b){var c=nbi();this.multiplyTo(b,c);return c;}function bnSquare(){var a=nbi();this.squareTo(a);return a;}function bnDivide(b){var c=nbi();this.divRemTo(b,c,null);return c;}function bnRemainder(b){var c=nbi();this.divRemTo(b,null,c);return c;}function bnDivideAndRemainder(b){var d=nbi(),c=nbi();this.divRemTo(b,d,c);return new Array(d,c);}function bnpDMultiply(a){this[this.t]=this.am(0,a-1,this,0,0,this.t);++this.t;this.clamp();}function bnpDAddOffset(b,a){if(b==0){return;}while(this.t<=a){this[this.t++]=0;}this[a]+=b;while(this[a]>=this.DV){this[a]-=this.DV;if(++a>=this.t){this[this.t++]=0;}++this[a];}}function NullExp(){}function nNop(a){return a;}function nMulTo(a,c,b){a.multiplyTo(c,b);}function nSqrTo(a,b){a.squareTo(b);}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(a){return this.exp(a,new NullExp());}function bnpMultiplyLowerTo(b,f,e){var d=Math.min(this.t+b.t,f);e.s=0;e.t=d;while(d>0){e[--d]=0;}var c;for(c=e.t-this.t;d<c;++d){e[d+this.t]=this.am(0,b[d],e,d,0,this.t);}for(c=Math.min(b.t,f);d<c;++d){this.am(0,b[d],e,d,0,f-d);}e.clamp();}function bnpMultiplyUpperTo(b,e,d){--e;var c=d.t=this.t+b.t-e;d.s=0;while(--c>=0){d[c]=0;}for(c=Math.max(e-this.t,0);c<b.t;++c){d[this.t+c-e]=this.am(e-c,b[c],d,0,0,this.t+c-e);}d.clamp();d.drShiftTo(1,d);}function Barrett(a){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*a.t,this.r2);this.mu=this.r2.divide(a);this.m=a;}function barrettConvert(a){if(a.s<0||a.t>2*this.m.t){return a.mod(this.m);}else{if(a.compareTo(this.m)<0){return a;}else{var b=nbi();a.copyTo(b);this.reduce(b);return b;}}}function barrettRevert(a){return a;}function barrettReduce(a){a.drShiftTo(this.m.t-1,this.r2);if(a.t>this.m.t+1){a.t=this.m.t+1;a.clamp();}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(a.compareTo(this.r2)<0){a.dAddOffset(1,this.m.t+1);}a.subTo(this.r2,a);while(a.compareTo(this.m)>=0){a.subTo(this.m,a);}}function barrettSqrTo(a,b){a.squareTo(b);this.reduce(b);}function barrettMulTo(a,c,b){a.multiplyTo(c,b);this.reduce(b);}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(q,f){var o=q.bitLength(),h,b=nbv(1),v;if(o<=0){return b;}else{if(o<18){h=1;}else{if(o<48){h=3;}else{if(o<144){h=4;}else{if(o<768){h=5;}else{h=6;}}}}}if(o<8){v=new Classic(f);}else{if(f.isEven()){v=new Barrett(f);}else{v=new Montgomery(f);}}var p=new Array(),d=3,s=h-1,a=(1<<h)-1;p[1]=v.convert(this);if(h>1){var A=nbi();v.sqrTo(p[1],A);while(d<=a){p[d]=nbi();v.mulTo(A,p[d-2],p[d]);d+=2;}}var l=q.t-1,x,u=true,c=nbi(),y;o=nbits(q[l])-1;while(l>=0){if(o>=s){x=q[l]>>o-s&a;}else{x=(q[l]&(1<<o+1)-1)<<s-o;if(l>0){x|=q[l-1]>>this.DB+o-s;}}d=h;while((x&1)==0){x>>=1;--d;}if((o-=d)<0){o+=this.DB;--l;}if(u){p[x].copyTo(b);u=false;}else{while(d>1){v.sqrTo(b,c);v.sqrTo(c,b);d-=2;}if(d>0){v.sqrTo(b,c);}else{y=b;b=c;c=y;}v.mulTo(c,p[x],b);}while(l>=0&&(q[l]&1<<o)==0){v.sqrTo(b,c);y=b;b=c;c=y;if(--o<0){o=this.DB-1;--l;}}}return v.revert(b);}function bnGCD(c){var b=this.s<0?this.negate():this.clone();var h=c.s<0?c.negate():c.clone();if(b.compareTo(h)<0){var e=b;b=h;h=e;}var d=b.getLowestSetBit(),f=h.getLowestSetBit();if(f<0){return b;}if(d<f){f=d;}if(f>0){b.rShiftTo(f,b);h.rShiftTo(f,h);}while(b.signum()>0){if((d=b.getLowestSetBit())>0){b.rShiftTo(d,b);}if((d=h.getLowestSetBit())>0){h.rShiftTo(d,h);}if(b.compareTo(h)>=0){b.subTo(h,b);b.rShiftTo(1,b);}else{h.subTo(b,h);h.rShiftTo(1,h);}}if(f>0){h.lShiftTo(f,h);}return h;}function bnpModInt(e){if(e<=0){return 0;}var c=this.DV%e,b=this.s<0?e-1:0;if(this.t>0){if(c==0){b=this[0]%e;}else{for(var a=this.t-1;a>=0;--a){b=(c*b+this[a])%e;}}}return b;}function bnModInverse(f){var j=f.isEven();if(this.isEven()&&j||f.signum()==0){return BigInteger.ZERO;}var i=f.clone(),h=this.clone();var g=nbv(1),e=nbv(0),l=nbv(0),k=nbv(1);while(i.signum()!=0){while(i.isEven()){i.rShiftTo(1,i);if(j){if(!g.isEven()||!e.isEven()){g.addTo(this,g);e.subTo(f,e);}g.rShiftTo(1,g);}else{if(!e.isEven()){e.subTo(f,e);}}e.rShiftTo(1,e);}while(h.isEven()){h.rShiftTo(1,h);if(j){if(!l.isEven()||!k.isEven()){l.addTo(this,l);k.subTo(f,k);}l.rShiftTo(1,l);}else{if(!k.isEven()){k.subTo(f,k);}}k.rShiftTo(1,k);}if(i.compareTo(h)>=0){i.subTo(h,i);if(j){g.subTo(l,g);}e.subTo(k,e);}else{h.subTo(i,h);if(j){l.subTo(g,l);}k.subTo(e,k);}}if(h.compareTo(BigInteger.ONE)!=0){return BigInteger.ZERO;}if(k.compareTo(f)>=0){return k.subtract(f);}if(k.signum()<0){k.addTo(f,k);}else{return k;}if(k.signum()<0){return k.add(f);}else{return k;}}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(e){var d,b=this.abs();if(b.t==1&&b[0]<=lowprimes[lowprimes.length-1]){for(d=0;d<lowprimes.length;++d){if(b[0]==lowprimes[d]){return true;}}return false;}if(b.isEven()){return false;}d=1;while(d<lowprimes.length){var a=lowprimes[d],c=d+1;while(c<lowprimes.length&&a<lplim){a*=lowprimes[c++];}a=b.modInt(a);while(d<c){if(a%lowprimes[d++]==0){return false;}}}return b.millerRabin(e);}function bnpMillerRabin(f){var g=this.subtract(BigInteger.ONE);var c=g.getLowestSetBit();if(c<=0){return false;}var h=g.shiftRight(c);f=f+1>>1;if(f>lowprimes.length){f=lowprimes.length;}var b=nbi();for(var e=0;e<f;++e){b.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);var l=b.modPow(h,this);if(l.compareTo(BigInteger.ONE)!=0&&l.compareTo(g)!=0){var d=1;while(d++<c&&l.compareTo(g)!=0){l=l.modPowInt(2,this);if(l.compareTo(BigInteger.ONE)==0){return false;}}if(l.compareTo(g)!=0){return false;}}}return true;}BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=bnIsProbablePrime;BigInteger.prototype.square=bnSquare;/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function Arcfour(){this.i=0;this.j=0;this.S=new Array();}function ARC4init(d){var c,a,b;for(c=0;c<256;++c){this.S[c]=c;}a=0;for(c=0;c<256;++c){a=a+this.S[c]+d[c%d.length]&255;b=this.S[c];this.S[c]=this.S[a];this.S[a]=b;}this.i=0;this.j=0;}function ARC4next(){var a;this.i=this.i+1&255;this.j=this.j+this.S[this.i]&255;a=this.S[this.i];this.S[this.i]=this.S[this.j];this.S[this.j]=a;return this.S[a+this.S[this.i]&255];}Arcfour.prototype.init=ARC4init;Arcfour.prototype.next=ARC4next;function prng_newstate(){return new Arcfour();}var rng_psize=256;/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */var rng_state;var rng_pool;var rng_pptr;function rng_seed_int(a){rng_pool[rng_pptr++]^=a&255;rng_pool[rng_pptr++]^=a>>8&255;rng_pool[rng_pptr++]^=a>>16&255;rng_pool[rng_pptr++]^=a>>24&255;if(rng_pptr>=rng_psize){rng_pptr-=rng_psize;}}function rng_seed_time(){rng_seed_int(new Date().getTime());}if(rng_pool==null){rng_pool=new Array();rng_pptr=0;var t;if(navigator.appName==\"Netscape\"&&navigator.appVersion<\"5\"&&window.crypto){var z=window.crypto.random(32);for(t=0;t<z.length;++t){rng_pool[rng_pptr++]=z.charCodeAt(t)&255;}}while(rng_pptr<rng_psize){t=Math.floor(65536*Math.random());rng_pool[rng_pptr++]=t>>>8;rng_pool[rng_pptr++]=t&255;}rng_pptr=0;rng_seed_time();}function rng_get_byte(){if(rng_state==null){rng_seed_time();rng_state=prng_newstate();rng_state.init(rng_pool);for(rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr){rng_pool[rng_pptr]=0;}rng_pptr=0;}return rng_state.next();}function rng_get_bytes(b){var a;for(a=0;a<b.length;++a){b[a]=rng_get_byte();}}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes;/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function parseBigInt(b,a){return new BigInteger(b,a);}function linebrk(c,d){var a=\"\";var b=0;while(b+d<c.length){a+=c.substring(b,b+d)+\"\\n\";b+=d;}return a+c.substring(b,c.length);}function byte2Hex(a){if(a<16){return\"0\"+a.toString(16);}else{return a.toString(16);}}function pkcs1pad2(e,h){if(h<e.length+11){alert(\"Message too long for RSA\");return null;}var g=new Array();var d=e.length-1;while(d>=0&&h>0){var f=e.charCodeAt(d--);if(f<128){g[--h]=f;}else{if(f>127&&f<2048){g[--h]=f&63|128;g[--h]=f>>6|192;}else{g[--h]=f&63|128;g[--h]=f>>6&63|128;g[--h]=f>>12|224;}}}g[--h]=0;var b=new SecureRandom();var a=new Array();while(h>2){a[0]=0;while(a[0]==0){b.nextBytes(a);}g[--h]=a[0];}g[--h]=2;g[--h]=0;return new BigInteger(g);}function oaep_mgf1_arr(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(String.fromCharCode.apply(String,c.concat([(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255])));d+=1;}return b;}var SHA1_SIZE=20;function oaep_pad(l,a,c){if(l.length+2*SHA1_SIZE+2>a){throw\"Message too long for RSA\";}var h=\"\",d;for(d=0;d<a-l.length-2*SHA1_SIZE-2;d+=1){h+=\"\\x00\";}var e=rstr_sha1(\"\")+h+\"\\x01\"+l;var f=new Array(SHA1_SIZE);new SecureRandom().nextBytes(f);var g=oaep_mgf1_arr(f,e.length,c||rstr_sha1);var k=[];for(d=0;d<e.length;d+=1){k[d]=e.charCodeAt(d)^g.charCodeAt(d);}var j=oaep_mgf1_arr(k,f.length,rstr_sha1);var b=[0];for(d=0;d<f.length;d+=1){b[d+1]=f[d]^j.charCodeAt(d);}return new BigInteger(b.concat(k));}function RSAKey(){this.n=null;this.e=0;this.d=null;this.p=null;this.q=null;this.dmp1=null;this.dmq1=null;this.coeff=null;}function RSASetPublic(b,a){this.isPublic=true;if(typeof b!==\"string\"){this.n=b;this.e=a;}else{if(b!=null&&a!=null&&b.length>0&&a.length>0){this.n=parseBigInt(b,16);this.e=parseInt(a,16);}else{alert(\"Invalid RSA public key\");}}}function RSADoPublic(a){return a.modPowInt(this.e,this.n);}function RSAEncrypt(d){var a=pkcs1pad2(d,this.n.bitLength()+7>>3);if(a==null){return null;}var e=this.doPublic(a);if(e==null){return null;}var b=e.toString(16);if((b.length&1)==0){return b;}else{return\"0\"+b;}}function RSAEncryptOAEP(e,d){var a=oaep_pad(e,this.n.bitLength()+7>>3,d);if(a==null){return null;}var f=this.doPublic(a);if(f==null){return null;}var b=f.toString(16);if((b.length&1)==0){return b;}else{return\"0\"+b;}}RSAKey.prototype.doPublic=RSADoPublic;RSAKey.prototype.setPublic=RSASetPublic;RSAKey.prototype.encrypt=RSAEncrypt;RSAKey.prototype.encryptOAEP=RSAEncryptOAEP;RSAKey.prototype.type=\"RSA\";/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function pkcs1unpad2(g,j){var a=g.toByteArray();var f=0;while(f<a.length&&a[f]==0){++f;}if(a.length-f!=j-1||a[f]!=2){return null;}++f;while(a[f]!=0){if(++f>=a.length){return null;}}var e=\"\";while(++f<a.length){var h=a[f]&255;if(h<128){e+=String.fromCharCode(h);}else{if(h>191&&h<224){e+=String.fromCharCode((h&31)<<6|a[f+1]&63);++f;}else{e+=String.fromCharCode((h&15)<<12|(a[f+1]&63)<<6|a[f+2]&63);f+=2;}}}return e;}function oaep_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=e(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]));d+=1;}return b;}var SHA1_SIZE=20;function oaep_unpad(l,b,e){l=l.toByteArray();var f;for(f=0;f<l.length;f+=1){l[f]&=255;}while(l.length<b){l.unshift(0);}l=String.fromCharCode.apply(String,l);if(l.length<2*SHA1_SIZE+2){throw\"Cipher too short\";}var c=l.substr(1,SHA1_SIZE);var o=l.substr(SHA1_SIZE+1);var m=oaep_mgf1_str(o,SHA1_SIZE,e||rstr_sha1);var h=[],f;for(f=0;f<c.length;f+=1){h[f]=c.charCodeAt(f)^m.charCodeAt(f);}var j=oaep_mgf1_str(String.fromCharCode.apply(String,h),l.length-SHA1_SIZE,rstr_sha1);var g=[];for(f=0;f<o.length;f+=1){g[f]=o.charCodeAt(f)^j.charCodeAt(f);}g=String.fromCharCode.apply(String,g);if(g.substr(0,SHA1_SIZE)!==rstr_sha1(\"\")){throw\"Hash mismatch\";}g=g.substr(SHA1_SIZE);var a=g.indexOf(\"\\x01\");var k=a!=-1?g.substr(0,a).lastIndexOf(\"\\x00\"):-1;if(k+1!=a){throw\"Malformed data\";}return g.substr(a+1);}function RSASetPrivate(c,a,b){this.isPrivate=true;if(typeof c!==\"string\"){this.n=c;this.e=a;this.d=b;}else{if(c!=null&&a!=null&&c.length>0&&a.length>0){this.n=parseBigInt(c,16);this.e=parseInt(a,16);this.d=parseBigInt(b,16);}else{alert(\"Invalid RSA private key\");}}}function RSASetPrivateEx(g,d,e,c,b,a,h,f){this.isPrivate=true;if(g==null){throw\"RSASetPrivateEx N == null\";}if(d==null){throw\"RSASetPrivateEx E == null\";}if(g.length==0){throw\"RSASetPrivateEx N.length == 0\";}if(d.length==0){throw\"RSASetPrivateEx E.length == 0\";}if(g!=null&&d!=null&&g.length>0&&d.length>0){this.n=parseBigInt(g,16);this.e=parseInt(d,16);this.d=parseBigInt(e,16);this.p=parseBigInt(c,16);this.q=parseBigInt(b,16);this.dmp1=parseBigInt(a,16);this.dmq1=parseBigInt(h,16);this.coeff=parseBigInt(f,16);}else{alert(\"Invalid RSA private key in RSASetPrivateEx\");}}function RSAGenerate(b,i){var a=new SecureRandom();var f=b>>1;this.e=parseInt(i,16);var c=new BigInteger(i,16);for(;;){for(;;){this.p=new BigInteger(b-f,1,a);if(this.p.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.p.isProbablePrime(10)){break;}}for(;;){this.q=new BigInteger(f,1,a);if(this.q.subtract(BigInteger.ONE).gcd(c).compareTo(BigInteger.ONE)==0&&this.q.isProbablePrime(10)){break;}}if(this.p.compareTo(this.q)<=0){var h=this.p;this.p=this.q;this.q=h;}var g=this.p.subtract(BigInteger.ONE);var d=this.q.subtract(BigInteger.ONE);var e=g.multiply(d);if(e.gcd(c).compareTo(BigInteger.ONE)==0){this.n=this.p.multiply(this.q);this.d=c.modInverse(e);this.dmp1=this.d.mod(g);this.dmq1=this.d.mod(d);this.coeff=this.q.modInverse(this.p);break;}}}function RSADoPrivate(a){if(this.p==null||this.q==null){return a.modPow(this.d,this.n);}var c=a.mod(this.p).modPow(this.dmp1,this.p);var b=a.mod(this.q).modPow(this.dmq1,this.q);while(c.compareTo(b)<0){c=c.add(this.p);}return c.subtract(b).multiply(this.coeff).mod(this.p).multiply(this.q).add(b);}function RSADecrypt(b){var d=parseBigInt(b,16);var a=this.doPrivate(d);if(a==null){return null;}return pkcs1unpad2(a,this.n.bitLength()+7>>3);}function RSADecryptOAEP(d,b){var e=parseBigInt(d,16);var a=this.doPrivate(e);if(a==null){return null;}return oaep_unpad(a,this.n.bitLength()+7>>3,b);}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;RSAKey.prototype.decryptOAEP=RSADecryptOAEP;/*! (c) Tom Wu | http://www-cs-students.stanford.edu/~tjw/jsbn/\n */function ECFieldElementFp(b,a){this.x=a;this.q=b;}function feFpEquals(a){if(a==this){return true;}return this.q.equals(a.q)&&this.x.equals(a.x);}function feFpToBigInteger(){return this.x;}function feFpNegate(){return new ECFieldElementFp(this.q,this.x.negate().mod(this.q));}function feFpAdd(a){return new ECFieldElementFp(this.q,this.x.add(a.toBigInteger()).mod(this.q));}function feFpSubtract(a){return new ECFieldElementFp(this.q,this.x.subtract(a.toBigInteger()).mod(this.q));}function feFpMultiply(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger()).mod(this.q));}function feFpSquare(){return new ECFieldElementFp(this.q,this.x.square().mod(this.q));}function feFpDivide(a){return new ECFieldElementFp(this.q,this.x.multiply(a.toBigInteger().modInverse(this.q)).mod(this.q));}ECFieldElementFp.prototype.equals=feFpEquals;ECFieldElementFp.prototype.toBigInteger=feFpToBigInteger;ECFieldElementFp.prototype.negate=feFpNegate;ECFieldElementFp.prototype.add=feFpAdd;ECFieldElementFp.prototype.subtract=feFpSubtract;ECFieldElementFp.prototype.multiply=feFpMultiply;ECFieldElementFp.prototype.square=feFpSquare;ECFieldElementFp.prototype.divide=feFpDivide;function ECPointFp(c,a,d,b){this.curve=c;this.x=a;this.y=d;if(b==null){this.z=BigInteger.ONE;}else{this.z=b;}this.zinv=null;}function pointFpGetX(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q);}return this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q));}function pointFpGetY(){if(this.zinv==null){this.zinv=this.z.modInverse(this.curve.q);}return this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q));}function pointFpEquals(a){if(a==this){return true;}if(this.isInfinity()){return a.isInfinity();}if(a.isInfinity()){return this.isInfinity();}var c,b;c=a.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(a.z)).mod(this.curve.q);if(!c.equals(BigInteger.ZERO)){return false;}b=a.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(a.z)).mod(this.curve.q);return b.equals(BigInteger.ZERO);}function pointFpIsInfinity(){if(this.x==null&&this.y==null){return true;}return this.z.equals(BigInteger.ZERO)&&!this.y.toBigInteger().equals(BigInteger.ZERO);}function pointFpNegate(){return new ECPointFp(this.curve,this.x,this.y.negate(),this.z);}function pointFpAdd(l){if(this.isInfinity()){return l;}if(l.isInfinity()){return this;}var p=l.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(l.z)).mod(this.curve.q);var o=l.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(l.z)).mod(this.curve.q);if(BigInteger.ZERO.equals(o)){if(BigInteger.ZERO.equals(p)){return this.twice();}return this.curve.getInfinity();}var j=new BigInteger(\"3\");var e=this.x.toBigInteger();var n=this.y.toBigInteger();var c=l.x.toBigInteger();var k=l.y.toBigInteger();var m=o.square();var i=m.multiply(o);var d=e.multiply(m);var g=p.square().multiply(this.z);var a=g.subtract(d.shiftLeft(1)).multiply(l.z).subtract(i).multiply(o).mod(this.curve.q);var h=d.multiply(j).multiply(p).subtract(n.multiply(i)).subtract(g.multiply(p)).multiply(l.z).add(p.multiply(i)).mod(this.curve.q);var f=i.multiply(this.z).multiply(l.z).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(a),this.curve.fromBigInteger(h),f);}function pointFpTwice(){if(this.isInfinity()){return this;}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity();}var g=new BigInteger(\"3\");var c=this.x.toBigInteger();var h=this.y.toBigInteger();var e=h.multiply(this.z);var j=e.multiply(h).mod(this.curve.q);var i=this.curve.a.toBigInteger();var k=c.square().multiply(g);if(!BigInteger.ZERO.equals(i)){k=k.add(this.z.square().multiply(i));}k=k.mod(this.curve.q);var b=k.square().subtract(c.shiftLeft(3).multiply(j)).shiftLeft(1).multiply(e).mod(this.curve.q);var f=k.multiply(g).multiply(c).subtract(j.shiftLeft(1)).shiftLeft(2).multiply(j).subtract(k.square().multiply(k)).mod(this.curve.q);var d=e.square().multiply(e).shiftLeft(3).mod(this.curve.q);return new ECPointFp(this.curve,this.curve.fromBigInteger(b),this.curve.fromBigInteger(f),d);}function pointFpMultiply(b){if(this.isInfinity()){return this;}if(b.signum()==0){return this.curve.getInfinity();}var g=b;var f=g.multiply(new BigInteger(\"3\"));var l=this.negate();var d=this;var c;for(c=f.bitLength()-2;c>0;--c){d=d.twice();var a=f.testBit(c);var j=g.testBit(c);if(a!=j){d=d.add(a?this:l);}}return d;}function pointFpMultiplyTwo(c,a,b){var d;if(c.bitLength()>b.bitLength()){d=c.bitLength()-1;}else{d=b.bitLength()-1;}var f=this.curve.getInfinity();var e=this.add(a);while(d>=0){f=f.twice();if(c.testBit(d)){if(b.testBit(d)){f=f.add(e);}else{f=f.add(this);}}else{if(b.testBit(d)){f=f.add(a);}}--d;}return f;}ECPointFp.prototype.getX=pointFpGetX;ECPointFp.prototype.getY=pointFpGetY;ECPointFp.prototype.equals=pointFpEquals;ECPointFp.prototype.isInfinity=pointFpIsInfinity;ECPointFp.prototype.negate=pointFpNegate;ECPointFp.prototype.add=pointFpAdd;ECPointFp.prototype.twice=pointFpTwice;ECPointFp.prototype.multiply=pointFpMultiply;ECPointFp.prototype.multiplyTwo=pointFpMultiplyTwo;function ECCurveFp(e,d,c){this.q=e;this.a=this.fromBigInteger(d);this.b=this.fromBigInteger(c);this.infinity=new ECPointFp(this,null,null);}function curveFpGetQ(){return this.q;}function curveFpGetA(){return this.a;}function curveFpGetB(){return this.b;}function curveFpEquals(a){if(a==this){return true;}return this.q.equals(a.q)&&this.a.equals(a.a)&&this.b.equals(a.b);}function curveFpGetInfinity(){return this.infinity;}function curveFpFromBigInteger(a){return new ECFieldElementFp(this.q,a);}function curveFpDecodePointHex(d){switch(parseInt(d.substr(0,2),16)){case 0:return this.infinity;case 2:case 3:return null;case 4:case 6:case 7:var a=(d.length-2)/2;var c=d.substr(2,a);var b=d.substr(a+2,a);return new ECPointFp(this,this.fromBigInteger(new BigInteger(c,16)),this.fromBigInteger(new BigInteger(b,16)));default:return null;}}ECCurveFp.prototype.getQ=curveFpGetQ;ECCurveFp.prototype.getA=curveFpGetA;ECCurveFp.prototype.getB=curveFpGetB;ECCurveFp.prototype.equals=curveFpEquals;ECCurveFp.prototype.getInfinity=curveFpGetInfinity;ECCurveFp.prototype.fromBigInteger=curveFpFromBigInteger;ECCurveFp.prototype.decodePointHex=curveFpDecodePointHex;/*! (c) Stefan Thomas | https://github.com/bitcoinjs/bitcoinjs-lib\n */ECFieldElementFp.prototype.getByteLength=function(){return Math.floor((this.toBigInteger().bitLength()+7)/8);};ECPointFp.prototype.getEncoded=function(c){var d=function d(h,f){var g=h.toByteArrayUnsigned();if(f<g.length){g=g.slice(g.length-f);}else{while(f>g.length){g.unshift(0);}}return g;};var a=this.getX().toBigInteger();var e=this.getY().toBigInteger();var b=d(a,32);if(c){if(e.isEven()){b.unshift(2);}else{b.unshift(3);}}else{b.unshift(4);b=b.concat(d(e,32));}return b;};ECPointFp.decodeFrom=function(g,c){var f=c[0];var e=c.length-1;var d=c.slice(1,1+e/2);var b=c.slice(1+e/2,1+e);d.unshift(0);b.unshift(0);var a=new BigInteger(d);var h=new BigInteger(b);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h));};ECPointFp.decodeFromHex=function(g,c){var f=c.substr(0,2);var e=c.length-2;var d=c.substr(2,e/2);var b=c.substr(2+e/2,e/2);var a=new BigInteger(d,16);var h=new BigInteger(b,16);return new ECPointFp(g,g.fromBigInteger(a),g.fromBigInteger(h));};ECPointFp.prototype.add2D=function(c){if(this.isInfinity()){return c;}if(c.isInfinity()){return this;}if(this.x.equals(c.x)){if(this.y.equals(c.y)){return this.twice();}return this.curve.getInfinity();}var g=c.x.subtract(this.x);var e=c.y.subtract(this.y);var a=e.divide(g);var d=a.square().subtract(this.x).subtract(c.x);var f=a.multiply(this.x.subtract(d)).subtract(this.y);return new ECPointFp(this.curve,d,f);};ECPointFp.prototype.twice2D=function(){if(this.isInfinity()){return this;}if(this.y.toBigInteger().signum()==0){return this.curve.getInfinity();}var b=this.curve.fromBigInteger(BigInteger.valueOf(2));var e=this.curve.fromBigInteger(BigInteger.valueOf(3));var a=this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(b));var c=a.square().subtract(this.x.multiply(b));var d=a.multiply(this.x.subtract(c)).subtract(this.y);return new ECPointFp(this.curve,c,d);};ECPointFp.prototype.multiply2D=function(b){if(this.isInfinity()){return this;}if(b.signum()==0){return this.curve.getInfinity();}var g=b;var f=g.multiply(new BigInteger(\"3\"));var l=this.negate();var d=this;var c;for(c=f.bitLength()-2;c>0;--c){d=d.twice();var a=f.testBit(c);var j=g.testBit(c);if(a!=j){d=d.add2D(a?this:l);}}return d;};ECPointFp.prototype.isOnCurve=function(){var d=this.getX().toBigInteger();var i=this.getY().toBigInteger();var f=this.curve.getA().toBigInteger();var c=this.curve.getB().toBigInteger();var h=this.curve.getQ();var e=i.multiply(i).mod(h);var g=d.multiply(d).multiply(d).add(f.multiply(d)).add(c).mod(h);return e.equals(g);};ECPointFp.prototype.toString=function(){return\"(\"+this.getX().toBigInteger().toString()+\",\"+this.getY().toBigInteger().toString()+\")\";};ECPointFp.prototype.validate=function(){var c=this.curve.getQ();if(this.isInfinity()){throw new Error(\"Point is at infinity.\");}var a=this.getX().toBigInteger();var b=this.getY().toBigInteger();if(a.compareTo(BigInteger.ONE)<0||a.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"x coordinate out of bounds\");}if(b.compareTo(BigInteger.ONE)<0||b.compareTo(c.subtract(BigInteger.ONE))>0){throw new Error(\"y coordinate out of bounds\");}if(!this.isOnCurve()){throw new Error(\"Point is not on the curve.\");}if(this.multiply(c).isInfinity()){throw new Error(\"Point is not a scalar multiple of G.\");}return true;};/*! asn1-1.0.8.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={};}KJUR.asn1.ASN1Util=new function(){this.integerToByteHex=function(a){var b=a.toString(16);if(b.length%2==1){b=\"0\"+b;}return b;};this.bigIntToMinTwosComplementsHex=function(j){var f=j.toString(16);if(f.substr(0,1)!=\"-\"){if(f.length%2==1){f=\"0\"+f;}else{if(!f.match(/^[0-7]/)){f=\"00\"+f;}}}else{var a=f.substr(1);var e=a.length;if(e%2==1){e+=1;}else{if(!f.match(/^[0-7]/)){e+=2;}}var g=\"\";for(var d=0;d<e;d++){g+=\"f\";}var c=new BigInteger(g,16);var b=c.xor(j).add(BigInteger.ONE);f=b.toString(16).replace(/^-/,\"\");}return f;};this.getPEMStringFromHex=function(a,b){var c=KJUR.asn1;var f=CryptoJS.enc.Hex.parse(a);var d=CryptoJS.enc.Base64.stringify(f);var e=d.replace(/(.{64})/g,\"$1\\r\\n\");e=e.replace(/\\r\\n$/,\"\");return\"-----BEGIN \"+b+\"-----\\r\\n\"+e+\"\\r\\n-----END \"+b+\"-----\\r\\n\";};this.newObject=function(b){var g=KJUR.asn1;var k=Object.keys(b);if(k.length!=1){throw\"key of param shall be only one.\";}var j=k[0];if(\":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:\".indexOf(\":\"+j+\":\")==-1){throw\"undefined key: \"+j;}if(j==\"bool\"){return new g.DERBoolean(b[j]);}if(j==\"int\"){return new g.DERInteger(b[j]);}if(j==\"bitstr\"){return new g.DERBitString(b[j]);}if(j==\"octstr\"){return new g.DEROctetString(b[j]);}if(j==\"null\"){return new g.DERNull(b[j]);}if(j==\"oid\"){return new g.DERObjectIdentifier(b[j]);}if(j==\"enum\"){return new g.DEREnumerated(b[j]);}if(j==\"utf8str\"){return new g.DERUTF8String(b[j]);}if(j==\"numstr\"){return new g.DERNumericString(b[j]);}if(j==\"prnstr\"){return new g.DERPrintableString(b[j]);}if(j==\"telstr\"){return new g.DERTeletexString(b[j]);}if(j==\"ia5str\"){return new g.DERIA5String(b[j]);}if(j==\"utctime\"){return new g.DERUTCTime(b[j]);}if(j==\"gentime\"){return new g.DERGeneralizedTime(b[j]);}if(j==\"seq\"){var m=b[j];var h=[];for(var e=0;e<m.length;e++){var l=g.ASN1Util.newObject(m[e]);h.push(l);}return new g.DERSequence({array:h});}if(j==\"set\"){var m=b[j];var h=[];for(var e=0;e<m.length;e++){var l=g.ASN1Util.newObject(m[e]);h.push(l);}return new g.DERSet({array:h});}if(j==\"tag\"){var c=b[j];if(Object.prototype.toString.call(c)===\"[object Array]\"&&c.length==3){var d=g.ASN1Util.newObject(c[2]);return new g.DERTaggedObject({tag:c[0],explicit:c[1],obj:d});}else{var f={};if(c.explicit!==undefined){f.explicit=c.explicit;}if(c.tag!==undefined){f.tag=c.tag;}if(c.obj===undefined){throw\"obj shall be specified for 'tag'.\";}f.obj=g.ASN1Util.newObject(c.obj);return new g.DERTaggedObject(f);}}};this.jsonToASN1HEX=function(b){var a=this.newObject(b);return a.getEncodedHex();};}();KJUR.asn1.ASN1Util.oidHexToInt=function(a){var j=\"\";var k=parseInt(a.substr(0,2),16);var d=Math.floor(k/40);var c=k%40;var j=d+\".\"+c;var e=\"\";for(var f=2;f<a.length;f+=2){var g=parseInt(a.substr(f,2),16);var h=(\"00000000\"+g.toString(2)).slice(-8);e=e+h.substr(1,7);if(h.substr(0,1)==\"0\"){var b=new BigInteger(e,2);j=j+\".\"+b.toString(10);e=\"\";}}return j;};KJUR.asn1.ASN1Util.oidIntToHex=function(f){var e=function e(a){var k=a.toString(16);if(k.length==1){k=\"0\"+k;}return k;};var d=function d(o){var n=\"\";var k=new BigInteger(o,10);var a=k.toString(2);var l=7-a.length%7;if(l==7){l=0;}var q=\"\";for(var m=0;m<l;m++){q+=\"0\";}a=q+a;for(var m=0;m<a.length-1;m+=7){var p=a.substr(m,7);if(m!=a.length-7){p=\"1\"+p;}n+=e(parseInt(p,2));}return n;};if(!f.match(/^[0-9.]+$/)){throw\"malformed oid string: \"+f;}var g=\"\";var b=f.split(\".\");var j=parseInt(b[0])*40+parseInt(b[1]);g+=e(j);b.splice(0,2);for(var c=0;c<b.length;c++){g+=d(b[c]);}return g;};KJUR.asn1.ASN1Object=function(){var c=true;var b=null;var d=\"00\";var e=\"00\";var a=\"\";this.getLengthHexFromValue=function(){if(typeof this.hV==\"undefined\"||this.hV==null){throw\"this.hV is null or undefined.\";}if(this.hV.length%2==1){throw\"value hex must be even length: n=\"+a.length+\",v=\"+this.hV;}var i=this.hV.length/2;var h=i.toString(16);if(h.length%2==1){h=\"0\"+h;}if(i<128){return h;}else{var g=h.length/2;if(g>15){throw\"ASN.1 length too long to represent by 8x: n = \"+i.toString(16);}var f=128+g;return f.toString(16)+h;}};this.getEncodedHex=function(){if(this.hTLV==null||this.isModified){this.hV=this.getFreshValueHex();this.hL=this.getLengthHexFromValue();this.hTLV=this.hT+this.hL+this.hV;this.isModified=false;}return this.hTLV;};this.getValueHex=function(){this.getEncodedHex();return this.hV;};this.getFreshValueHex=function(){return\"\";};};KJUR.asn1.DERAbstractString=function(c){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var b=null;var a=null;this.getString=function(){return this.s;};this.setString=function(d){this.hTLV=null;this.isModified=true;this.s=d;this.hV=stohex(this.s);};this.setStringHex=function(d){this.hTLV=null;this.isModified=true;this.s=null;this.hV=d;};this.getFreshValueHex=function(){return this.hV;};if(typeof c!=\"undefined\"){if(typeof c==\"string\"){this.setString(c);}else{if(typeof c.str!=\"undefined\"){this.setString(c.str);}else{if(typeof c.hex!=\"undefined\"){this.setStringHex(c.hex);}}}}};YAHOO.lang.extend(KJUR.asn1.DERAbstractString,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractTime=function(c){KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);var b=null;var a=null;this.localDateToUTC=function(f){utc=f.getTime()+f.getTimezoneOffset()*60000;var e=new Date(utc);return e;};this.formatDate=function(m,o,e){var g=this.zeroPadding;var n=this.localDateToUTC(m);var p=String(n.getFullYear());if(o==\"utc\"){p=p.substr(2,2);}var l=g(String(n.getMonth()+1),2);var q=g(String(n.getDate()),2);var h=g(String(n.getHours()),2);var i=g(String(n.getMinutes()),2);var j=g(String(n.getSeconds()),2);var r=p+l+q+h+i+j;if(e===true){var f=n.getMilliseconds();if(f!=0){var k=g(String(f),3);k=k.replace(/[0]+$/,\"\");r=r+\".\"+k;}}return r+\"Z\";};this.zeroPadding=function(e,d){if(e.length>=d){return e;}return new Array(d-e.length+1).join(\"0\")+e;};this.getString=function(){return this.s;};this.setString=function(d){this.hTLV=null;this.isModified=true;this.s=d;this.hV=stohex(d);};this.setByDateValue=function(h,j,e,d,f,g){var i=new Date(Date.UTC(h,j-1,e,d,f,g,0));this.setByDate(i);};this.getFreshValueHex=function(){return this.hV;};};YAHOO.lang.extend(KJUR.asn1.DERAbstractTime,KJUR.asn1.ASN1Object);KJUR.asn1.DERAbstractStructured=function(b){KJUR.asn1.DERAbstractString.superclass.constructor.call(this);var a=null;this.setByASN1ObjectArray=function(c){this.hTLV=null;this.isModified=true;this.asn1Array=c;};this.appendASN1Object=function(c){this.hTLV=null;this.isModified=true;this.asn1Array.push(c);};this.asn1Array=new Array();if(typeof b!=\"undefined\"){if(typeof b.array!=\"undefined\"){this.asn1Array=b.array;}}};YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured,KJUR.asn1.ASN1Object);KJUR.asn1.DERBoolean=function(){KJUR.asn1.DERBoolean.superclass.constructor.call(this);this.hT=\"01\";this.hTLV=\"0101ff\";};YAHOO.lang.extend(KJUR.asn1.DERBoolean,KJUR.asn1.ASN1Object);KJUR.asn1.DERInteger=function(a){KJUR.asn1.DERInteger.superclass.constructor.call(this);this.hT=\"02\";this.setByBigInteger=function(b){this.hTLV=null;this.isModified=true;this.hV=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b);};this.setByInteger=function(c){var b=new BigInteger(String(c),10);this.setByBigInteger(b);};this.setValueHex=function(b){this.hV=b;};this.getFreshValueHex=function(){return this.hV;};if(typeof a!=\"undefined\"){if(typeof a.bigint!=\"undefined\"){this.setByBigInteger(a.bigint);}else{if(typeof a[\"int\"]!=\"undefined\"){this.setByInteger(a[\"int\"]);}else{if(typeof a==\"number\"){this.setByInteger(a);}else{if(typeof a.hex!=\"undefined\"){this.setValueHex(a.hex);}}}}}};YAHOO.lang.extend(KJUR.asn1.DERInteger,KJUR.asn1.ASN1Object);KJUR.asn1.DERBitString=function(a){KJUR.asn1.DERBitString.superclass.constructor.call(this);this.hT=\"03\";this.setHexValueIncludingUnusedBits=function(b){this.hTLV=null;this.isModified=true;this.hV=b;};this.setUnusedBitsAndHexValue=function(b,d){if(b<0||7<b){throw\"unused bits shall be from 0 to 7: u = \"+b;}var c=\"0\"+b;this.hTLV=null;this.isModified=true;this.hV=c+d;};this.setByBinaryString=function(e){e=e.replace(/0+$/,\"\");var f=8-e.length%8;if(f==8){f=0;}for(var g=0;g<=f;g++){e+=\"0\";}var j=\"\";for(var g=0;g<e.length-1;g+=8){var d=e.substr(g,8);var c=parseInt(d,2).toString(16);if(c.length==1){c=\"0\"+c;}j+=c;}this.hTLV=null;this.isModified=true;this.hV=\"0\"+f+j;};this.setByBooleanArray=function(d){var c=\"\";for(var b=0;b<d.length;b++){if(d[b]==true){c+=\"1\";}else{c+=\"0\";}}this.setByBinaryString(c);};this.newFalseArray=function(d){var b=new Array(d);for(var c=0;c<d;c++){b[c]=false;}return b;};this.getFreshValueHex=function(){return this.hV;};if(typeof a!=\"undefined\"){if(typeof a==\"string\"&&a.toLowerCase().match(/^[0-9a-f]+$/)){this.setHexValueIncludingUnusedBits(a);}else{if(typeof a.hex!=\"undefined\"){this.setHexValueIncludingUnusedBits(a.hex);}else{if(typeof a.bin!=\"undefined\"){this.setByBinaryString(a.bin);}else{if(typeof a.array!=\"undefined\"){this.setByBooleanArray(a.array);}}}}}};YAHOO.lang.extend(KJUR.asn1.DERBitString,KJUR.asn1.ASN1Object);KJUR.asn1.DEROctetString=function(a){KJUR.asn1.DEROctetString.superclass.constructor.call(this,a);this.hT=\"04\";};YAHOO.lang.extend(KJUR.asn1.DEROctetString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNull=function(){KJUR.asn1.DERNull.superclass.constructor.call(this);this.hT=\"05\";this.hTLV=\"0500\";};YAHOO.lang.extend(KJUR.asn1.DERNull,KJUR.asn1.ASN1Object);KJUR.asn1.DERObjectIdentifier=function(c){var b=function b(d){var e=d.toString(16);if(e.length==1){e=\"0\"+e;}return e;};var a=function a(k){var j=\"\";var e=new BigInteger(k,10);var d=e.toString(2);var f=7-d.length%7;if(f==7){f=0;}var m=\"\";for(var g=0;g<f;g++){m+=\"0\";}d=m+d;for(var g=0;g<d.length-1;g+=7){var l=d.substr(g,7);if(g!=d.length-7){l=\"1\"+l;}j+=b(parseInt(l,2));}return j;};KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);this.hT=\"06\";this.setValueHex=function(d){this.hTLV=null;this.isModified=true;this.s=null;this.hV=d;};this.setValueOidString=function(f){if(!f.match(/^[0-9.]+$/)){throw\"malformed oid string: \"+f;}var g=\"\";var d=f.split(\".\");var j=parseInt(d[0])*40+parseInt(d[1]);g+=b(j);d.splice(0,2);for(var e=0;e<d.length;e++){g+=a(d[e]);}this.hTLV=null;this.isModified=true;this.s=null;this.hV=g;};this.setValueName=function(e){if(typeof KJUR.asn1.x509.OID.name2oidList[e]!=\"undefined\"){var d=KJUR.asn1.x509.OID.name2oidList[e];this.setValueOidString(d);}else{throw\"DERObjectIdentifier oidName undefined: \"+e;}};this.getFreshValueHex=function(){return this.hV;};if(typeof c!=\"undefined\"){if(typeof c==\"string\"&&c.match(/^[0-2].[0-9.]+$/)){this.setValueOidString(c);}else{if(KJUR.asn1.x509.OID.name2oidList[c]!==undefined){this.setValueOidString(KJUR.asn1.x509.OID.name2oidList[c]);}else{if(typeof c.oid!=\"undefined\"){this.setValueOidString(c.oid);}else{if(typeof c.hex!=\"undefined\"){this.setValueHex(c.hex);}else{if(typeof c.name!=\"undefined\"){this.setValueName(c.name);}}}}}}};YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.DEREnumerated=function(a){KJUR.asn1.DEREnumerated.superclass.constructor.call(this);this.hT=\"0a\";this.setByBigInteger=function(b){this.hTLV=null;this.isModified=true;this.hV=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(b);};this.setByInteger=function(c){var b=new BigInteger(String(c),10);this.setByBigInteger(b);};this.setValueHex=function(b){this.hV=b;};this.getFreshValueHex=function(){return this.hV;};if(typeof a!=\"undefined\"){if(typeof a[\"int\"]!=\"undefined\"){this.setByInteger(a[\"int\"]);}else{if(typeof a==\"number\"){this.setByInteger(a);}else{if(typeof a.hex!=\"undefined\"){this.setValueHex(a.hex);}}}}};YAHOO.lang.extend(KJUR.asn1.DEREnumerated,KJUR.asn1.ASN1Object);KJUR.asn1.DERUTF8String=function(a){KJUR.asn1.DERUTF8String.superclass.constructor.call(this,a);this.hT=\"0c\";};YAHOO.lang.extend(KJUR.asn1.DERUTF8String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERNumericString=function(a){KJUR.asn1.DERNumericString.superclass.constructor.call(this,a);this.hT=\"12\";};YAHOO.lang.extend(KJUR.asn1.DERNumericString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERPrintableString=function(a){KJUR.asn1.DERPrintableString.superclass.constructor.call(this,a);this.hT=\"13\";};YAHOO.lang.extend(KJUR.asn1.DERPrintableString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERTeletexString=function(a){KJUR.asn1.DERTeletexString.superclass.constructor.call(this,a);this.hT=\"14\";};YAHOO.lang.extend(KJUR.asn1.DERTeletexString,KJUR.asn1.DERAbstractString);KJUR.asn1.DERIA5String=function(a){KJUR.asn1.DERIA5String.superclass.constructor.call(this,a);this.hT=\"16\";};YAHOO.lang.extend(KJUR.asn1.DERIA5String,KJUR.asn1.DERAbstractString);KJUR.asn1.DERUTCTime=function(a){KJUR.asn1.DERUTCTime.superclass.constructor.call(this,a);this.hT=\"17\";this.setByDate=function(b){this.hTLV=null;this.isModified=true;this.date=b;this.s=this.formatDate(this.date,\"utc\");this.hV=stohex(this.s);};this.getFreshValueHex=function(){if(typeof this.date==\"undefined\"&&typeof this.s==\"undefined\"){this.date=new Date();this.s=this.formatDate(this.date,\"utc\");this.hV=stohex(this.s);}return this.hV;};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.setString(a.str);}else{if(typeof a==\"string\"&&a.match(/^[0-9]{12}Z$/)){this.setString(a);}else{if(typeof a.hex!=\"undefined\"){this.setStringHex(a.hex);}else{if(typeof a.date!=\"undefined\"){this.setByDate(a.date);}}}}}};YAHOO.lang.extend(KJUR.asn1.DERUTCTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERGeneralizedTime=function(a){KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this,a);this.hT=\"18\";this.withMillis=false;this.setByDate=function(b){this.hTLV=null;this.isModified=true;this.date=b;this.s=this.formatDate(this.date,\"gen\",this.withMillis);this.hV=stohex(this.s);};this.getFreshValueHex=function(){if(typeof this.date==\"undefined\"&&typeof this.s==\"undefined\"){this.date=new Date();this.s=this.formatDate(this.date,\"gen\",this.withMillis);this.hV=stohex(this.s);}return this.hV;};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.setString(a.str);}else{if(typeof a==\"string\"&&a.match(/^[0-9]{14}Z$/)){this.setString(a);}else{if(typeof a.hex!=\"undefined\"){this.setStringHex(a.hex);}else{if(typeof a.date!=\"undefined\"){this.setByDate(a.date);}else{if(a.millis===true){this.withMillis=true;}}}}}}};YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime,KJUR.asn1.DERAbstractTime);KJUR.asn1.DERSequence=function(a){KJUR.asn1.DERSequence.superclass.constructor.call(this,a);this.hT=\"30\";this.getFreshValueHex=function(){var c=\"\";for(var b=0;b<this.asn1Array.length;b++){var d=this.asn1Array[b];c+=d.getEncodedHex();}this.hV=c;return this.hV;};};YAHOO.lang.extend(KJUR.asn1.DERSequence,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERSet=function(a){KJUR.asn1.DERSet.superclass.constructor.call(this,a);this.hT=\"31\";this.sortFlag=true;this.getFreshValueHex=function(){var b=new Array();for(var c=0;c<this.asn1Array.length;c++){var d=this.asn1Array[c];b.push(d.getEncodedHex());}if(this.sortFlag==true){b.sort();}this.hV=b.join(\"\");return this.hV;};if(typeof a!=\"undefined\"){if(typeof a.sortflag!=\"undefined\"&&a.sortflag==false){this.sortFlag=false;}}};YAHOO.lang.extend(KJUR.asn1.DERSet,KJUR.asn1.DERAbstractStructured);KJUR.asn1.DERTaggedObject=function(a){KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);this.hT=\"a0\";this.hV=\"\";this.isExplicit=true;this.asn1Object=null;this.setASN1Object=function(b,c,d){this.hT=c;this.isExplicit=b;this.asn1Object=d;if(this.isExplicit){this.hV=this.asn1Object.getEncodedHex();this.hTLV=null;this.isModified=true;}else{this.hV=null;this.hTLV=d.getEncodedHex();this.hTLV=this.hTLV.replace(/^../,c);this.isModified=false;}};this.getFreshValueHex=function(){return this.hV;};if(typeof a!=\"undefined\"){if(typeof a.tag!=\"undefined\"){this.hT=a.tag;}if(typeof a.explicit!=\"undefined\"){this.isExplicit=a.explicit;}if(typeof a.obj!=\"undefined\"){this.asn1Object=a.obj;this.setASN1Object(this.isExplicit,this.hT,this.asn1Object);}}};YAHOO.lang.extend(KJUR.asn1.DERTaggedObject,KJUR.asn1.ASN1Object);/*! asn1hex-1.1.6.js (c) 2012-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */var ASN1HEX=new function(){this.getByteLengthOfL_AtObj=function(b,c){if(b.substring(c+2,c+3)!=\"8\"){return 1;}var a=parseInt(b.substring(c+3,c+4));if(a==0){return-1;}if(0<a&&a<10){return a+1;}return-2;};this.getHexOfL_AtObj=function(b,c){var a=this.getByteLengthOfL_AtObj(b,c);if(a<1){return\"\";}return b.substring(c+2,c+2+a*2);};this.getIntOfL_AtObj=function(c,d){var b=this.getHexOfL_AtObj(c,d);if(b==\"\"){return-1;}var a;if(parseInt(b.substring(0,1))<8){a=new BigInteger(b,16);}else{a=new BigInteger(b.substring(2),16);}return a.intValue();};this.getStartPosOfV_AtObj=function(b,c){var a=this.getByteLengthOfL_AtObj(b,c);if(a<0){return a;}return c+(a+1)*2;};this.getHexOfV_AtObj=function(c,d){var b=this.getStartPosOfV_AtObj(c,d);var a=this.getIntOfL_AtObj(c,d);return c.substring(b,b+a*2);};this.getHexOfTLV_AtObj=function(c,e){var b=c.substr(e,2);var d=this.getHexOfL_AtObj(c,e);var a=this.getHexOfV_AtObj(c,e);return b+d+a;};this.getPosOfNextSibling_AtObj=function(c,d){var b=this.getStartPosOfV_AtObj(c,d);var a=this.getIntOfL_AtObj(c,d);return b+a*2;};this.getPosArrayOfChildren_AtObj=function(f,j){var c=new Array();var i=this.getStartPosOfV_AtObj(f,j);c.push(i);var b=this.getIntOfL_AtObj(f,j);var g=i;var d=0;while(1){var e=this.getPosOfNextSibling_AtObj(f,g);if(e==null||e-i>=b*2){break;}if(d>=200){break;}c.push(e);g=e;d++;}return c;};this.getNthChildIndex_AtObj=function(d,b,e){var c=this.getPosArrayOfChildren_AtObj(d,b);return c[e];};this.getDecendantIndexByNthList=function(e,d,c){if(c.length==0){return d;}var f=c.shift();var b=this.getPosArrayOfChildren_AtObj(e,d);return this.getDecendantIndexByNthList(e,b[f],c);};this.getDecendantHexTLVByNthList=function(d,c,b){var a=this.getDecendantIndexByNthList(d,c,b);return this.getHexOfTLV_AtObj(d,a);};this.getDecendantHexVByNthList=function(d,c,b){var a=this.getDecendantIndexByNthList(d,c,b);return this.getHexOfV_AtObj(d,a);};}();ASN1HEX.getVbyList=function(d,c,b,e){var a=this.getDecendantIndexByNthList(d,c,b);if(a===undefined){throw\"can't find nthList object\";}if(e!==undefined){if(d.substr(a,2)!=e){throw\"checking tag doesn't match: \"+d.substr(a,2)+\"!=\"+e;}}return this.getHexOfV_AtObj(d,a);};ASN1HEX.hextooidstr=function(e){var h=function h(b,a){if(b.length>=a){return b;}return new Array(a-b.length+1).join(\"0\")+b;};var l=[];var o=e.substr(0,2);var f=parseInt(o,16);l[0]=new String(Math.floor(f/40));l[1]=new String(f%40);var m=e.substr(2);var k=[];for(var g=0;g<m.length/2;g++){k.push(parseInt(m.substr(g*2,2),16));}var j=[];var d=\"\";for(var g=0;g<k.length;g++){if(k[g]&128){d=d+h((k[g]&127).toString(2),7);}else{d=d+h((k[g]&127).toString(2),7);j.push(new String(parseInt(d,2)));d=\"\";}}var n=l.join(\".\");if(j.length>0){n=n+\".\"+j.join(\".\");}return n;};ASN1HEX.dump=function(e,c,k,g){var o=function o(w,i){if(w.length<=i*2){return w;}else{var v=w.substr(0,i)+\"..(total \"+w.length/2+\"bytes)..\"+w.substr(w.length-i,i);return v;}};if(c===undefined){c={ommit_long_octet:32};}if(k===undefined){k=0;}if(g===undefined){g=\"\";}var r=c.ommit_long_octet;if(e.substr(k,2)==\"01\"){var h=ASN1HEX.getHexOfV_AtObj(e,k);if(h==\"00\"){return g+\"BOOLEAN FALSE\\n\";}else{return g+\"BOOLEAN TRUE\\n\";}}if(e.substr(k,2)==\"02\"){var h=ASN1HEX.getHexOfV_AtObj(e,k);return g+\"INTEGER \"+o(h,r)+\"\\n\";}if(e.substr(k,2)==\"03\"){var h=ASN1HEX.getHexOfV_AtObj(e,k);return g+\"BITSTRING \"+o(h,r)+\"\\n\";}if(e.substr(k,2)==\"04\"){var h=ASN1HEX.getHexOfV_AtObj(e,k);if(ASN1HEX.isASN1HEX(h)){var j=g+\"OCTETSTRING, encapsulates\\n\";j=j+ASN1HEX.dump(h,c,0,g+\"  \");return j;}else{return g+\"OCTETSTRING \"+o(h,r)+\"\\n\";}}if(e.substr(k,2)==\"05\"){return g+\"NULL\\n\";}if(e.substr(k,2)==\"06\"){var l=ASN1HEX.getHexOfV_AtObj(e,k);var a=KJUR.asn1.ASN1Util.oidHexToInt(l);var n=KJUR.asn1.x509.OID.oid2name(a);var b=a.replace(/\\./g,\" \");if(n!=\"\"){return g+\"ObjectIdentifier \"+n+\" (\"+b+\")\\n\";}else{return g+\"ObjectIdentifier (\"+b+\")\\n\";}}if(e.substr(k,2)==\"0c\"){return g+\"UTF8String '\"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"'\\n\";}if(e.substr(k,2)==\"13\"){return g+\"PrintableString '\"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"'\\n\";}if(e.substr(k,2)==\"14\"){return g+\"TeletexString '\"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"'\\n\";}if(e.substr(k,2)==\"16\"){return g+\"IA5String '\"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"'\\n\";}if(e.substr(k,2)==\"17\"){return g+\"UTCTime \"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"\\n\";}if(e.substr(k,2)==\"18\"){return g+\"GeneralizedTime \"+hextoutf8(ASN1HEX.getHexOfV_AtObj(e,k))+\"\\n\";}if(e.substr(k,2)==\"30\"){if(e.substr(k,4)==\"3000\"){return g+\"SEQUENCE {}\\n\";}var j=g+\"SEQUENCE\\n\";var d=ASN1HEX.getPosArrayOfChildren_AtObj(e,k);var f=c;if((d.length==2||d.length==3)&&e.substr(d[0],2)==\"06\"&&e.substr(d[d.length-1],2)==\"04\"){var t=ASN1HEX.getHexOfV_AtObj(e,d[0]);var a=KJUR.asn1.ASN1Util.oidHexToInt(t);var n=KJUR.asn1.x509.OID.oid2name(a);var p=JSON.parse(JSON.stringify(c));p.x509ExtName=n;f=p;}for(var q=0;q<d.length;q++){j=j+ASN1HEX.dump(e,f,d[q],g+\"  \");}return j;}if(e.substr(k,2)==\"31\"){var j=g+\"SET\\n\";var d=ASN1HEX.getPosArrayOfChildren_AtObj(e,k);for(var q=0;q<d.length;q++){j=j+ASN1HEX.dump(e,c,d[q],g+\"  \");}return j;}var u=parseInt(e.substr(k,2),16);if((u&128)!=0){var m=u&31;if((u&32)!=0){var j=g+\"[\"+m+\"]\\n\";var d=ASN1HEX.getPosArrayOfChildren_AtObj(e,k);for(var q=0;q<d.length;q++){j=j+ASN1HEX.dump(e,c,d[q],g+\"  \");}return j;}else{var h=ASN1HEX.getHexOfV_AtObj(e,k);if(h.substr(0,8)==\"68747470\"){h=hextoutf8(h);}if(c.x509ExtName===\"subjectAltName\"&&m==2){h=hextoutf8(h);}var j=g+\"[\"+m+\"] \"+h+\"\\n\";return j;}}return g+\"UNKNOWN(\"+e.substr(k,2)+\") \"+ASN1HEX.getHexOfV_AtObj(e,k)+\"\\n\";};ASN1HEX.isASN1HEX=function(d){if(d.length%2==1){return false;}var c=ASN1HEX.getIntOfL_AtObj(d,0);var b=d.substr(0,2);var e=ASN1HEX.getHexOfL_AtObj(d,0);var a=d.length-b.length-e.length;if(a==c*2){return true;}return false;};/*! asn1x509-1.0.13.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={};}if(typeof KJUR.asn1.x509==\"undefined\"||!KJUR.asn1.x509){KJUR.asn1.x509={};}KJUR.asn1.x509.Certificate=function(g){KJUR.asn1.x509.Certificate.superclass.constructor.call(this);var b=null;var d=null;var f=null;var c=null;var a=null;var e=null;this.setRsaPrvKeyByPEMandPass=function(i,k){var h=PKCS5PKEY.getDecryptedKeyHex(i,k);var j=new RSAKey();j.readPrivateKeyFromASN1HexString(h);this.prvKey=j;};this.sign=function(){this.asn1SignatureAlg=this.asn1TBSCert.asn1SignatureAlg;sig=new KJUR.crypto.Signature({alg:\"SHA1withRSA\"});sig.init(this.prvKey);sig.updateHex(this.asn1TBSCert.getEncodedHex());this.hexSig=sig.sign();this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var h=new KJUR.asn1.DERSequence({array:[this.asn1TBSCert,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=h.getEncodedHex();this.isModified=false;};this.setSignatureHex=function(h){this.asn1SignatureAlg=this.asn1TBSCert.asn1SignatureAlg;this.hexSig=h;this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var i=new KJUR.asn1.DERSequence({array:[this.asn1TBSCert,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=i.getEncodedHex();this.isModified=false;};this.getEncodedHex=function(){if(this.isModified==false&&this.hTLV!=null){return this.hTLV;}throw\"not signed yet\";};this.getPEMString=function(){var j=this.getEncodedHex();var h=CryptoJS.enc.Hex.parse(j);var i=CryptoJS.enc.Base64.stringify(h);var k=i.replace(/(.{64})/g,\"$1\\r\\n\");return\"-----BEGIN CERTIFICATE-----\\r\\n\"+k+\"\\r\\n-----END CERTIFICATE-----\\r\\n\";};if(typeof g!=\"undefined\"){if(typeof g.tbscertobj!=\"undefined\"){this.asn1TBSCert=g.tbscertobj;}if(typeof g.prvkeyobj!=\"undefined\"){this.prvKey=g.prvkeyobj;}else{if(typeof g.rsaprvkey!=\"undefined\"){this.prvKey=g.rsaprvkey;}else{if(typeof g.rsaprvpem!=\"undefined\"&&typeof g.rsaprvpas!=\"undefined\"){this.setRsaPrvKeyByPEMandPass(g.rsaprvpem,g.rsaprvpas);}}}}};YAHOO.lang.extend(KJUR.asn1.x509.Certificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertificate=function(a){KJUR.asn1.x509.TBSCertificate.superclass.constructor.call(this);this._initialize=function(){this.asn1Array=new Array();this.asn1Version=new KJUR.asn1.DERTaggedObject({obj:new KJUR.asn1.DERInteger({\"int\":2})});this.asn1SerialNumber=null;this.asn1SignatureAlg=null;this.asn1Issuer=null;this.asn1NotBefore=null;this.asn1NotAfter=null;this.asn1Subject=null;this.asn1SubjPKey=null;this.extensionsArray=new Array();};this.setSerialNumberByParam=function(b){this.asn1SerialNumber=new KJUR.asn1.DERInteger(b);};this.setSignatureAlgByParam=function(b){this.asn1SignatureAlg=new KJUR.asn1.x509.AlgorithmIdentifier(b);};this.setIssuerByParam=function(b){this.asn1Issuer=new KJUR.asn1.x509.X500Name(b);};this.setNotBeforeByParam=function(b){this.asn1NotBefore=new KJUR.asn1.x509.Time(b);};this.setNotAfterByParam=function(b){this.asn1NotAfter=new KJUR.asn1.x509.Time(b);};this.setSubjectByParam=function(b){this.asn1Subject=new KJUR.asn1.x509.X500Name(b);};this.setSubjectPublicKeyByParam=function(b){this.asn1SubjPKey=new KJUR.asn1.x509.SubjectPublicKeyInfo(b);};this.setSubjectPublicKeyByGetKey=function(c){var b=KEYUTIL.getKey(c);this.asn1SubjPKey=new KJUR.asn1.x509.SubjectPublicKeyInfo(b);};this.appendExtension=function(b){this.extensionsArray.push(b);};this.appendExtensionByName=function(d,b){if(d.toLowerCase()==\"basicconstraints\"){var c=new KJUR.asn1.x509.BasicConstraints(b);this.appendExtension(c);}else{if(d.toLowerCase()==\"keyusage\"){var c=new KJUR.asn1.x509.KeyUsage(b);this.appendExtension(c);}else{if(d.toLowerCase()==\"crldistributionpoints\"){var c=new KJUR.asn1.x509.CRLDistributionPoints(b);this.appendExtension(c);}else{if(d.toLowerCase()==\"extkeyusage\"){var c=new KJUR.asn1.x509.ExtKeyUsage(b);this.appendExtension(c);}else{if(d.toLowerCase()==\"authoritykeyidentifier\"){var c=new KJUR.asn1.x509.AuthorityKeyIdentifier(b);this.appendExtension(c);}else{throw\"unsupported extension name: \"+d;}}}}}};this.getEncodedHex=function(){if(this.asn1NotBefore==null||this.asn1NotAfter==null){throw\"notBefore and/or notAfter not set\";}var c=new KJUR.asn1.DERSequence({array:[this.asn1NotBefore,this.asn1NotAfter]});this.asn1Array=new Array();this.asn1Array.push(this.asn1Version);this.asn1Array.push(this.asn1SerialNumber);this.asn1Array.push(this.asn1SignatureAlg);this.asn1Array.push(this.asn1Issuer);this.asn1Array.push(c);this.asn1Array.push(this.asn1Subject);this.asn1Array.push(this.asn1SubjPKey);if(this.extensionsArray.length>0){var d=new KJUR.asn1.DERSequence({array:this.extensionsArray});var b=new KJUR.asn1.DERTaggedObject({explicit:true,tag:\"a3\",obj:d});this.asn1Array.push(b);}var e=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=e.getEncodedHex();this.isModified=false;return this.hTLV;};this._initialize();};YAHOO.lang.extend(KJUR.asn1.x509.TBSCertificate,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Extension=function(b){KJUR.asn1.x509.Extension.superclass.constructor.call(this);var a=null;this.getEncodedHex=function(){var f=new KJUR.asn1.DERObjectIdentifier({oid:this.oid});var e=new KJUR.asn1.DEROctetString({hex:this.getExtnValueHex()});var d=new Array();d.push(f);if(this.critical){d.push(new KJUR.asn1.DERBoolean());}d.push(e);var c=new KJUR.asn1.DERSequence({array:d});return c.getEncodedHex();};this.critical=false;if(typeof b!=\"undefined\"){if(typeof b.critical!=\"undefined\"){this.critical=b.critical;}}};YAHOO.lang.extend(KJUR.asn1.x509.Extension,KJUR.asn1.ASN1Object);KJUR.asn1.x509.KeyUsage=function(a){KJUR.asn1.x509.KeyUsage.superclass.constructor.call(this,a);this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex();};this.oid=\"2.5.29.15\";if(typeof a!=\"undefined\"){if(typeof a.bin!=\"undefined\"){this.asn1ExtnValue=new KJUR.asn1.DERBitString(a);}}};YAHOO.lang.extend(KJUR.asn1.x509.KeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.BasicConstraints=function(c){KJUR.asn1.x509.BasicConstraints.superclass.constructor.call(this,c);var a=false;var b=-1;this.getExtnValueHex=function(){var e=new Array();if(this.cA){e.push(new KJUR.asn1.DERBoolean());}if(this.pathLen>-1){e.push(new KJUR.asn1.DERInteger({\"int\":this.pathLen}));}var d=new KJUR.asn1.DERSequence({array:e});this.asn1ExtnValue=d;return this.asn1ExtnValue.getEncodedHex();};this.oid=\"2.5.29.19\";this.cA=false;this.pathLen=-1;if(typeof c!=\"undefined\"){if(typeof c.cA!=\"undefined\"){this.cA=c.cA;}if(typeof c.pathLen!=\"undefined\"){this.pathLen=c.pathLen;}}};YAHOO.lang.extend(KJUR.asn1.x509.BasicConstraints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRLDistributionPoints=function(a){KJUR.asn1.x509.CRLDistributionPoints.superclass.constructor.call(this,a);this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex();};this.setByDPArray=function(b){this.asn1ExtnValue=new KJUR.asn1.DERSequence({array:b});};this.setByOneURI=function(e){var b=new KJUR.asn1.x509.GeneralNames([{uri:e}]);var d=new KJUR.asn1.x509.DistributionPointName(b);var c=new KJUR.asn1.x509.DistributionPoint({dpobj:d});this.setByDPArray([c]);};this.oid=\"2.5.29.31\";if(typeof a!=\"undefined\"){if(typeof a.array!=\"undefined\"){this.setByDPArray(a.array);}else{if(typeof a.uri!=\"undefined\"){this.setByOneURI(a.uri);}}}};YAHOO.lang.extend(KJUR.asn1.x509.CRLDistributionPoints,KJUR.asn1.x509.Extension);KJUR.asn1.x509.ExtKeyUsage=function(a){KJUR.asn1.x509.ExtKeyUsage.superclass.constructor.call(this,a);this.setPurposeArray=function(b){this.asn1ExtnValue=new KJUR.asn1.DERSequence();for(var c=0;c<b.length;c++){var d=new KJUR.asn1.DERObjectIdentifier(b[c]);this.asn1ExtnValue.appendASN1Object(d);}};this.getExtnValueHex=function(){return this.asn1ExtnValue.getEncodedHex();};this.oid=\"2.5.29.37\";if(typeof a!=\"undefined\"){if(typeof a.array!=\"undefined\"){this.setPurposeArray(a.array);}}};YAHOO.lang.extend(KJUR.asn1.x509.ExtKeyUsage,KJUR.asn1.x509.Extension);KJUR.asn1.x509.AuthorityKeyIdentifier=function(a){KJUR.asn1.x509.AuthorityKeyIdentifier.superclass.constructor.call(this,a);this.asn1KID=null;this.asn1CertIssuer=null;this.asn1CertSN=null;this.getExtnValueHex=function(){var c=new Array();if(this.asn1KID){c.push(new KJUR.asn1.DERTaggedObject({explicit:false,tag:\"80\",obj:this.asn1KID}));}if(this.asn1CertIssuer){c.push(new KJUR.asn1.DERTaggedObject({explicit:false,tag:\"a1\",obj:this.asn1CertIssuer}));}if(this.asn1CertSN){c.push(new KJUR.asn1.DERTaggedObject({explicit:false,tag:\"82\",obj:this.asn1CertSN}));}var b=new KJUR.asn1.DERSequence({array:c});this.asn1ExtnValue=b;return this.asn1ExtnValue.getEncodedHex();};this.setKIDByParam=function(b){this.asn1KID=new KJUR.asn1.DEROctetString(b);};this.setCertIssuerByParam=function(b){this.asn1CertIssuer=new KJUR.asn1.x509.X500Name(b);};this.setCertSNByParam=function(b){this.asn1CertSN=new KJUR.asn1.DERInteger(b);};this.oid=\"2.5.29.35\";if(typeof a!=\"undefined\"){if(typeof a.kid!=\"undefined\"){this.setKIDByParam(a.kid);}if(typeof a.issuer!=\"undefined\"){this.setCertIssuerByParam(a.issuer);}if(typeof a.sn!=\"undefined\"){this.setCertSNByParam(a.sn);}}};YAHOO.lang.extend(KJUR.asn1.x509.AuthorityKeyIdentifier,KJUR.asn1.x509.Extension);KJUR.asn1.x509.CRL=function(f){KJUR.asn1.x509.CRL.superclass.constructor.call(this);var a=null;var c=null;var e=null;var b=null;var d=null;this.setRsaPrvKeyByPEMandPass=function(h,j){var g=PKCS5PKEY.getDecryptedKeyHex(h,j);var i=new RSAKey();i.readPrivateKeyFromASN1HexString(g);this.rsaPrvKey=i;};this.sign=function(){this.asn1SignatureAlg=this.asn1TBSCertList.asn1SignatureAlg;sig=new KJUR.crypto.Signature({alg:\"SHA1withRSA\",prov:\"cryptojs/jsrsa\"});sig.initSign(this.rsaPrvKey);sig.updateHex(this.asn1TBSCertList.getEncodedHex());this.hexSig=sig.sign();this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var g=new KJUR.asn1.DERSequence({array:[this.asn1TBSCertList,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=g.getEncodedHex();this.isModified=false;};this.getEncodedHex=function(){if(this.isModified==false&&this.hTLV!=null){return this.hTLV;}throw\"not signed yet\";};this.getPEMString=function(){var i=this.getEncodedHex();var g=CryptoJS.enc.Hex.parse(i);var h=CryptoJS.enc.Base64.stringify(g);var j=h.replace(/(.{64})/g,\"$1\\r\\n\");return\"-----BEGIN X509 CRL-----\\r\\n\"+j+\"\\r\\n-----END X509 CRL-----\\r\\n\";};if(typeof f!=\"undefined\"){if(typeof f.tbsobj!=\"undefined\"){this.asn1TBSCertList=f.tbsobj;}if(typeof f.rsaprvkey!=\"undefined\"){this.rsaPrvKey=f.rsaprvkey;}if(typeof f.rsaprvpem!=\"undefined\"&&typeof f.rsaprvpas!=\"undefined\"){this.setRsaPrvKeyByPEMandPass(f.rsaprvpem,f.rsaprvpas);}}};YAHOO.lang.extend(KJUR.asn1.x509.CRL,KJUR.asn1.ASN1Object);KJUR.asn1.x509.TBSCertList=function(b){KJUR.asn1.x509.TBSCertList.superclass.constructor.call(this);var a=null;this.setSignatureAlgByParam=function(c){this.asn1SignatureAlg=new KJUR.asn1.x509.AlgorithmIdentifier(c);};this.setIssuerByParam=function(c){this.asn1Issuer=new KJUR.asn1.x509.X500Name(c);};this.setThisUpdateByParam=function(c){this.asn1ThisUpdate=new KJUR.asn1.x509.Time(c);};this.setNextUpdateByParam=function(c){this.asn1NextUpdate=new KJUR.asn1.x509.Time(c);};this.addRevokedCert=function(c,d){var f={};if(c!=undefined&&c!=null){f.sn=c;}if(d!=undefined&&d!=null){f.time=d;}var e=new KJUR.asn1.x509.CRLEntry(f);this.aRevokedCert.push(e);};this.getEncodedHex=function(){this.asn1Array=new Array();if(this.asn1Version!=null){this.asn1Array.push(this.asn1Version);}this.asn1Array.push(this.asn1SignatureAlg);this.asn1Array.push(this.asn1Issuer);this.asn1Array.push(this.asn1ThisUpdate);if(this.asn1NextUpdate!=null){this.asn1Array.push(this.asn1NextUpdate);}if(this.aRevokedCert.length>0){var c=new KJUR.asn1.DERSequence({array:this.aRevokedCert});this.asn1Array.push(c);}var d=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=d.getEncodedHex();this.isModified=false;return this.hTLV;};this._initialize=function(){this.asn1Version=null;this.asn1SignatureAlg=null;this.asn1Issuer=null;this.asn1ThisUpdate=null;this.asn1NextUpdate=null;this.aRevokedCert=new Array();};this._initialize();};YAHOO.lang.extend(KJUR.asn1.x509.TBSCertList,KJUR.asn1.ASN1Object);KJUR.asn1.x509.CRLEntry=function(c){KJUR.asn1.x509.CRLEntry.superclass.constructor.call(this);var b=null;var a=null;this.setCertSerial=function(d){this.sn=new KJUR.asn1.DERInteger(d);};this.setRevocationDate=function(d){this.time=new KJUR.asn1.x509.Time(d);};this.getEncodedHex=function(){var d=new KJUR.asn1.DERSequence({array:[this.sn,this.time]});this.TLV=d.getEncodedHex();return this.TLV;};if(typeof c!=\"undefined\"){if(typeof c.time!=\"undefined\"){this.setRevocationDate(c.time);}if(typeof c.sn!=\"undefined\"){this.setCertSerial(c.sn);}}};YAHOO.lang.extend(KJUR.asn1.x509.CRLEntry,KJUR.asn1.ASN1Object);KJUR.asn1.x509.X500Name=function(b){KJUR.asn1.x509.X500Name.superclass.constructor.call(this);this.asn1Array=new Array();this.setByString=function(c){var d=c.split(\"/\");d.shift();for(var e=0;e<d.length;e++){this.asn1Array.push(new KJUR.asn1.x509.RDN({str:d[e]}));}};this.setByObject=function(e){for(var c in e){if(e.hasOwnProperty(c)){var d=new KJUR.asn1.x509.RDN({str:c+\"=\"+e[c]});this.asn1Array?this.asn1Array.push(d):this.asn1Array=[d];}}};this.getEncodedHex=function(){if(typeof this.hTLV==\"string\"){return this.hTLV;}var c=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=c.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(typeof b.str!=\"undefined\"){this.setByString(b.str);}else{if((typeof b===\"undefined\"?\"undefined\":_typeof(b))===\"object\"){this.setByObject(b);}}if(typeof b.certissuer!=\"undefined\"){var a=new X509();a.hex=X509.pemToHex(b.certissuer);this.hTLV=a.getIssuerHex();}if(typeof b.certsubject!=\"undefined\"){var a=new X509();a.hex=X509.pemToHex(b.certsubject);this.hTLV=a.getSubjectHex();}}};YAHOO.lang.extend(KJUR.asn1.x509.X500Name,KJUR.asn1.ASN1Object);KJUR.asn1.x509.RDN=function(a){KJUR.asn1.x509.RDN.superclass.constructor.call(this);this.asn1Array=new Array();this.addByString=function(b){this.asn1Array.push(new KJUR.asn1.x509.AttributeTypeAndValue({str:b}));};this.getEncodedHex=function(){var b=new KJUR.asn1.DERSet({array:this.asn1Array});this.TLV=b.getEncodedHex();return this.TLV;};if(typeof a!=\"undefined\"){if(typeof a.str!=\"undefined\"){this.addByString(a.str);}}};YAHOO.lang.extend(KJUR.asn1.x509.RDN,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AttributeTypeAndValue=function(b){KJUR.asn1.x509.AttributeTypeAndValue.superclass.constructor.call(this);var d=null;var c=null;var a=\"utf8\";this.setByString=function(e){if(e.match(/^([^=]+)=(.+)$/)){this.setByAttrTypeAndValueStr(RegExp.$1,RegExp.$2);}else{throw\"malformed attrTypeAndValueStr: \"+e;}};this.setByAttrTypeAndValueStr=function(g,f){this.typeObj=KJUR.asn1.x509.OID.atype2obj(g);var e=a;if(g==\"C\"){e=\"prn\";}this.valueObj=this.getValueObj(e,f);};this.getValueObj=function(f,e){if(f==\"utf8\"){return new KJUR.asn1.DERUTF8String({str:e});}if(f==\"prn\"){return new KJUR.asn1.DERPrintableString({str:e});}if(f==\"tel\"){return new KJUR.asn1.DERTeletexString({str:e});}if(f==\"ia5\"){return new KJUR.asn1.DERIA5String({str:e});}throw\"unsupported directory string type: type=\"+f+\" value=\"+e;};this.getEncodedHex=function(){var e=new KJUR.asn1.DERSequence({array:[this.typeObj,this.valueObj]});this.TLV=e.getEncodedHex();return this.TLV;};if(typeof b!=\"undefined\"){if(typeof b.str!=\"undefined\"){this.setByString(b.str);}}};YAHOO.lang.extend(KJUR.asn1.x509.AttributeTypeAndValue,KJUR.asn1.ASN1Object);KJUR.asn1.x509.SubjectPublicKeyInfo=function(d){KJUR.asn1.x509.SubjectPublicKeyInfo.superclass.constructor.call(this);var b=null;var c=null;var a=null;this.setRSAKey=function(e){if(!RSAKey.prototype.isPrototypeOf(e)){throw\"argument is not RSAKey instance\";}this.rsaKey=e;var g=new KJUR.asn1.DERInteger({bigint:e.n});var f=new KJUR.asn1.DERInteger({\"int\":e.e});var i=new KJUR.asn1.DERSequence({array:[g,f]});var h=i.getEncodedHex();this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+h});};this.setRSAPEM=function(g){if(g.match(/-----BEGIN PUBLIC KEY-----/)){var n=g;n=n.replace(/^-----[^-]+-----/,\"\");n=n.replace(/-----[^-]+-----\\s*$/,\"\");var m=n.replace(/\\s+/g,\"\");var f=CryptoJS.enc.Base64.parse(m);var i=CryptoJS.enc.Hex.stringify(f);var k=_rsapem_getHexValueArrayOfChildrenFromHex(i);var h=k[1];var l=h.substr(2);var e=_rsapem_getHexValueArrayOfChildrenFromHex(l);var j=new RSAKey();j.setPublic(e[0],e[1]);this.setRSAKey(j);}else{throw\"key not supported\";}};this.getASN1Object=function(){if(this.asn1AlgId==null||this.asn1SubjPKey==null){throw\"algId and/or subjPubKey not set\";}var e=new KJUR.asn1.DERSequence({array:[this.asn1AlgId,this.asn1SubjPKey]});return e;};this.getEncodedHex=function(){var e=this.getASN1Object();this.hTLV=e.getEncodedHex();return this.hTLV;};this._setRSAKey=function(e){var g=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":{bigint:e.n}},{\"int\":{\"int\":e.e}}]});var f=g.getEncodedHex();this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+f});};this._setEC=function(e){var f=new KJUR.asn1.DERObjectIdentifier({name:e.curveName});this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"ecPublicKey\",asn1params:f});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+e.pubKeyHex});};this._setDSA=function(e){var f=new KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":{bigint:e.p}},{\"int\":{bigint:e.q}},{\"int\":{bigint:e.g}}]});this.asn1AlgId=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"dsa\",asn1params:f});var g=new KJUR.asn1.DERInteger({bigint:e.y});this.asn1SubjPKey=new KJUR.asn1.DERBitString({hex:\"00\"+g.getEncodedHex()});};if(typeof d!=\"undefined\"){if(typeof RSAKey!=\"undefined\"&&d instanceof RSAKey){this._setRSAKey(d);}else{if(typeof KJUR.crypto.ECDSA!=\"undefined\"&&d instanceof KJUR.crypto.ECDSA){this._setEC(d);}else{if(typeof KJUR.crypto.DSA!=\"undefined\"&&d instanceof KJUR.crypto.DSA){this._setDSA(d);}else{if(typeof d.rsakey!=\"undefined\"){this.setRSAKey(d.rsakey);}else{if(typeof d.rsapem!=\"undefined\"){this.setRSAPEM(d.rsapem);}}}}}}};YAHOO.lang.extend(KJUR.asn1.x509.SubjectPublicKeyInfo,KJUR.asn1.ASN1Object);KJUR.asn1.x509.Time=function(c){KJUR.asn1.x509.Time.superclass.constructor.call(this);var b=null;var a=null;this.setTimeParams=function(d){this.timeParams=d;};this.getEncodedHex=function(){var d=null;if(this.timeParams!=null){if(this.type==\"utc\"){d=new KJUR.asn1.DERUTCTime(this.timeParams);}else{d=new KJUR.asn1.DERGeneralizedTime(this.timeParams);}}else{if(this.type==\"utc\"){d=new KJUR.asn1.DERUTCTime();}else{d=new KJUR.asn1.DERGeneralizedTime();}}this.TLV=d.getEncodedHex();return this.TLV;};this.type=\"utc\";if(typeof c!=\"undefined\"){if(typeof c.type!=\"undefined\"){this.type=c.type;}else{if(typeof c.str!=\"undefined\"){if(c.str.match(/^[0-9]{12}Z$/)){this.type=\"utc\";}if(c.str.match(/^[0-9]{14}Z$/)){this.type=\"gen\";}}}this.timeParams=c;}};YAHOO.lang.extend(KJUR.asn1.x509.Time,KJUR.asn1.ASN1Object);KJUR.asn1.x509.AlgorithmIdentifier=function(e){KJUR.asn1.x509.AlgorithmIdentifier.superclass.constructor.call(this);var a=null;var d=null;var b=null;var c=false;this.getEncodedHex=function(){if(this.nameAlg==null&&this.asn1Alg==null){throw\"algorithm not specified\";}if(this.nameAlg!=null&&this.asn1Alg==null){this.asn1Alg=KJUR.asn1.x509.OID.name2obj(this.nameAlg);}var f=[this.asn1Alg];if(!this.paramEmpty){f.push(this.asn1Params);}var g=new KJUR.asn1.DERSequence({array:f});this.hTLV=g.getEncodedHex();return this.hTLV;};if(typeof e!=\"undefined\"){if(typeof e.name!=\"undefined\"){this.nameAlg=e.name;}if(typeof e.asn1params!=\"undefined\"){this.asn1Params=e.asn1params;}if(typeof e.paramempty!=\"undefined\"){this.paramEmpty=e.paramempty;}}if(this.asn1Params==null){this.asn1Params=new KJUR.asn1.DERNull();}};YAHOO.lang.extend(KJUR.asn1.x509.AlgorithmIdentifier,KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralName=function(d){KJUR.asn1.x509.GeneralName.superclass.constructor.call(this);var c=null;var b=null;var a={rfc822:\"81\",dns:\"82\",dn:\"a4\",uri:\"86\"};this.explicit=false;this.setByParam=function(k){var j=null;var g=null;if(typeof k==\"undefined\"){return;}if(typeof k.rfc822!=\"undefined\"){this.type=\"rfc822\";g=new KJUR.asn1.DERIA5String({str:k[this.type]});}if(typeof k.dns!=\"undefined\"){this.type=\"dns\";g=new KJUR.asn1.DERIA5String({str:k[this.type]});}if(typeof k.uri!=\"undefined\"){this.type=\"uri\";g=new KJUR.asn1.DERIA5String({str:k[this.type]});}if(typeof k.certissuer!=\"undefined\"){this.type=\"dn\";this.explicit=true;var h=k.certissuer;var f=null;if(h.match(/^[0-9A-Fa-f]+$/)){f==h;}if(h.indexOf(\"-----BEGIN \")!=-1){f=X509.pemToHex(h);}if(f==null){throw\"certissuer param not cert\";}var e=new X509();e.hex=f;var i=e.getIssuerHex();g=new KJUR.asn1.ASN1Object();g.hTLV=i;}if(typeof k.certsubj!=\"undefined\"){this.type=\"dn\";this.explicit=true;var h=k.certsubj;var f=null;if(h.match(/^[0-9A-Fa-f]+$/)){f==h;}if(h.indexOf(\"-----BEGIN \")!=-1){f=X509.pemToHex(h);}if(f==null){throw\"certsubj param not cert\";}var e=new X509();e.hex=f;var i=e.getSubjectHex();g=new KJUR.asn1.ASN1Object();g.hTLV=i;}if(this.type==null){throw\"unsupported type in params=\"+k;}this.asn1Obj=new KJUR.asn1.DERTaggedObject({explicit:this.explicit,tag:a[this.type],obj:g});};this.getEncodedHex=function(){return this.asn1Obj.getEncodedHex();};if(typeof d!=\"undefined\"){this.setByParam(d);}};YAHOO.lang.extend(KJUR.asn1.x509.GeneralName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.GeneralNames=function(b){KJUR.asn1.x509.GeneralNames.superclass.constructor.call(this);var a=null;this.setByParamArray=function(e){for(var c=0;c<e.length;c++){var d=new KJUR.asn1.x509.GeneralName(e[c]);this.asn1Array.push(d);}};this.getEncodedHex=function(){var c=new KJUR.asn1.DERSequence({array:this.asn1Array});return c.getEncodedHex();};this.asn1Array=new Array();if(typeof b!=\"undefined\"){this.setByParamArray(b);}};YAHOO.lang.extend(KJUR.asn1.x509.GeneralNames,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPointName=function(b){KJUR.asn1.x509.DistributionPointName.superclass.constructor.call(this);var e=null;var c=null;var a=null;var d=null;this.getEncodedHex=function(){if(this.type!=\"full\"){throw\"currently type shall be 'full': \"+this.type;}this.asn1Obj=new KJUR.asn1.DERTaggedObject({explicit:false,tag:this.tag,obj:this.asn1V});this.hTLV=this.asn1Obj.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(KJUR.asn1.x509.GeneralNames.prototype.isPrototypeOf(b)){this.type=\"full\";this.tag=\"a0\";this.asn1V=b;}else{throw\"This class supports GeneralNames only as argument\";}}};YAHOO.lang.extend(KJUR.asn1.x509.DistributionPointName,KJUR.asn1.ASN1Object);KJUR.asn1.x509.DistributionPoint=function(b){KJUR.asn1.x509.DistributionPoint.superclass.constructor.call(this);var a=null;this.getEncodedHex=function(){var c=new KJUR.asn1.DERSequence();if(this.asn1DP!=null){var d=new KJUR.asn1.DERTaggedObject({explicit:true,tag:\"a0\",obj:this.asn1DP});c.appendASN1Object(d);}this.hTLV=c.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(typeof b.dpobj!=\"undefined\"){this.asn1DP=b.dpobj;}}};YAHOO.lang.extend(KJUR.asn1.x509.DistributionPoint,KJUR.asn1.ASN1Object);KJUR.asn1.x509.OID=new function(a){this.atype2oidList={C:\"2.5.4.6\",O:\"2.5.4.10\",OU:\"2.5.4.11\",ST:\"2.5.4.8\",L:\"2.5.4.7\",CN:\"2.5.4.3\",DN:\"2.5.4.49\",DC:\"0.9.2342.19200300.100.1.25\"};this.name2oidList={sha1:\"1.3.14.3.2.26\",sha256:\"2.16.840.1.101.3.4.2.1\",sha384:\"2.16.840.1.101.3.4.2.2\",sha512:\"2.16.840.1.101.3.4.2.3\",sha224:\"2.16.840.1.101.3.4.2.4\",md5:\"1.2.840.113549.2.5\",md2:\"1.3.14.7.2.2.1\",ripemd160:\"1.3.36.3.2.1\",MD2withRSA:\"1.2.840.113549.1.1.2\",MD4withRSA:\"1.2.840.113549.1.1.3\",MD5withRSA:\"1.2.840.113549.1.1.4\",SHA1withRSA:\"1.2.840.113549.1.1.5\",SHA224withRSA:\"1.2.840.113549.1.1.14\",SHA256withRSA:\"1.2.840.113549.1.1.11\",SHA384withRSA:\"1.2.840.113549.1.1.12\",SHA512withRSA:\"1.2.840.113549.1.1.13\",SHA1withECDSA:\"1.2.840.10045.4.1\",SHA224withECDSA:\"1.2.840.10045.4.3.1\",SHA256withECDSA:\"1.2.840.10045.4.3.2\",SHA384withECDSA:\"1.2.840.10045.4.3.3\",SHA512withECDSA:\"1.2.840.10045.4.3.4\",dsa:\"1.2.840.10040.4.1\",SHA1withDSA:\"1.2.840.10040.4.3\",SHA224withDSA:\"2.16.840.1.101.3.4.3.1\",SHA256withDSA:\"2.16.840.1.101.3.4.3.2\",rsaEncryption:\"1.2.840.113549.1.1.1\",countryName:\"2.5.4.6\",organization:\"2.5.4.10\",organizationalUnit:\"2.5.4.11\",stateOrProvinceName:\"2.5.4.8\",locality:\"2.5.4.7\",commonName:\"2.5.4.3\",subjectKeyIdentifier:\"2.5.29.14\",keyUsage:\"2.5.29.15\",subjectAltName:\"2.5.29.17\",basicConstraints:\"2.5.29.19\",nameConstraints:\"2.5.29.30\",cRLDistributionPoints:\"2.5.29.31\",certificatePolicies:\"2.5.29.32\",authorityKeyIdentifier:\"2.5.29.35\",policyConstraints:\"2.5.29.36\",extKeyUsage:\"2.5.29.37\",authorityInfoAccess:\"1.3.6.1.5.5.7.1.1\",anyExtendedKeyUsage:\"2.5.29.37.0\",serverAuth:\"1.3.6.1.5.5.7.3.1\",clientAuth:\"1.3.6.1.5.5.7.3.2\",codeSigning:\"1.3.6.1.5.5.7.3.3\",emailProtection:\"1.3.6.1.5.5.7.3.4\",timeStamping:\"1.3.6.1.5.5.7.3.8\",ocspSigning:\"1.3.6.1.5.5.7.3.9\",ecPublicKey:\"1.2.840.10045.2.1\",secp256r1:\"1.2.840.10045.3.1.7\",secp256k1:\"1.3.132.0.10\",secp384r1:\"1.3.132.0.34\",pkcs5PBES2:\"1.2.840.113549.1.5.13\",pkcs5PBKDF2:\"1.2.840.113549.1.5.12\",\"des-EDE3-CBC\":\"1.2.840.113549.3.7\",data:\"1.2.840.113549.1.7.1\",\"signed-data\":\"1.2.840.113549.1.7.2\",\"enveloped-data\":\"1.2.840.113549.1.7.3\",\"digested-data\":\"1.2.840.113549.1.7.5\",\"encrypted-data\":\"1.2.840.113549.1.7.6\",\"authenticated-data\":\"1.2.840.113549.1.9.16.1.2\",tstinfo:\"1.2.840.113549.1.9.16.1.4\"};this.objCache={};this.name2obj=function(b){if(typeof this.objCache[b]!=\"undefined\"){return this.objCache[b];}if(typeof this.name2oidList[b]==\"undefined\"){throw\"Name of ObjectIdentifier not defined: \"+b;}var c=this.name2oidList[b];var d=new KJUR.asn1.DERObjectIdentifier({oid:c});this.objCache[b]=d;return d;};this.atype2obj=function(b){if(typeof this.objCache[b]!=\"undefined\"){return this.objCache[b];}if(typeof this.atype2oidList[b]==\"undefined\"){throw\"AttributeType name undefined: \"+b;}var c=this.atype2oidList[b];var d=new KJUR.asn1.DERObjectIdentifier({oid:c});this.objCache[b]=d;return d;};}();KJUR.asn1.x509.OID.oid2name=function(b){var c=KJUR.asn1.x509.OID.name2oidList;for(var a in c){if(c[a]==b){return a;}}return\"\";};KJUR.asn1.x509.OID.name2oid=function(a){var b=KJUR.asn1.x509.OID.name2oidList;if(b[a]===undefined){return\"\";}return b[a];};KJUR.asn1.x509.X509Util=new function(){this.getPKCS8PubKeyPEMfromRSAKey=function(i){var h=null;var f=KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(i.n);var j=KJUR.asn1.ASN1Util.integerToByteHex(i.e);var a=new KJUR.asn1.DERInteger({hex:f});var g=new KJUR.asn1.DERInteger({hex:j});var l=new KJUR.asn1.DERSequence({array:[a,g]});var c=l.getEncodedHex();var d=new KJUR.asn1.x509.AlgorithmIdentifier({name:\"rsaEncryption\"});var b=new KJUR.asn1.DERBitString({hex:\"00\"+c});var k=new KJUR.asn1.DERSequence({array:[d,b]});var e=k.getEncodedHex();var h=KJUR.asn1.ASN1Util.getPEMStringFromHex(e,\"PUBLIC KEY\");return h;};}();KJUR.asn1.x509.X509Util.newCertPEM=function(f){var c=KJUR.asn1.x509;var e=new c.TBSCertificate();if(f.serial!==undefined){e.setSerialNumberByParam(f.serial);}else{throw\"serial number undefined.\";}if(typeof f.sigalg.name==\"string\"){e.setSignatureAlgByParam(f.sigalg);}else{throw\"unproper signature algorithm name\";}if(f.issuer!==undefined){e.setIssuerByParam(f.issuer);}else{throw\"issuer name undefined.\";}if(f.notbefore!==undefined){e.setNotBeforeByParam(f.notbefore);}else{throw\"notbefore undefined.\";}if(f.notafter!==undefined){e.setNotAfterByParam(f.notafter);}else{throw\"notafter undefined.\";}if(f.subject!==undefined){e.setSubjectByParam(f.subject);}else{throw\"subject name undefined.\";}if(f.sbjpubkey!==undefined){e.setSubjectPublicKeyByGetKey(f.sbjpubkey);}else{throw\"subject public key undefined.\";}if(f.ext!==undefined&&f.ext.length!==undefined){for(var b=0;b<f.ext.length;b++){for(key in f.ext[b]){e.appendExtensionByName(key,f.ext[b][key]);}}}if(f.cakey===undefined&&f.sighex===undefined){throw\"param cakey and sighex undefined.\";}var d=null;var a=null;if(f.cakey){d=KEYUTIL.getKey.apply(null,f.cakey);a=new c.Certificate({tbscertobj:e,prvkeyobj:d});a.sign();}if(f.sighex){a=new c.Certificate({tbscertobj:e});a.setSignatureHex(f.sighex);}return a.getPEMString();};/*! asn1cms-1.0.2.js (c) 2013-2014 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={};}if(typeof KJUR.asn1.cms==\"undefined\"||!KJUR.asn1.cms){KJUR.asn1.cms={};}KJUR.asn1.cms.Attribute=function(b){KJUR.asn1.cms.Attribute.superclass.constructor.call(this);var a=[];this.getEncodedHex=function(){var f,e,c;f=new KJUR.asn1.DERObjectIdentifier({oid:this.attrTypeOid});e=new KJUR.asn1.DERSet({array:this.valueList});try{e.getEncodedHex();}catch(d){throw\"fail valueSet.getEncodedHex in Attribute(1)/\"+d;}c=new KJUR.asn1.DERSequence({array:[f,e]});try{this.hTLV=c.getEncodedHex();}catch(d){throw\"failed seq.getEncodedHex in Attribute(2)/\"+d;}return this.hTLV;};};YAHOO.lang.extend(KJUR.asn1.cms.Attribute,KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentType=function(b){KJUR.asn1.cms.ContentType.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.3\";var a=null;if(typeof b!=\"undefined\"){var a=new KJUR.asn1.DERObjectIdentifier(b);this.valueList=[a];}};YAHOO.lang.extend(KJUR.asn1.cms.ContentType,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.MessageDigest=function(e){KJUR.asn1.cms.MessageDigest.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.4\";if(typeof e!=\"undefined\"){if(e.eciObj instanceof KJUR.asn1.cms.EncapsulatedContentInfo&&typeof e.hashAlg==\"string\"){var b=e.eciObj.eContentValueHex;var a=e.hashAlg;var c=KJUR.crypto.Util.hashHex(b,a);var d=new KJUR.asn1.DEROctetString({hex:c});d.getEncodedHex();this.valueList=[d];}else{var d=new KJUR.asn1.DEROctetString(e);d.getEncodedHex();this.valueList=[d];}}};YAHOO.lang.extend(KJUR.asn1.cms.MessageDigest,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningTime=function(c){KJUR.asn1.cms.SigningTime.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.5\";if(typeof c!=\"undefined\"){var a=new KJUR.asn1.x509.Time(c);try{a.getEncodedHex();}catch(b){throw\"SigningTime.getEncodedHex() failed/\"+b;}this.valueList=[a];}};YAHOO.lang.extend(KJUR.asn1.cms.SigningTime,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningCertificate=function(d){KJUR.asn1.cms.SigningCertificate.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.16.2.12\";var a=KJUR.asn1;var c=KJUR.asn1.cms;var b=KJUR.crypto;this.setCerts=function(l){var j=[];for(var h=0;h<l.length;h++){var f=KEYUTIL.getHexFromPEM(l[h]);var e=b.Util.hashHex(f,\"sha1\");var m=new a.DEROctetString({hex:e});m.getEncodedHex();var k=new c.IssuerAndSerialNumber({cert:l[h]});k.getEncodedHex();var n=new a.DERSequence({array:[m,k]});n.getEncodedHex();j.push(n);}var g=new a.DERSequence({array:j});g.getEncodedHex();this.valueList=[g];};if(typeof d!=\"undefined\"){if(_typeof(d.array)==\"object\"){this.setCerts(d.array);}}};YAHOO.lang.extend(KJUR.asn1.cms.SigningCertificate,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.SigningCertificateV2=function(e){KJUR.asn1.cms.SigningCertificateV2.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.16.2.47\";var b=KJUR.asn1;var f=KJUR.asn1.x509;var d=KJUR.asn1.cms;var c=KJUR.crypto;this.setCerts=function(p,h){var n=[];for(var l=0;l<p.length;l++){var j=KEYUTIL.getHexFromPEM(p[l]);var r=[];if(h!=\"sha256\"){r.push(new f.AlgorithmIdentifier({name:h}));}var g=c.Util.hashHex(j,h);var q=new b.DEROctetString({hex:g});q.getEncodedHex();r.push(q);var m=new d.IssuerAndSerialNumber({cert:p[l]});m.getEncodedHex();r.push(m);var o=new b.DERSequence({array:r});o.getEncodedHex();n.push(o);}var k=new b.DERSequence({array:n});k.getEncodedHex();this.valueList=[k];};if(typeof e!=\"undefined\"){if(_typeof(e.array)==\"object\"){var a=\"sha256\";if(typeof e.hashAlg==\"string\"){a=e.hashAlg;}this.setCerts(e.array,a);}}};YAHOO.lang.extend(KJUR.asn1.cms.SigningCertificateV2,KJUR.asn1.cms.Attribute);KJUR.asn1.cms.IssuerAndSerialNumber=function(c){KJUR.asn1.cms.IssuerAndSerialNumber.superclass.constructor.call(this);var e=null;var b=null;var a=KJUR.asn1;var d=a.x509;this.setByCertPEM=function(i){var g=KEYUTIL.getHexFromPEM(i);var f=new X509();f.hex=g;var j=f.getIssuerHex();this.dIssuer=new d.X500Name();this.dIssuer.hTLV=j;var h=f.getSerialNumberHex();this.dSerial=new a.DERInteger({hex:h});};this.getEncodedHex=function(){var f=new KJUR.asn1.DERSequence({array:[this.dIssuer,this.dSerial]});this.hTLV=f.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(typeof c==\"string\"&&c.indexOf(\"-----BEGIN \")!=-1){this.setByCertPEM(c);}if(c.issuer&&c.serial){if(c.issuer instanceof KJUR.asn1.x509.X500Name){this.dIssuer=c.issuer;}else{this.dIssuer=new KJUR.asn1.x509.X500Name(c.issuer);}if(c.serial instanceof KJUR.asn1.DERInteger){this.dSerial=c.serial;}else{this.dSerial=new KJUR.asn1.DERInteger(c.serial);}}if(typeof c.cert==\"string\"){this.setByCertPEM(c.cert);}}};YAHOO.lang.extend(KJUR.asn1.cms.IssuerAndSerialNumber,KJUR.asn1.ASN1Object);KJUR.asn1.cms.AttributeList=function(a){KJUR.asn1.cms.AttributeList.superclass.constructor.call(this);this.list=new Array();this.sortFlag=true;this.add=function(b){if(b instanceof KJUR.asn1.cms.Attribute){this.list.push(b);}};this.length=function(){return this.list.length;};this.clear=function(){this.list=new Array();this.hTLV=null;this.hV=null;};this.getEncodedHex=function(){if(typeof this.hTLV==\"string\"){return this.hTLV;}var b=new KJUR.asn1.DERSet({array:this.list,sortflag:this.sortFlag});this.hTLV=b.getEncodedHex();return this.hTLV;};if(typeof a!=\"undefined\"){if(typeof a.sortflag!=\"undefined\"&&a.sortflag==false){this.sortFlag=false;}}};YAHOO.lang.extend(KJUR.asn1.cms.AttributeList,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignerInfo=function(c){KJUR.asn1.cms.SignerInfo.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.cms;var d=KJUR.asn1.x509;this.dCMSVersion=new a.DERInteger({\"int\":1});this.dSignerIdentifier=null;this.dDigestAlgorithm=null;this.dSignedAttrs=new b.AttributeList();this.dSigAlg=null;this.dSig=null;this.dUnsignedAttrs=new b.AttributeList();this.setSignerIdentifier=function(f){if(typeof f==\"string\"&&f.indexOf(\"CERTIFICATE\")!=-1&&f.indexOf(\"BEGIN\")!=-1&&f.indexOf(\"END\")!=-1){var e=f;this.dSignerIdentifier=new b.IssuerAndSerialNumber({cert:f});}};this.setForContentAndHash=function(e){if(typeof e!=\"undefined\"){if(e.eciObj instanceof KJUR.asn1.cms.EncapsulatedContentInfo){this.dSignedAttrs.add(new b.ContentType({oid:\"1.2.840.113549.1.7.1\"}));this.dSignedAttrs.add(new b.MessageDigest({eciObj:e.eciObj,hashAlg:e.hashAlg}));}if(typeof e.sdObj!=\"undefined\"&&e.sdObj instanceof KJUR.asn1.cms.SignedData){if(e.sdObj.digestAlgNameList.join(\":\").indexOf(e.hashAlg)==-1){e.sdObj.digestAlgNameList.push(e.hashAlg);}}if(typeof e.hashAlg==\"string\"){this.dDigestAlgorithm=new d.AlgorithmIdentifier({name:e.hashAlg});}}};this.sign=function(j,f){this.dSigAlg=new d.AlgorithmIdentifier({name:f});var g=this.dSignedAttrs.getEncodedHex();var e=KEYUTIL.getKey(j);var i=new KJUR.crypto.Signature({alg:f});i.init(e);i.updateHex(g);var h=i.sign();this.dSig=new a.DEROctetString({hex:h});};this.addUnsigned=function(e){this.hTLV=null;this.dUnsignedAttrs.hTLV=null;this.dUnsignedAttrs.add(e);};this.getEncodedHex=function(){if(this.dSignedAttrs instanceof KJUR.asn1.cms.AttributeList&&this.dSignedAttrs.length()==0){throw\"SignedAttrs length = 0 (empty)\";}var e=new a.DERTaggedObject({obj:this.dSignedAttrs,tag:\"a0\",explicit:false});var h=null;if(this.dUnsignedAttrs.length()>0){h=new a.DERTaggedObject({obj:this.dUnsignedAttrs,tag:\"a1\",explicit:false});}var g=[this.dCMSVersion,this.dSignerIdentifier,this.dDigestAlgorithm,e,this.dSigAlg,this.dSig];if(h!=null){g.push(h);}var f=new a.DERSequence({array:g});this.hTLV=f.getEncodedHex();return this.hTLV;};};YAHOO.lang.extend(KJUR.asn1.cms.SignerInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.EncapsulatedContentInfo=function(c){KJUR.asn1.cms.EncapsulatedContentInfo.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.cms;var d=KJUR.asn1.x509;this.dEContentType=new a.DERObjectIdentifier({name:\"data\"});this.dEContent=null;this.isDetached=false;this.eContentValueHex=null;this.setContentType=function(e){if(e.match(/^[0-2][.][0-9.]+$/)){this.dEContentType=new a.DERObjectIdentifier({oid:e});}else{this.dEContentType=new a.DERObjectIdentifier({name:e});}};this.setContentValue=function(e){if(typeof e!=\"undefined\"){if(typeof e.hex==\"string\"){this.eContentValueHex=e.hex;}else{if(typeof e.str==\"string\"){this.eContentValueHex=utf8tohex(e.str);}}}};this.setContentValueHex=function(e){this.eContentValueHex=e;};this.setContentValueStr=function(e){this.eContentValueHex=utf8tohex(e);};this.getEncodedHex=function(){if(typeof this.eContentValueHex!=\"string\"){throw\"eContentValue not yet set\";}var g=new a.DEROctetString({hex:this.eContentValueHex});this.dEContent=new a.DERTaggedObject({obj:g,tag:\"a0\",explicit:true});var e=[this.dEContentType];if(!this.isDetached){e.push(this.dEContent);}var f=new a.DERSequence({array:e});this.hTLV=f.getEncodedHex();return this.hTLV;};};YAHOO.lang.extend(KJUR.asn1.cms.EncapsulatedContentInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.ContentInfo=function(c){KJUR.asn1.cms.ContentInfo.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.cms;var d=KJUR.asn1.x509;this.dContentType=null;this.dContent=null;this.setContentType=function(e){if(typeof e==\"string\"){this.dContentType=d.OID.name2obj(e);}};this.getEncodedHex=function(){var f=new a.DERTaggedObject({obj:this.dContent,tag:\"a0\",explicit:true});var e=new a.DERSequence({array:[this.dContentType,f]});this.hTLV=e.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(c.type){this.setContentType(c.type);}if(c.obj&&c.obj instanceof a.ASN1Object){this.dContent=c.obj;}}};YAHOO.lang.extend(KJUR.asn1.cms.ContentInfo,KJUR.asn1.ASN1Object);KJUR.asn1.cms.SignedData=function(c){KJUR.asn1.cms.SignedData.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.cms;var d=KJUR.asn1.x509;this.dCMSVersion=new a.DERInteger({\"int\":1});this.dDigestAlgs=null;this.digestAlgNameList=[];this.dEncapContentInfo=new b.EncapsulatedContentInfo();this.dCerts=null;this.certificateList=[];this.crlList=[];this.signerInfoList=[new b.SignerInfo()];this.addCertificatesByPEM=function(e){var f=KEYUTIL.getHexFromPEM(e);var g=new a.ASN1Object();g.hTLV=f;this.certificateList.push(g);};this.getEncodedHex=function(){if(typeof this.hTLV==\"string\"){return this.hTLV;}if(this.dDigestAlgs==null){var k=[];for(var j=0;j<this.digestAlgNameList.length;j++){var h=this.digestAlgNameList[j];var m=new d.AlgorithmIdentifier({name:h});k.push(m);}this.dDigestAlgs=new a.DERSet({array:k});}var e=[this.dCMSVersion,this.dDigestAlgs,this.dEncapContentInfo];if(this.dCerts==null){if(this.certificateList.length>0){var l=new a.DERSet({array:this.certificateList});this.dCerts=new a.DERTaggedObject({obj:l,tag:\"a0\",explicit:false});}}if(this.dCerts!=null){e.push(this.dCerts);}var g=new a.DERSet({array:this.signerInfoList});e.push(g);var f=new a.DERSequence({array:e});this.hTLV=f.getEncodedHex();return this.hTLV;};this.getContentInfo=function(){this.getEncodedHex();var e=new b.ContentInfo({type:\"signed-data\",obj:this});return e;};this.getContentInfoEncodedHex=function(){var e=this.getContentInfo();var f=e.getEncodedHex();return f;};this.getPEM=function(){var e=this.getContentInfoEncodedHex();var f=a.ASN1Util.getPEMStringFromHex(e,\"CMS\");return f;};};YAHOO.lang.extend(KJUR.asn1.cms.SignedData,KJUR.asn1.ASN1Object);KJUR.asn1.cms.CMSUtil=new function(){}();KJUR.asn1.cms.CMSUtil.newSignedData=function(a){var h=KJUR.asn1.cms;var g=KJUR.asn1.cades;var f=new h.SignedData();f.dEncapContentInfo.setContentValue(a.content);if(_typeof(a.certs)==\"object\"){for(var b=0;b<a.certs.length;b++){f.addCertificatesByPEM(a.certs[b]);}}f.signerInfoList=[];for(var b=0;b<a.signerInfos.length;b++){var d=a.signerInfos[b];var c=new h.SignerInfo();c.setSignerIdentifier(d.signerCert);c.setForContentAndHash({sdObj:f,eciObj:f.dEncapContentInfo,hashAlg:d.hashAlg});for(attrName in d.sAttr){var j=d.sAttr[attrName];if(attrName==\"SigningTime\"){var e=new h.SigningTime(j);c.dSignedAttrs.add(e);}if(attrName==\"SigningCertificate\"){var e=new h.SigningCertificate(j);c.dSignedAttrs.add(e);}if(attrName==\"SigningCertificateV2\"){var e=new h.SigningCertificateV2(j);c.dSignedAttrs.add(e);}if(attrName==\"SignaturePolicyIdentifier\"){var e=new g.SignaturePolicyIdentifier(j);c.dSignedAttrs.add(e);}}c.sign(d.signerPrvKey,d.sigAlg);f.signerInfoList.push(c);}return f;};/*! asn1tsp-1.0.1.js (c) 2014 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={};}if(typeof KJUR.asn1.tsp==\"undefined\"||!KJUR.asn1.tsp){KJUR.asn1.tsp={};}KJUR.asn1.tsp.Accuracy=function(b){KJUR.asn1.tsp.Accuracy.superclass.constructor.call(this);var a=KJUR.asn1;this.seconds=null;this.millis=null;this.micros=null;this.getEncodedHex=function(){var e=null;var g=null;var i=null;var c=[];if(this.seconds!=null){e=new a.DERInteger({\"int\":this.seconds});c.push(e);}if(this.millis!=null){var h=new a.DERInteger({\"int\":this.millis});g=new a.DERTaggedObject({obj:h,tag:\"80\",explicit:false});c.push(g);}if(this.micros!=null){var f=new a.DERInteger({\"int\":this.micros});i=new a.DERTaggedObject({obj:f,tag:\"81\",explicit:false});c.push(i);}var d=new a.DERSequence({array:c});this.hTLV=d.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(typeof b.seconds==\"number\"){this.seconds=b.seconds;}if(typeof b.millis==\"number\"){this.millis=b.millis;}if(typeof b.micros==\"number\"){this.micros=b.micros;}}};YAHOO.lang.extend(KJUR.asn1.tsp.Accuracy,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.MessageImprint=function(b){KJUR.asn1.tsp.MessageImprint.superclass.constructor.call(this);var a=KJUR.asn1;var c=KJUR.asn1.x509;this.dHashAlg=null;this.dHashValue=null;this.getEncodedHex=function(){if(typeof this.hTLV==\"string\"){return this.hTLV;}var d=new a.DERSequence({array:[this.dHashAlg,this.dHashValue]});return d.getEncodedHex();};if(typeof b!=\"undefined\"){if(typeof b.hashAlg==\"string\"){this.dHashAlg=new c.AlgorithmIdentifier({name:b.hashAlg});}if(typeof b.hashValue==\"string\"){this.dHashValue=new a.DEROctetString({hex:b.hashValue});}}};YAHOO.lang.extend(KJUR.asn1.tsp.MessageImprint,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampReq=function(c){KJUR.asn1.tsp.TimeStampReq.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.tsp;this.dVersion=new a.DERInteger({\"int\":1});this.dMessageImprint=null;this.dPolicy=null;this.dNonce=null;this.certReq=true;this.setMessageImprint=function(d){if(d instanceof KJUR.asn1.tsp.MessageImprint){this.dMessageImprint=d;return;}if((typeof d===\"undefined\"?\"undefined\":_typeof(d))==\"object\"){this.dMessageImprint=new b.MessageImprint(d);}};this.getEncodedHex=function(){if(this.dMessageImprint==null){throw\"messageImprint shall be specified\";}var d=[this.dVersion,this.dMessageImprint];if(this.dPolicy!=null){d.push(this.dPolicy);}if(this.dNonce!=null){d.push(this.dNonce);}if(this.certReq){d.push(new a.DERBoolean());}var e=new a.DERSequence({array:d});this.hTLV=e.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(_typeof(c.mi)==\"object\"){this.setMessageImprint(c.mi);}if(_typeof(c.policy)==\"object\"){this.dPolicy=new a.DERObjectIdentifier(c.policy);}if(_typeof(c.nonce)==\"object\"){this.dNonce=new a.DERInteger(c.nonce);}if(typeof c.certreq==\"boolean\"){this.certReq=c.certreq;}}};YAHOO.lang.extend(KJUR.asn1.tsp.TimeStampReq,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TSTInfo=function(c){KJUR.asn1.tsp.TSTInfo.superclass.constructor.call(this);var a=KJUR.asn1;var d=KJUR.asn1.x509;var b=KJUR.asn1.tsp;this.dVersion=new a.DERInteger({\"int\":1});this.dPolicy=null;this.dMessageImprint=null;this.dSerialNumber=null;this.dGenTime=null;this.dAccuracy=null;this.dOrdering=null;this.dNonce=null;this.dTsa=null;this.getEncodedHex=function(){var e=[this.dVersion];if(this.dPolicy==null){throw\"policy shall be specified.\";}e.push(this.dPolicy);if(this.dMessageImprint==null){throw\"messageImprint shall be specified.\";}e.push(this.dMessageImprint);if(this.dSerialNumber==null){throw\"serialNumber shall be specified.\";}e.push(this.dSerialNumber);if(this.dGenTime==null){throw\"genTime shall be specified.\";}e.push(this.dGenTime);if(this.dAccuracy!=null){e.push(this.dAccuracy);}if(this.dOrdering!=null){e.push(this.dOrdering);}if(this.dNonce!=null){e.push(this.dNonce);}if(this.dTsa!=null){e.push(this.dTsa);}var f=new a.DERSequence({array:e});this.hTLV=f.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(typeof c.policy==\"string\"){if(!c.policy.match(/^[0-9.]+$/)){throw\"policy shall be oid like 0.1.4.134\";}this.dPolicy=new a.DERObjectIdentifier({oid:c.policy});}if(typeof c.messageImprint!=\"undefined\"){this.dMessageImprint=new b.MessageImprint(c.messageImprint);}if(typeof c.serialNumber!=\"undefined\"){this.dSerialNumber=new a.DERInteger(c.serialNumber);}if(typeof c.genTime!=\"undefined\"){this.dGenTime=new a.DERGeneralizedTime(c.genTime);}if(typeof c.accuracy!=\"undefind\"){this.dAccuracy=new b.Accuracy(c.accuracy);}if(typeof c.ordering!=\"undefined\"&&c.ordering==true){this.dOrdering=new a.DERBoolean();}if(typeof c.nonce!=\"undefined\"){this.dNonce=new a.DERInteger(c.nonce);}if(typeof c.tsa!=\"undefined\"){this.dTsa=new d.X500Name(c.tsa);}}};YAHOO.lang.extend(KJUR.asn1.tsp.TSTInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.TimeStampResp=function(c){KJUR.asn1.tsp.TimeStampResp.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.tsp;this.dStatus=null;this.dTST=null;this.getEncodedHex=function(){if(this.dStatus==null){throw\"status shall be specified\";}var d=[this.dStatus];if(this.dTST!=null){d.push(this.dTST);}var e=new a.DERSequence({array:d});this.hTLV=e.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(_typeof(c.status)==\"object\"){this.dStatus=new b.PKIStatusInfo(c.status);}if(typeof c.tst!=\"undefined\"&&c.tst instanceof KJUR.asn1.ASN1Object){this.dTST=c.tst.getContentInfo();}}};YAHOO.lang.extend(KJUR.asn1.tsp.TimeStampResp,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatusInfo=function(c){KJUR.asn1.tsp.PKIStatusInfo.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.tsp;this.dStatus=null;this.dStatusString=null;this.dFailureInfo=null;this.getEncodedHex=function(){if(this.dStatus==null){throw\"status shall be specified\";}var d=[this.dStatus];if(this.dStatusString!=null){d.push(this.dStatusString);}if(this.dFailureInfo!=null){d.push(this.dFailureInfo);}var e=new a.DERSequence({array:d});this.hTLV=e.getEncodedHex();return this.hTLV;};if(typeof c!=\"undefined\"){if(_typeof(c.status)==\"object\"){this.dStatus=new b.PKIStatus(c.status);}if(_typeof(c.statstr)==\"object\"){this.dStatusString=new b.PKIFreeText({array:c.statstr});}if(_typeof(c.failinfo)==\"object\"){this.dFailureInfo=new b.PKIFailureInfo(c.failinfo);}}};YAHOO.lang.extend(KJUR.asn1.tsp.PKIStatusInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatus=function(e){KJUR.asn1.tsp.PKIStatus.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.tsp;var d=null;this.getEncodedHex=function(){this.hTLV=this.dStatus.getEncodedHex();return this.hTLV;};if(typeof e!=\"undefined\"){if(typeof e.name!=\"undefined\"){var c=b.PKIStatus.valueList;if(typeof c[e.name]==\"undefined\"){throw\"name undefined: \"+e.name;}this.dStatus=new a.DERInteger({\"int\":c[e.name]});}else{this.dStatus=new a.DERInteger(e);}}};YAHOO.lang.extend(KJUR.asn1.tsp.PKIStatus,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIStatus.valueList={granted:0,grantedWithMods:1,rejection:2,waiting:3,revocationWarning:4,revocationNotification:5};KJUR.asn1.tsp.PKIFreeText=function(b){KJUR.asn1.tsp.PKIFreeText.superclass.constructor.call(this);var a=KJUR.asn1;this.textList=[];this.getEncodedHex=function(){var c=[];for(var e=0;e<this.textList.length;e++){c.push(new a.DERUTF8String({str:this.textList[e]}));}var d=new a.DERSequence({array:c});this.hTLV=d.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(_typeof(b.array)==\"object\"){this.textList=b.array;}}};YAHOO.lang.extend(KJUR.asn1.tsp.PKIFreeText,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFailureInfo=function(d){KJUR.asn1.tsp.PKIFailureInfo.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.tsp;this.value=null;this.getEncodedHex=function(){if(this.value==null){throw\"value shall be specified\";}var e=new Number(this.value).toString(2);var f=new a.DERBitString();f.setByBinaryString(e);this.hTLV=f.getEncodedHex();return this.hTLV;};if(typeof d!=\"undefined\"){if(typeof d.name==\"string\"){var c=b.PKIFailureInfo.valueList;if(typeof c[d.name]==\"undefined\"){throw\"name undefined: \"+d.name;}this.value=c[d.name];}else{if(typeof d[\"int\"]==\"number\"){this.value=d[\"int\"];}}}};YAHOO.lang.extend(KJUR.asn1.tsp.PKIFailureInfo,KJUR.asn1.ASN1Object);KJUR.asn1.tsp.PKIFailureInfo.valueList={badAlg:0,badRequest:2,badDataFormat:5,timeNotAvailable:14,unacceptedPolicy:15,unacceptedExtension:16,addInfoNotAvailable:17,systemFailure:25};KJUR.asn1.tsp.AbstractTSAAdapter=function(a){this.getTSTHex=function(c,b){throw\"not implemented yet\";};};KJUR.asn1.tsp.SimpleTSAAdapter=function(a){KJUR.asn1.tsp.SimpleTSAAdapter.superclass.constructor.call(this);this.params=null;this.serial=0;this.getTSTHex=function(c,b){var e=KJUR.crypto.Util.hashHex(c,b);this.params.tstInfo.messageImprint={hashAlg:b,hashValue:e};this.params.tstInfo.serialNumber={\"int\":this.serial++};var d=Math.floor(Math.random()*1000000000);this.params.tstInfo.nonce={\"int\":d};var f=KJUR.asn1.tsp.TSPUtil.newTimeStampToken(this.params);return f.getContentInfoEncodedHex();};if(typeof a!=\"undefined\"){this.params=a;}};YAHOO.lang.extend(KJUR.asn1.tsp.SimpleTSAAdapter,KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.FixedTSAAdapter=function(a){KJUR.asn1.tsp.FixedTSAAdapter.superclass.constructor.call(this);this.params=null;this.getTSTHex=function(c,b){var d=KJUR.crypto.Util.hashHex(c,b);this.params.tstInfo.messageImprint={hashAlg:b,hashValue:d};var e=KJUR.asn1.tsp.TSPUtil.newTimeStampToken(this.params);return e.getContentInfoEncodedHex();};if(typeof a!=\"undefined\"){this.params=a;}};YAHOO.lang.extend(KJUR.asn1.tsp.FixedTSAAdapter,KJUR.asn1.tsp.AbstractTSAAdapter);KJUR.asn1.tsp.TSPUtil=new function(){}();KJUR.asn1.tsp.TSPUtil.newTimeStampToken=function(b){var j=KJUR.asn1.cms;var a=KJUR.asn1.tsp;var g=new j.SignedData();var e=new a.TSTInfo(b.tstInfo);var f=e.getEncodedHex();g.dEncapContentInfo.setContentValue({hex:f});g.dEncapContentInfo.setContentType(\"tstinfo\");if(_typeof(b.certs)==\"object\"){for(var c=0;c<b.certs.length;c++){g.addCertificatesByPEM(b.certs[c]);}}var d=g.signerInfoList[0];d.setSignerIdentifier(b.signerCert);d.setForContentAndHash({sdObj:g,eciObj:g.dEncapContentInfo,hashAlg:b.hashAlg});var h=new j.SigningCertificate({array:[b.signerCert]});d.dSignedAttrs.add(h);d.sign(b.signerPrvKey,b.sigAlg);return g;};KJUR.asn1.tsp.TSPUtil.parseTimeStampReq=function(d){var f={};f.certreq=false;var h=ASN1HEX.getPosArrayOfChildren_AtObj(d,0);if(h.length<2){throw\"TimeStampReq must have at least 2 items\";}var c=ASN1HEX.getHexOfTLV_AtObj(d,h[1]);f.mi=KJUR.asn1.tsp.TSPUtil.parseMessageImprint(c);for(var e=2;e<h.length;e++){var b=h[e];var a=d.substr(b,2);if(a==\"06\"){var g=ASN1HEX.getHexOfV_AtObj(d,b);f.policy=ASN1HEX.hextooidstr(g);}if(a==\"02\"){f.nonce=ASN1HEX.getHexOfV_AtObj(d,b);}if(a==\"01\"){f.certreq=true;}}return f;};KJUR.asn1.tsp.TSPUtil.parseMessageImprint=function(c){var h={};if(c.substr(0,2)!=\"30\"){throw\"head of messageImprint hex shall be '30'\";}var a=ASN1HEX.getPosArrayOfChildren_AtObj(c,0);var i=ASN1HEX.getDecendantIndexByNthList(c,0,[0,0]);var d=ASN1HEX.getHexOfV_AtObj(c,i);var e=ASN1HEX.hextooidstr(d);var g=KJUR.asn1.x509.OID.oid2name(e);if(g==\"\"){throw\"hashAlg name undefined: \"+e;}var b=g;var f=ASN1HEX.getDecendantIndexByNthList(c,0,[1]);h.hashAlg=b;h.hashValue=ASN1HEX.getHexOfV_AtObj(c,f);return h;};/*! asn1cades-1.0.0.js (c) 2013-2014 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.asn1==\"undefined\"||!KJUR.asn1){KJUR.asn1={};}if(typeof KJUR.asn1.cades==\"undefined\"||!KJUR.asn1.cades){KJUR.asn1.cades={};}KJUR.asn1.cades.SignaturePolicyIdentifier=function(e){KJUR.asn1.cades.SignaturePolicyIdentifier.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.16.2.15\";var b=KJUR.asn1;var d=KJUR.asn1.cades;if(typeof e!=\"undefined\"){if(typeof e.oid==\"string\"&&_typeof(e.hash)==\"object\"){var f=new b.DERObjectIdentifier({oid:e.oid});var a=new d.OtherHashAlgAndValue(e.hash);var c=new b.DERSequence({array:[f,a]});this.valueList=[c];}}};YAHOO.lang.extend(KJUR.asn1.cades.SignaturePolicyIdentifier,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.OtherHashAlgAndValue=function(b){KJUR.asn1.cades.OtherHashAlgAndValue.superclass.constructor.call(this);var a=KJUR.asn1;var c=KJUR.asn1.x509;this.dAlg=null;this.dHash=null;this.getEncodedHex=function(){var d=new a.DERSequence({array:[this.dAlg,this.dHash]});this.hTLV=d.getEncodedHex();return this.hTLV;};if(typeof b!=\"undefined\"){if(typeof b.alg==\"string\"&&typeof b.hash==\"string\"){this.dAlg=new c.AlgorithmIdentifier({name:b.alg});this.dHash=new a.DEROctetString({hex:b.hash});}}};YAHOO.lang.extend(KJUR.asn1.cades.OtherHashAlgAndValue,KJUR.asn1.ASN1Object);KJUR.asn1.cades.SignatureTimeStamp=function(c){KJUR.asn1.cades.SignatureTimeStamp.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.16.2.14\";this.tstHex=null;var a=KJUR.asn1;if(typeof c!=\"undefined\"){if(typeof c.res!=\"undefined\"){if(typeof c.res==\"string\"&&c.res.match(/^[0-9A-Fa-f]+$/)){}else{if(c.res instanceof KJUR.asn1.ASN1Object){}else{throw\"res param shall be ASN1Object or hex string\";}}}if(typeof c.tst!=\"undefined\"){if(typeof c.tst==\"string\"&&c.tst.match(/^[0-9A-Fa-f]+$/)){var b=new a.ASN1Object();this.tstHex=c.tst;b.hTLV=this.tstHex;b.getEncodedHex();this.valueList=[b];}else{if(c.tst instanceof KJUR.asn1.ASN1Object){}else{throw\"tst param shall be ASN1Object or hex string\";}}}}};YAHOO.lang.extend(KJUR.asn1.cades.SignatureTimeStamp,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.CompleteCertificateRefs=function(c){KJUR.asn1.cades.CompleteCertificateRefs.superclass.constructor.call(this);this.attrTypeOid=\"1.2.840.113549.1.9.16.2.21\";var a=KJUR.asn1;var b=KJUR.asn1.cades;this.setByArray=function(d){this.valueList=[];for(var e=0;e<d.length;e++){var f=new b.OtherCertID(d[e]);this.valueList.push(f);}};if(typeof c!=\"undefined\"){if((typeof c===\"undefined\"?\"undefined\":_typeof(c))==\"object\"&&typeof c.length==\"number\"){this.setByArray(c);}}};YAHOO.lang.extend(KJUR.asn1.cades.CompleteCertificateRefs,KJUR.asn1.cms.Attribute);KJUR.asn1.cades.OtherCertID=function(d){KJUR.asn1.cades.OtherCertID.superclass.constructor.call(this);var a=KJUR.asn1;var c=KJUR.asn1.cms;var b=KJUR.asn1.cades;this.hasIssuerSerial=true;this.dOtherCertHash=null;this.dIssuerSerial=null;this.setByCertPEM=function(e){this.dOtherCertHash=new b.OtherHash(e);if(this.hasIssuerSerial){this.dIssuerSerial=new c.IssuerAndSerialNumber(e);}};this.getEncodedHex=function(){if(this.hTLV!=null){return this.hTLV;}if(this.dOtherCertHash==null){throw\"otherCertHash not set\";}var e=[this.dOtherCertHash];if(this.dIssuerSerial!=null){e.push(this.dIssuerSerial);}var f=new a.DERSequence({array:e});this.hTLV=f.getEncodedHex();return this.hTLV;};if(typeof d!=\"undefined\"){if(typeof d==\"string\"&&d.indexOf(\"-----BEGIN \")!=-1){this.setByCertPEM(d);}if((typeof d===\"undefined\"?\"undefined\":_typeof(d))==\"object\"){if(d.hasis===false){this.hasIssuerSerial=false;}if(typeof d.cert==\"string\"){this.setByCertPEM(d.cert);}}}};YAHOO.lang.extend(KJUR.asn1.cades.OtherCertID,KJUR.asn1.ASN1Object);KJUR.asn1.cades.OtherHash=function(c){KJUR.asn1.cades.OtherHash.superclass.constructor.call(this);var a=KJUR.asn1;var b=KJUR.asn1.cades;this.alg=\"sha256\";this.dOtherHash=null;this.setByCertPEM=function(d){if(d.indexOf(\"-----BEGIN \")==-1){throw\"certPEM not to seem PEM format\";}var e=X509.pemToHex(d);var f=KJUR.crypto.Util.hashHex(e,this.alg);this.dOtherHash=new b.OtherHashAlgAndValue({alg:this.alg,hash:f});};this.getEncodedHex=function(){if(this.dOtherHash==null){throw\"OtherHash not set\";}return this.dOtherHash.getEncodedHex();};if(typeof c!=\"undefined\"){if(typeof c==\"string\"){if(c.indexOf(\"-----BEGIN \")!=-1){this.setByCertPEM(c);}else{if(c.match(/^[0-9A-Fa-f]+$/)){this.dOtherHash=new a.DEROctetString({hex:c});}else{throw\"unsupported string value for params\";}}}else{if((typeof c===\"undefined\"?\"undefined\":_typeof(c))==\"object\"){if(typeof c.cert==\"string\"){if(typeof c.alg==\"string\"){this.alg=c.alg;}this.setByCertPEM(c.cert);}else{this.dOtherHash=new b.OtherHashAlgAndValue(c);}}}}};YAHOO.lang.extend(KJUR.asn1.cades.OtherHash,KJUR.asn1.ASN1Object);KJUR.asn1.cades.CAdESUtil=new function(){}();KJUR.asn1.cades.CAdESUtil.addSigTS=function(c,b,a){};KJUR.asn1.cades.CAdESUtil.parseSignedDataForAddingUnsigned=function(d){var q=KJUR.asn1;var p=KJUR.asn1.cms;var c=KJUR.asn1.cades.CAdESUtil;var a={};if(ASN1HEX.getDecendantHexTLVByNthList(d,0,[0])!=\"06092a864886f70d010702\"){throw\"hex is not CMS SignedData\";}var s=ASN1HEX.getDecendantIndexByNthList(d,0,[1,0]);var b=ASN1HEX.getPosArrayOfChildren_AtObj(d,s);if(b.length<4){throw\"num of SignedData elem shall be 4 at least\";}var f=b.shift();a.version=ASN1HEX.getHexOfTLV_AtObj(d,f);var l=b.shift();a.algs=ASN1HEX.getHexOfTLV_AtObj(d,l);var m=b.shift();a.encapcontent=ASN1HEX.getHexOfTLV_AtObj(d,m);a.certs=null;a.revs=null;a.si=[];var n=b.shift();if(d.substr(n,2)==\"a0\"){a.certs=ASN1HEX.getHexOfTLV_AtObj(d,n);n=b.shift();}if(d.substr(n,2)==\"a1\"){a.revs=ASN1HEX.getHexOfTLV_AtObj(d,n);n=b.shift();}var k=n;if(d.substr(k,2)!=\"31\"){throw\"Can't find signerInfos\";}var j=ASN1HEX.getPosArrayOfChildren_AtObj(d,k);for(var h=0;h<j.length;h++){var o=j[h];var e=c.parseSignerInfoForAddingUnsigned(d,o,h);a.si[h]=e;}var g=null;a.obj=new p.SignedData();g=new q.ASN1Object();g.hTLV=a.version;a.obj.dCMSVersion=g;g=new q.ASN1Object();g.hTLV=a.algs;a.obj.dDigestAlgs=g;g=new q.ASN1Object();g.hTLV=a.encapcontent;a.obj.dEncapContentInfo=g;g=new q.ASN1Object();g.hTLV=a.certs;a.obj.dCerts=g;a.obj.signerInfoList=[];for(var h=0;h<a.si.length;h++){a.obj.signerInfoList.push(a.si[h].obj);}return a;};KJUR.asn1.cades.CAdESUtil.parseSignerInfoForAddingUnsigned=function(d,k,a){var m=KJUR.asn1;var l=KJUR.asn1.cms;var b={};var e=ASN1HEX.getPosArrayOfChildren_AtObj(d,k);if(e.length!=6){throw\"not supported items for SignerInfo (!=6)\";}var f=e.shift();b.version=ASN1HEX.getHexOfTLV_AtObj(d,f);var n=e.shift();b.si=ASN1HEX.getHexOfTLV_AtObj(d,n);var h=e.shift();b.digalg=ASN1HEX.getHexOfTLV_AtObj(d,h);var c=e.shift();b.sattrs=ASN1HEX.getHexOfTLV_AtObj(d,c);var i=e.shift();b.sigalg=ASN1HEX.getHexOfTLV_AtObj(d,i);var j=e.shift();b.sig=ASN1HEX.getHexOfTLV_AtObj(d,j);b.sigval=ASN1HEX.getHexOfV_AtObj(d,j);var g=null;b.obj=new l.SignerInfo();g=new m.ASN1Object();g.hTLV=b.version;b.obj.dCMSVersion=g;g=new m.ASN1Object();g.hTLV=b.si;b.obj.dSignerIdentifier=g;g=new m.ASN1Object();g.hTLV=b.digalg;b.obj.dDigestAlgorithm=g;g=new m.ASN1Object();g.hTLV=b.sattrs;b.obj.dSignedAttrs=g;g=new m.ASN1Object();g.hTLV=b.sigalg;b.obj.dSigAlg=g;g=new m.ASN1Object();g.hTLV=b.sig;b.obj.dSig=g;b.obj.dUnsignedAttrs=new l.AttributeList();return b;};/*! asn1csr-1.0.0.js (c) 2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR.asn1.csr==\"undefined\"||!KJUR.asn1.csr){KJUR.asn1.csr={};}KJUR.asn1.csr.CertificationRequest=function(f){KJUR.asn1.csr.CertificationRequest.superclass.constructor.call(this);var b=null;var d=null;var e=null;var c=null;var a=null;this.sign=function(i,h){if(this.prvKey==null){this.prvKey=h;}this.asn1SignatureAlg=new KJUR.asn1.x509.AlgorithmIdentifier({name:i});sig=new KJUR.crypto.Signature({alg:i});sig.initSign(this.prvKey);sig.updateHex(this.asn1CSRInfo.getEncodedHex());this.hexSig=sig.sign();this.asn1Sig=new KJUR.asn1.DERBitString({hex:\"00\"+this.hexSig});var g=new KJUR.asn1.DERSequence({array:[this.asn1CSRInfo,this.asn1SignatureAlg,this.asn1Sig]});this.hTLV=g.getEncodedHex();this.isModified=false;};this.getPEMString=function(){var g=KJUR.asn1.ASN1Util.getPEMStringFromHex(this.getEncodedHex(),\"CERTIFICATE REQUEST\");return g;};this.getEncodedHex=function(){if(this.isModified==false&&this.hTLV!=null){return this.hTLV;}throw\"not signed yet\";};if(typeof f!=\"undefined\"){if(typeof f.csrinfo!=\"undefined\"){this.asn1CSRInfo=f.csrinfo;}}};YAHOO.lang.extend(KJUR.asn1.csr.CertificationRequest,KJUR.asn1.ASN1Object);KJUR.asn1.csr.CertificationRequestInfo=function(a){KJUR.asn1.csr.CertificationRequestInfo.superclass.constructor.call(this);this._initialize=function(){this.asn1Array=new Array();this.asn1Version=new KJUR.asn1.DERInteger({\"int\":0});this.asn1Subject=null;this.asn1SubjPKey=null;this.extensionsArray=new Array();};this.setSubjectByParam=function(b){this.asn1Subject=new KJUR.asn1.x509.X500Name(b);};this.setSubjectPublicKeyByGetKey=function(c){var b=KEYUTIL.getKey(c);this.asn1SubjPKey=new KJUR.asn1.x509.SubjectPublicKeyInfo(b);};this.getEncodedHex=function(){this.asn1Array=new Array();this.asn1Array.push(this.asn1Version);this.asn1Array.push(this.asn1Subject);this.asn1Array.push(this.asn1SubjPKey);var c=new KJUR.asn1.DERSequence({array:this.extensionsArray});var b=new KJUR.asn1.DERTaggedObject({explicit:false,tag:\"a0\",obj:c});this.asn1Array.push(b);var d=new KJUR.asn1.DERSequence({array:this.asn1Array});this.hTLV=d.getEncodedHex();this.isModified=false;return this.hTLV;};this._initialize();};YAHOO.lang.extend(KJUR.asn1.csr.CertificationRequestInfo,KJUR.asn1.ASN1Object);KJUR.asn1.csr.CSRUtil=new function(){}();KJUR.asn1.csr.CSRUtil.newCSRPEM=function(f){var c=KJUR.asn1.csr;if(f.subject===undefined){throw\"parameter subject undefined\";}if(f.sbjpubkey===undefined){throw\"parameter sbjpubkey undefined\";}if(f.sigalg===undefined){throw\"parameter sigalg undefined\";}if(f.sbjprvkey===undefined){throw\"parameter sbjpubkey undefined\";}var b=new c.CertificationRequestInfo();b.setSubjectByParam(f.subject);b.setSubjectPublicKeyByGetKey(f.sbjpubkey);var d=new c.CertificationRequest({csrinfo:b});var a=KEYUTIL.getKey(f.sbjprvkey);d.sign(f.sigalg,a);var e=d.getPEMString();return e;};/*! base64x-1.1.5 (c) 2012-2015 Kenji Urushima | kjur.github.com/jsjws/license\n */function Base64x(){}function stoBA(d){var b=new Array();for(var c=0;c<d.length;c++){b[c]=d.charCodeAt(c);}return b;}function BAtos(b){var d=\"\";for(var c=0;c<b.length;c++){d=d+String.fromCharCode(b[c]);}return d;}function BAtohex(b){var e=\"\";for(var d=0;d<b.length;d++){var c=b[d].toString(16);if(c.length==1){c=\"0\"+c;}e=e+c;}return e;}function stohex(a){return BAtohex(stoBA(a));}function stob64(a){return hex2b64(stohex(a));}function stob64u(a){return b64tob64u(hex2b64(stohex(a)));}function b64utos(a){return BAtos(b64toBA(b64utob64(a)));}function b64tob64u(a){a=a.replace(/\\=/g,\"\");a=a.replace(/\\+/g,\"-\");a=a.replace(/\\//g,\"_\");return a;}function b64utob64(a){if(a.length%4==2){a=a+\"==\";}else{if(a.length%4==3){a=a+\"=\";}}a=a.replace(/-/g,\"+\");a=a.replace(/_/g,\"/\");return a;}function hextob64u(a){if(a.length%2==1){a=\"0\"+a;}return b64tob64u(hex2b64(a));}function b64utohex(a){return b64tohex(b64utob64(a));}var utf8tob64u,b64utoutf8;if(typeof Buffer===\"function\"){utf8tob64u=function utf8tob64u(a){return b64tob64u(new Buffer(a,\"utf8\").toString(\"base64\"));};b64utoutf8=function b64utoutf8(a){return new Buffer(b64utob64(a),\"base64\").toString(\"utf8\");};}else{utf8tob64u=function utf8tob64u(a){return hextob64u(uricmptohex(encodeURIComponentAll(a)));};b64utoutf8=function b64utoutf8(a){return decodeURIComponent(hextouricmp(b64utohex(a)));};}function utf8tob64(a){return hex2b64(uricmptohex(encodeURIComponentAll(a)));}function b64toutf8(a){return decodeURIComponent(hextouricmp(b64tohex(a)));}function utf8tohex(a){return uricmptohex(encodeURIComponentAll(a));}function hextoutf8(a){return decodeURIComponent(hextouricmp(a));}function hextorstr(c){var b=\"\";for(var a=0;a<c.length-1;a+=2){b+=String.fromCharCode(parseInt(c.substr(a,2),16));}return b;}function rstrtohex(c){var a=\"\";for(var b=0;b<c.length;b++){a+=(\"0\"+c.charCodeAt(b).toString(16)).slice(-2);}return a;}function hextob64(a){return hex2b64(a);}function hextob64nl(b){var a=hextob64(b);var c=a.replace(/(.{64})/g,\"$1\\r\\n\");c=c.replace(/\\r\\n$/,\"\");return c;}function b64nltohex(b){var a=b.replace(/[^0-9A-Za-z\\/+=]*/g,\"\");var c=b64tohex(a);return c;}function uricmptohex(a){return a.replace(/%/g,\"\");}function hextouricmp(a){return a.replace(/(..)/g,\"%$1\");}function encodeURIComponentAll(a){var d=encodeURIComponent(a);var b=\"\";for(var c=0;c<d.length;c++){if(d[c]==\"%\"){b=b+d.substr(c,3);c=c+2;}else{b=b+\"%\"+stohex(d[c]);}}return b;}function newline_toUnix(a){a=a.replace(/\\r\\n/mg,\"\\n\");return a;}function newline_toDos(a){a=a.replace(/\\r\\n/mg,\"\\n\");a=a.replace(/\\n/mg,\"\\r\\n\");return a;}var strdiffidx=function strdiffidx(c,a){var d=c.length;if(c.length>a.length){d=a.length;}for(var b=0;b<d;b++){if(c.charCodeAt(b)!=a.charCodeAt(b)){return b;}}if(c.length!=a.length){return d;}return-1;};/*! crypto-1.1.7.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={};}KJUR.crypto.Util=new function(){this.DIGESTINFOHEAD={sha1:\"3021300906052b0e03021a05000414\",sha224:\"302d300d06096086480165030402040500041c\",sha256:\"3031300d060960864801650304020105000420\",sha384:\"3041300d060960864801650304020205000430\",sha512:\"3051300d060960864801650304020305000440\",md2:\"3020300c06082a864886f70d020205000410\",md5:\"3020300c06082a864886f70d020505000410\",ripemd160:\"3021300906052b2403020105000414\"};this.DEFAULTPROVIDER={md5:\"cryptojs\",sha1:\"cryptojs\",sha224:\"cryptojs\",sha256:\"cryptojs\",sha384:\"cryptojs\",sha512:\"cryptojs\",ripemd160:\"cryptojs\",hmacmd5:\"cryptojs\",hmacsha1:\"cryptojs\",hmacsha224:\"cryptojs\",hmacsha256:\"cryptojs\",hmacsha384:\"cryptojs\",hmacsha512:\"cryptojs\",hmacripemd160:\"cryptojs\",MD5withRSA:\"cryptojs/jsrsa\",SHA1withRSA:\"cryptojs/jsrsa\",SHA224withRSA:\"cryptojs/jsrsa\",SHA256withRSA:\"cryptojs/jsrsa\",SHA384withRSA:\"cryptojs/jsrsa\",SHA512withRSA:\"cryptojs/jsrsa\",RIPEMD160withRSA:\"cryptojs/jsrsa\",MD5withECDSA:\"cryptojs/jsrsa\",SHA1withECDSA:\"cryptojs/jsrsa\",SHA224withECDSA:\"cryptojs/jsrsa\",SHA256withECDSA:\"cryptojs/jsrsa\",SHA384withECDSA:\"cryptojs/jsrsa\",SHA512withECDSA:\"cryptojs/jsrsa\",RIPEMD160withECDSA:\"cryptojs/jsrsa\",SHA1withDSA:\"cryptojs/jsrsa\",SHA224withDSA:\"cryptojs/jsrsa\",SHA256withDSA:\"cryptojs/jsrsa\",MD5withRSAandMGF1:\"cryptojs/jsrsa\",SHA1withRSAandMGF1:\"cryptojs/jsrsa\",SHA224withRSAandMGF1:\"cryptojs/jsrsa\",SHA256withRSAandMGF1:\"cryptojs/jsrsa\",SHA384withRSAandMGF1:\"cryptojs/jsrsa\",SHA512withRSAandMGF1:\"cryptojs/jsrsa\",RIPEMD160withRSAandMGF1:\"cryptojs/jsrsa\"};this.CRYPTOJSMESSAGEDIGESTNAME={md5:\"CryptoJS.algo.MD5\",sha1:\"CryptoJS.algo.SHA1\",sha224:\"CryptoJS.algo.SHA224\",sha256:\"CryptoJS.algo.SHA256\",sha384:\"CryptoJS.algo.SHA384\",sha512:\"CryptoJS.algo.SHA512\",ripemd160:\"CryptoJS.algo.RIPEMD160\"};this.getDigestInfoHex=function(a,b){if(typeof this.DIGESTINFOHEAD[b]==\"undefined\"){throw\"alg not supported in Util.DIGESTINFOHEAD: \"+b;}return this.DIGESTINFOHEAD[b]+a;};this.getPaddedDigestInfoHex=function(h,a,j){var c=this.getDigestInfoHex(h,a);var d=j/4;if(c.length+22>d){throw\"key is too short for SigAlg: keylen=\"+j+\",\"+a;}var b=\"0001\";var k=\"00\"+c;var g=\"\";var l=d-b.length-k.length;for(var f=0;f<l;f+=2){g+=\"ff\";}var e=b+g+k;return e;};this.hashString=function(a,c){var b=new KJUR.crypto.MessageDigest({alg:c});return b.digestString(a);};this.hashHex=function(b,c){var a=new KJUR.crypto.MessageDigest({alg:c});return a.digestHex(b);};this.sha1=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha1\",prov:\"cryptojs\"});return b.digestString(a);};this.sha256=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha256\",prov:\"cryptojs\"});return b.digestString(a);};this.sha256Hex=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha256\",prov:\"cryptojs\"});return b.digestHex(a);};this.sha512=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha512\",prov:\"cryptojs\"});return b.digestString(a);};this.sha512Hex=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"sha512\",prov:\"cryptojs\"});return b.digestHex(a);};this.md5=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"md5\",prov:\"cryptojs\"});return b.digestString(a);};this.ripemd160=function(a){var b=new KJUR.crypto.MessageDigest({alg:\"ripemd160\",prov:\"cryptojs\"});return b.digestString(a);};this.getCryptoJSMDByName=function(a){};}();KJUR.crypto.MessageDigest=function(params){var md=null;var algName=null;var provName=null;this.setAlgAndProvider=function(alg,prov){if(alg!=null&&prov===undefined){prov=KJUR.crypto.Util.DEFAULTPROVIDER[alg];}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(alg)!=-1&&prov==\"cryptojs\"){try{this.md=eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[alg]).create();}catch(ex){throw\"setAlgAndProvider hash alg set fail alg=\"+alg+\"/\"+ex;}this.updateString=function(str){this.md.update(str);};this.updateHex=function(hex){var wHex=CryptoJS.enc.Hex.parse(hex);this.md.update(wHex);};this.digest=function(){var hash=this.md.finalize();return hash.toString(CryptoJS.enc.Hex);};this.digestString=function(str){this.updateString(str);return this.digest();};this.digestHex=function(hex){this.updateHex(hex);return this.digest();};}if(\":sha256:\".indexOf(alg)!=-1&&prov==\"sjcl\"){try{this.md=new sjcl.hash.sha256();}catch(ex){throw\"setAlgAndProvider hash alg set fail alg=\"+alg+\"/\"+ex;}this.updateString=function(str){this.md.update(str);};this.updateHex=function(hex){var baHex=sjcl.codec.hex.toBits(hex);this.md.update(baHex);};this.digest=function(){var hash=this.md.finalize();return sjcl.codec.hex.fromBits(hash);};this.digestString=function(str){this.updateString(str);return this.digest();};this.digestHex=function(hex){this.updateHex(hex);return this.digest();};}};this.updateString=function(str){throw\"updateString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName;};this.updateHex=function(hex){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName;};this.digest=function(){throw\"digest() not supported for this alg/prov: \"+this.algName+\"/\"+this.provName;};this.digestString=function(str){throw\"digestString(str) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName;};this.digestHex=function(hex){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algName+\"/\"+this.provName;};if(params!==undefined){if(params.alg!==undefined){this.algName=params.alg;if(params.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];}this.setAlgAndProvider(this.algName,this.provName);}}};KJUR.crypto.Mac=function(params){var mac=null;var pass=null;var algName=null;var provName=null;var algProv=null;this.setAlgAndProvider=function(alg,prov){if(alg==null){alg=\"hmacsha1\";}alg=alg.toLowerCase();if(alg.substr(0,4)!=\"hmac\"){throw\"setAlgAndProvider unsupported HMAC alg: \"+alg;}if(prov===undefined){prov=KJUR.crypto.Util.DEFAULTPROVIDER[alg];}this.algProv=alg+\"/\"+prov;var hashAlg=alg.substr(4);if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(hashAlg)!=-1&&prov==\"cryptojs\"){try{var mdObj=eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[hashAlg]);this.mac=CryptoJS.algo.HMAC.create(mdObj,this.pass);}catch(ex){throw\"setAlgAndProvider hash alg set fail hashAlg=\"+hashAlg+\"/\"+ex;}this.updateString=function(str){this.mac.update(str);};this.updateHex=function(hex){var wHex=CryptoJS.enc.Hex.parse(hex);this.mac.update(wHex);};this.doFinal=function(){var hash=this.mac.finalize();return hash.toString(CryptoJS.enc.Hex);};this.doFinalString=function(str){this.updateString(str);return this.doFinal();};this.doFinalHex=function(hex){this.updateHex(hex);return this.doFinal();};}};this.updateString=function(str){throw\"updateString(str) not supported for this alg/prov: \"+this.algProv;};this.updateHex=function(hex){throw\"updateHex(hex) not supported for this alg/prov: \"+this.algProv;};this.doFinal=function(){throw\"digest() not supported for this alg/prov: \"+this.algProv;};this.doFinalString=function(str){throw\"digestString(str) not supported for this alg/prov: \"+this.algProv;};this.doFinalHex=function(hex){throw\"digestHex(hex) not supported for this alg/prov: \"+this.algProv;};this.setPassword=function(pass){if(typeof pass==\"string\"){var hPass=pass;if(pass.length%2==1||!pass.match(/^[0-9A-Fa-f]+$/)){hPass=rstrtohex(pass);}this.pass=CryptoJS.enc.Hex.parse(hPass);return;}if((typeof pass===\"undefined\"?\"undefined\":_typeof(pass))!=\"object\"){throw\"KJUR.crypto.Mac unsupported password type: \"+pass;}var hPass=null;if(pass.hex!==undefined){if(pass.hex.length%2!=0||!pass.hex.match(/^[0-9A-Fa-f]+$/)){throw\"Mac: wrong hex password: \"+pass.hex;}hPass=pass.hex;}if(pass.utf8!==undefined){hPass=utf8tohex(pass.utf8);}if(pass.rstr!==undefined){hPass=rstrtohex(pass.rstr);}if(pass.b64!==undefined){hPass=b64tohex(pass.b64);}if(pass.b64u!==undefined){hPass=b64utohex(pass.b64u);}if(hPass==null){throw\"KJUR.crypto.Mac unsupported password type: \"+pass;}this.pass=CryptoJS.enc.Hex.parse(hPass);};if(params!==undefined){if(params.pass!==undefined){this.setPassword(params.pass);}if(params.alg!==undefined){this.algName=params.alg;if(params.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];}this.setAlgAndProvider(this.algName,this.provName);}}};KJUR.crypto.Signature=function(o){var q=null;var n=null;var r=null;var c=null;var l=null;var d=null;var k=null;var h=null;var p=null;var e=null;var b=-1;var g=null;var j=null;var a=null;var i=null;var f=null;this._setAlgNames=function(){if(this.algName.match(/^(.+)with(.+)$/)){this.mdAlgName=RegExp.$1.toLowerCase();this.pubkeyAlgName=RegExp.$2.toLowerCase();}};this._zeroPaddingOfSignature=function(x,w){var v=\"\";var t=w/4-x.length;for(var u=0;u<t;u++){v=v+\"0\";}return v+x;};this.setAlgAndProvider=function(u,t){this._setAlgNames();if(t!=\"cryptojs/jsrsa\"){throw\"provider not supported: \"+t;}if(\":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:\".indexOf(this.mdAlgName)!=-1){try{this.md=new KJUR.crypto.MessageDigest({alg:this.mdAlgName});}catch(s){throw\"setAlgAndProvider hash alg set fail alg=\"+this.mdAlgName+\"/\"+s;}this.init=function(w,x){var y=null;try{if(x===undefined){y=KEYUTIL.getKey(w);}else{y=KEYUTIL.getKey(w,x);}}catch(v){throw\"init failed:\"+v;}if(y.isPrivate===true){this.prvKey=y;this.state=\"SIGN\";}else{if(y.isPublic===true){this.pubKey=y;this.state=\"VERIFY\";}else{throw\"init failed.:\"+y;}}};this.initSign=function(v){if(typeof v.ecprvhex==\"string\"&&typeof v.eccurvename==\"string\"){this.ecprvhex=v.ecprvhex;this.eccurvename=v.eccurvename;}else{this.prvKey=v;}this.state=\"SIGN\";};this.initVerifyByPublicKey=function(v){if(typeof v.ecpubhex==\"string\"&&typeof v.eccurvename==\"string\"){this.ecpubhex=v.ecpubhex;this.eccurvename=v.eccurvename;}else{if(v instanceof KJUR.crypto.ECDSA){this.pubKey=v;}else{if(v instanceof RSAKey){this.pubKey=v;}}}this.state=\"VERIFY\";};this.initVerifyByCertificatePEM=function(v){var w=new X509();w.readCertPEM(v);this.pubKey=w.subjectPublicKeyRSA;this.state=\"VERIFY\";};this.updateString=function(v){this.md.updateString(v);};this.updateHex=function(v){this.md.updateHex(v);};this.sign=function(){this.sHashHex=this.md.digest();if(typeof this.ecprvhex!=\"undefined\"&&typeof this.eccurvename!=\"undefined\"){var v=new KJUR.crypto.ECDSA({curve:this.eccurvename});this.hSign=v.signHex(this.sHashHex,this.ecprvhex);}else{if(this.prvKey instanceof RSAKey&&this.pubkeyAlgName==\"rsaandmgf1\"){this.hSign=this.prvKey.signWithMessageHashPSS(this.sHashHex,this.mdAlgName,this.pssSaltLen);}else{if(this.prvKey instanceof RSAKey&&this.pubkeyAlgName==\"rsa\"){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex,this.mdAlgName);}else{if(this.prvKey instanceof KJUR.crypto.ECDSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex);}else{if(this.prvKey instanceof KJUR.crypto.DSA){this.hSign=this.prvKey.signWithMessageHash(this.sHashHex);}else{throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName;}}}}}return this.hSign;};this.signString=function(v){this.updateString(v);return this.sign();};this.signHex=function(v){this.updateHex(v);return this.sign();};this.verify=function(v){this.sHashHex=this.md.digest();if(typeof this.ecpubhex!=\"undefined\"&&typeof this.eccurvename!=\"undefined\"){var w=new KJUR.crypto.ECDSA({curve:this.eccurvename});return w.verifyHex(this.sHashHex,v,this.ecpubhex);}else{if(this.pubKey instanceof RSAKey&&this.pubkeyAlgName==\"rsaandmgf1\"){return this.pubKey.verifyWithMessageHashPSS(this.sHashHex,v,this.mdAlgName,this.pssSaltLen);}else{if(this.pubKey instanceof RSAKey&&this.pubkeyAlgName==\"rsa\"){return this.pubKey.verifyWithMessageHash(this.sHashHex,v);}else{if(this.pubKey instanceof KJUR.crypto.ECDSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v);}else{if(this.pubKey instanceof KJUR.crypto.DSA){return this.pubKey.verifyWithMessageHash(this.sHashHex,v);}else{throw\"Signature: unsupported public key alg: \"+this.pubkeyAlgName;}}}}}};}};this.init=function(s,t){throw\"init(key, pass) not supported for this alg:prov=\"+this.algProvName;};this.initVerifyByPublicKey=function(s){throw\"initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov=\"+this.algProvName;};this.initVerifyByCertificatePEM=function(s){throw\"initVerifyByCertificatePEM(certPEM) not supported for this alg:prov=\"+this.algProvName;};this.initSign=function(s){throw\"initSign(prvKey) not supported for this alg:prov=\"+this.algProvName;};this.updateString=function(s){throw\"updateString(str) not supported for this alg:prov=\"+this.algProvName;};this.updateHex=function(s){throw\"updateHex(hex) not supported for this alg:prov=\"+this.algProvName;};this.sign=function(){throw\"sign() not supported for this alg:prov=\"+this.algProvName;};this.signString=function(s){throw\"digestString(str) not supported for this alg:prov=\"+this.algProvName;};this.signHex=function(s){throw\"digestHex(hex) not supported for this alg:prov=\"+this.algProvName;};this.verify=function(s){throw\"verify(hSigVal) not supported for this alg:prov=\"+this.algProvName;};this.initParams=o;if(o!==undefined){if(o.alg!==undefined){this.algName=o.alg;if(o.prov===undefined){this.provName=KJUR.crypto.Util.DEFAULTPROVIDER[this.algName];}else{this.provName=o.prov;}this.algProvName=this.algName+\":\"+this.provName;this.setAlgAndProvider(this.algName,this.provName);this._setAlgNames();}if(o.psssaltlen!==undefined){this.pssSaltLen=o.psssaltlen;}if(o.prvkeypem!==undefined){if(o.prvkeypas!==undefined){throw\"both prvkeypem and prvkeypas parameters not supported\";}else{try{var q=new RSAKey();q.readPrivateKeyFromPEMString(o.prvkeypem);this.initSign(q);}catch(m){throw\"fatal error to load pem private key: \"+m;}}}}};KJUR.crypto.OID=new function(){this.oidhex2name={\"2a864886f70d010101\":\"rsaEncryption\",\"2a8648ce3d0201\":\"ecPublicKey\",\"2a8648ce380401\":\"dsa\",\"2a8648ce3d030107\":\"secp256r1\",\"2b8104001f\":\"secp192k1\",\"2b81040021\":\"secp224r1\",\"2b8104000a\":\"secp256k1\",\"2b81040023\":\"secp521r1\",\"2b81040022\":\"secp384r1\",\"2a8648ce380403\":\"SHA1withDSA\",\"608648016503040301\":\"SHA224withDSA\",\"608648016503040302\":\"SHA256withDSA\"};}();/*! ecdsa-modified-1.0.4.js (c) Stephan Thomas, Kenji Urushima | github.com/bitcoinjs/bitcoinjs-lib/blob/master/LICENSE\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={};}KJUR.crypto.ECDSA=function(h){var e=\"secp256r1\";var g=null;var b=null;var f=null;var a=new SecureRandom();var d=null;this.type=\"EC\";function c(s,o,r,n){var j=Math.max(o.bitLength(),n.bitLength());var t=s.add2D(r);var q=s.curve.getInfinity();for(var p=j-1;p>=0;--p){q=q.twice2D();q.z=BigInteger.ONE;if(o.testBit(p)){if(n.testBit(p)){q=q.add2D(t);}else{q=q.add2D(s);}}else{if(n.testBit(p)){q=q.add2D(r);}}}return q;}this.getBigRandom=function(i){return new BigInteger(i.bitLength(),a).mod(i.subtract(BigInteger.ONE)).add(BigInteger.ONE);};this.setNamedCurve=function(i){this.ecparams=KJUR.crypto.ECParameterDB.getByName(i);this.prvKeyHex=null;this.pubKeyHex=null;this.curveName=i;};this.setPrivateKeyHex=function(i){this.isPrivate=true;this.prvKeyHex=i;};this.setPublicKeyHex=function(i){this.isPublic=true;this.pubKeyHex=i;};this.generateKeyPairHex=function(){var k=this.ecparams.n;var n=this.getBigRandom(k);var l=this.ecparams.G.multiply(n);var q=l.getX().toBigInteger();var o=l.getY().toBigInteger();var i=this.ecparams.keylen/4;var m=(\"0000000000\"+n.toString(16)).slice(-i);var r=(\"0000000000\"+q.toString(16)).slice(-i);var p=(\"0000000000\"+o.toString(16)).slice(-i);var j=\"04\"+r+p;this.setPrivateKeyHex(m);this.setPublicKeyHex(j);return{ecprvhex:m,ecpubhex:j};};this.signWithMessageHash=function(i){return this.signHex(i,this.prvKeyHex);};this.signHex=function(o,j){var t=new BigInteger(j,16);var l=this.ecparams.n;var q=new BigInteger(o,16);do{var m=this.getBigRandom(l);var u=this.ecparams.G;var p=u.multiply(m);var i=p.getX().toBigInteger().mod(l);}while(i.compareTo(BigInteger.ZERO)<=0);var v=m.modInverse(l).multiply(q.add(t.multiply(i))).mod(l);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(i,v);};this.sign=function(m,u){var q=u;var j=this.ecparams.n;var p=BigInteger.fromByteArrayUnsigned(m);do{var l=this.getBigRandom(j);var t=this.ecparams.G;var o=t.multiply(l);var i=o.getX().toBigInteger().mod(j);}while(i.compareTo(BigInteger.ZERO)<=0);var v=l.modInverse(j).multiply(p.add(q.multiply(i))).mod(j);return this.serializeSig(i,v);};this.verifyWithMessageHash=function(j,i){return this.verifyHex(j,i,this.pubKeyHex);};this.verifyHex=function(m,i,p){var l,j;var o=KJUR.crypto.ECDSA.parseSigHex(i);l=o.r;j=o.s;var k;k=ECPointFp.decodeFromHex(this.ecparams.curve,p);var n=new BigInteger(m,16);return this.verifyRaw(n,l,j,k);};this.verify=function(o,p,j){var l,i;if(Bitcoin.Util.isArray(p)){var n=this.parseSig(p);l=n.r;i=n.s;}else{if(\"object\"===(typeof p===\"undefined\"?\"undefined\":_typeof(p))&&p.r&&p.s){l=p.r;i=p.s;}else{throw\"Invalid value for signature\";}}var k;if(j instanceof ECPointFp){k=j;}else{if(Bitcoin.Util.isArray(j)){k=ECPointFp.decodeFrom(this.ecparams.curve,j);}else{throw\"Invalid format for pubkey value, must be byte array or ECPointFp\";}}var m=BigInteger.fromByteArrayUnsigned(o);return this.verifyRaw(m,l,i,k);};this.verifyRaw=function(o,i,w,m){var l=this.ecparams.n;var u=this.ecparams.G;if(i.compareTo(BigInteger.ONE)<0||i.compareTo(l)>=0){return false;}if(w.compareTo(BigInteger.ONE)<0||w.compareTo(l)>=0){return false;}var p=w.modInverse(l);var k=o.multiply(p).mod(l);var j=i.multiply(p).mod(l);var q=u.multiply(k).add(m.multiply(j));var t=q.getX().toBigInteger().mod(l);return t.equals(i);};this.serializeSig=function(k,j){var l=k.toByteArraySigned();var i=j.toByteArraySigned();var m=[];m.push(2);m.push(l.length);m=m.concat(l);m.push(2);m.push(i.length);m=m.concat(i);m.unshift(m.length);m.unshift(48);return m;};this.parseSig=function(n){var m;if(n[0]!=48){throw new Error(\"Signature not a valid DERSequence\");}m=2;if(n[m]!=2){throw new Error(\"First element in signature must be a DERInteger\");}var l=n.slice(m+2,m+2+n[m+1]);m+=2+n[m+1];if(n[m]!=2){throw new Error(\"Second element in signature must be a DERInteger\");}var i=n.slice(m+2,m+2+n[m+1]);m+=2+n[m+1];var k=BigInteger.fromByteArrayUnsigned(l);var j=BigInteger.fromByteArrayUnsigned(i);return{r:k,s:j};};this.parseSigCompact=function(m){if(m.length!==65){throw\"Signature has the wrong length\";}var j=m[0]-27;if(j<0||j>7){throw\"Invalid signature type\";}var o=this.ecparams.n;var l=BigInteger.fromByteArrayUnsigned(m.slice(1,33)).mod(o);var k=BigInteger.fromByteArrayUnsigned(m.slice(33,65)).mod(o);return{r:l,s:k,i:j};};if(h!==undefined){if(h.curve!==undefined){this.curveName=h.curve;}}if(this.curveName===undefined){this.curveName=e;}this.setNamedCurve(this.curveName);if(h!==undefined){if(h.prv!==undefined){this.setPrivateKeyHex(h.prv);}if(h.pub!==undefined){this.setPublicKeyHex(h.pub);}}};KJUR.crypto.ECDSA.parseSigHex=function(a){var b=KJUR.crypto.ECDSA.parseSigHexInHexRS(a);var d=new BigInteger(b.r,16);var c=new BigInteger(b.s,16);return{r:d,s:c};};KJUR.crypto.ECDSA.parseSigHexInHexRS=function(c){if(c.substr(0,2)!=\"30\"){throw\"signature is not a ASN.1 sequence\";}var b=ASN1HEX.getPosArrayOfChildren_AtObj(c,0);if(b.length!=2){throw\"number of signature ASN.1 sequence elements seem wrong\";}var g=b[0];var f=b[1];if(c.substr(g,2)!=\"02\"){throw\"1st item of sequene of signature is not ASN.1 integer\";}if(c.substr(f,2)!=\"02\"){throw\"2nd item of sequene of signature is not ASN.1 integer\";}var e=ASN1HEX.getHexOfV_AtObj(c,g);var d=ASN1HEX.getHexOfV_AtObj(c,f);return{r:e,s:d};};KJUR.crypto.ECDSA.asn1SigToConcatSig=function(c){var d=KJUR.crypto.ECDSA.parseSigHexInHexRS(c);var b=d.r;var a=d.s;if(b.substr(0,2)==\"00\"&&b.length/2*8%(16*8)==8){b=b.substr(2);}if(a.substr(0,2)==\"00\"&&a.length/2*8%(16*8)==8){a=a.substr(2);}if(b.length/2*8%(16*8)!=0){throw\"unknown ECDSA sig r length error\";}if(a.length/2*8%(16*8)!=0){throw\"unknown ECDSA sig s length error\";}return b+a;};KJUR.crypto.ECDSA.concatSigToASN1Sig=function(a){if(a.length/2*8%(16*8)!=0){throw\"unknown ECDSA concatinated r-s sig  length error\";}var c=a.substr(0,a.length/2);var b=a.substr(a.length/2);return KJUR.crypto.ECDSA.hexRSSigToASN1Sig(c,b);};KJUR.crypto.ECDSA.hexRSSigToASN1Sig=function(b,a){var d=new BigInteger(b,16);var c=new BigInteger(a,16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(d,c);};KJUR.crypto.ECDSA.biRSSigToASN1Sig=function(e,c){var b=new KJUR.asn1.DERInteger({bigint:e});var a=new KJUR.asn1.DERInteger({bigint:c});var d=new KJUR.asn1.DERSequence({array:[b,a]});return d.getEncodedHex();};/*! ecparam-1.0.0.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={};}KJUR.crypto.ECParameterDB=new function(){var b={};var c={};function a(d){return new BigInteger(d,16);}this.getByName=function(e){var d=e;if(typeof c[d]!=\"undefined\"){d=c[e];}if(typeof b[d]!=\"undefined\"){return b[d];}throw\"unregistered EC curve name: \"+d;};this.regist=function(A,l,o,g,m,e,j,f,k,u,d,x){b[A]={};var s=a(o);var z=a(g);var y=a(m);var t=a(e);var w=a(j);var r=new ECCurveFp(s,z,y);var q=r.decodePointHex(\"04\"+f+k);b[A][\"name\"]=A;b[A][\"keylen\"]=l;b[A][\"curve\"]=r;b[A][\"G\"]=q;b[A][\"n\"]=t;b[A][\"h\"]=w;b[A][\"oid\"]=d;b[A][\"info\"]=x;for(var v=0;v<u.length;v++){c[u[v]]=A;}};}();KJUR.crypto.ECParameterDB.regist(\"secp128r1\",128,\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\",\"E87579C11079F43DD824993C2CEE5ED3\",\"FFFFFFFE0000000075A30D1B9038A115\",\"1\",\"161FF7528B899B2D0C28607CA52C5B86\",\"CF5AC8395BAFEB13C02DA292DDED7A83\",[],\"\",\"secp128r1 : SECG curve over a 128 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160k1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\",\"0\",\"7\",\"0100000000000000000001B8FA16DFAB9ACA16B6B3\",\"1\",\"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\",\"938CF935318FDCED6BC28286531733C3F03C4FEE\",[],\"\",\"secp160k1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp160r1\",160,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\",\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\",\"0100000000000000000001F4C8F927AED3CA752257\",\"1\",\"4A96B5688EF573284664698968C38BB913CBFC82\",\"23A628553168947D59DCC912042351377AC5FB32\",[],\"\",\"secp160r1 : SECG curve over a 160 bit prime field\");KJUR.crypto.ECParameterDB.regist(\"secp192k1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\",\"0\",\"3\",\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\",\"1\",\"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\",\"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\",[]);KJUR.crypto.ECParameterDB.regist(\"secp192r1\",192,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\",\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\",\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\",\"1\",\"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\",\"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\",[]);KJUR.crypto.ECParameterDB.regist(\"secp224r1\",224,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\",\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\",\"1\",\"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\",\"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256k1\",256,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F\",\"0\",\"7\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\",\"1\",\"79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798\",\"483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8\",[]);KJUR.crypto.ECParameterDB.regist(\"secp256r1\",256,\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\",\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\",\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\",\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\",\"1\",\"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\",\"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\",[\"NIST P-256\",\"P-256\",\"prime256v1\"]);KJUR.crypto.ECParameterDB.regist(\"secp384r1\",384,\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC\",\"B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF\",\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973\",\"1\",\"AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7\",\"3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f\",[\"NIST P-384\",\"P-384\"]);KJUR.crypto.ECParameterDB.regist(\"secp521r1\",521,\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC\",\"051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\",\"1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\",\"1\",\"C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\",\"011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650\",[\"NIST P-521\",\"P-521\"]);/*! dsa-modified-1.0.1.js (c) Recurity Labs GmbH, Kenji Urushimma | github.com/openpgpjs/openpgpjs/blob/master/LICENSE\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.crypto==\"undefined\"||!KJUR.crypto){KJUR.crypto={};}KJUR.crypto.DSA=function(){this.p=null;this.q=null;this.g=null;this.y=null;this.x=null;this.type=\"DSA\";this.setPrivate=function(z,w,v,A,u){this.isPrivate=true;this.p=z;this.q=w;this.g=v;this.y=A;this.x=u;};this.setPublic=function(w,v,u,z){this.isPublic=true;this.p=w;this.q=v;this.g=u;this.y=z;this.x=null;};this.signWithMessageHash=function(z){var v=this.p;var u=this.q;var C=this.g;var D=this.y;var E=this.x;var A=z.substr(0,u.bitLength()/4);var B=new BigInteger(z,16);var w=n(BigInteger.ONE.add(BigInteger.ONE),u.subtract(BigInteger.ONE));var G=C.modPow(w,v).mod(u);var F=w.modInverse(u).multiply(B.add(E.multiply(G))).mod(u);var H=KJUR.asn1.ASN1Util.jsonToASN1HEX({seq:[{\"int\":{bigint:G}},{\"int\":{bigint:F}}]});return H;};this.verifyWithMessageHash=function(C,B){var z=this.p;var u=this.q;var G=this.g;var H=this.y;var E=this.parseASN1Signature(B);var K=E[0];var J=E[1];var C=C.substr(0,u.bitLength()/4);var D=new BigInteger(C,16);if(BigInteger.ZERO.compareTo(K)>0||K.compareTo(u)>0||BigInteger.ZERO.compareTo(J)>0||J.compareTo(u)>0){throw\"invalid DSA signature\";}var I=J.modInverse(u);var A=D.multiply(I).mod(u);var v=K.multiply(I).mod(u);var F=G.modPow(A,z).multiply(H.modPow(v,z)).mod(z).mod(u);return F.compareTo(K)==0;};this.parseASN1Signature=function(u){try{var y=new BigInteger(ASN1HEX.getVbyList(u,0,[0],\"02\"),16);var v=new BigInteger(ASN1HEX.getVbyList(u,0,[1],\"02\"),16);return[y,v];}catch(w){throw\"malformed DSA signature\";}};function d(E,w,B,v,u,C){var z=KJUR.crypto.Util.hashString(w,E.toLowerCase());var z=z.substr(0,u.bitLength()/4);var A=new BigInteger(z,16);var y=n(BigInteger.ONE.add(BigInteger.ONE),u.subtract(BigInteger.ONE));var F=B.modPow(y,v).mod(u);var D=y.modInverse(u).multiply(A.add(C.multiply(F))).mod(u);var G=new Array();G[0]=F;G[1]=D;return G;}function r(v){var u=openpgp.config.config.prefer_hash_algorithm;switch(Math.round(v.bitLength()/8)){case 20:if(u!=2&&u>11&&u!=10&&u<8){return 2;}return u;case 28:if(u>11&&u<8){return 11;}return u;case 32:if(u>10&&u<8){return 8;}return u;default:util.print_debug(\"DSA select hash algorithm: returning null for an unknown length of q\");return null;}}this.select_hash_algorithm=r;function m(I,K,J,B,z,u,F,G){var C=KJUR.crypto.Util.hashString(B,I.toLowerCase());var C=C.substr(0,u.bitLength()/4);var D=new BigInteger(C,16);if(BigInteger.ZERO.compareTo(K)>0||K.compareTo(u)>0||BigInteger.ZERO.compareTo(J)>0||J.compareTo(u)>0){util.print_error(\"invalid DSA Signature\");return null;}var H=J.modInverse(u);var A=D.multiply(H).mod(u);var v=K.multiply(H).mod(u);var E=F.modPow(A,z).multiply(G.modPow(v,z)).mod(z).mod(u);return E.compareTo(K)==0;}function a(z){var A=new BigInteger(z,primeCenterie);var y=j(q,512);var u=t(p,q,z);var v;do{v=new BigInteger(q.bitCount(),rand);}while(x.compareTo(BigInteger.ZERO)!=1&&x.compareTo(q)!=-1);var w=g.modPow(x,p);return{x:v,q:A,p:y,g:u,y:w};}function j(y,z,w){if(z%64!=0){return false;}var u;var v;do{u=w(bitcount,true);v=u.subtract(BigInteger.ONE);u=u.subtract(v.remainder(y));}while(!u.isProbablePrime(primeCenterie)||u.bitLength()!=l);return u;}function t(B,z,A,w){var u=B.subtract(BigInteger.ONE);var y=u.divide(z);var v;do{v=w(A);}while(v.compareTo(u)!=-1&&v.compareTo(BigInteger.ONE)!=1);return v.modPow(y,B);}function o(w,y,u){var v;do{v=u(y,false);}while(v.compareTo(w)!=-1&&v.compareTo(BigInteger.ZERO)!=1);return v;}function i(v,w){k=o(v);var u=g.modPow(k,w).mod(v);return u;}function h(B,w,y,v,z,u){var A=B(v);s=w.modInverse(z).multiply(A.add(u.multiply(y))).mod(z);return s;}this.sign=d;this.verify=m;function n(w,u){if(u.compareTo(w)<=0){return;}var v=u.subtract(w);var y=e(v.bitLength());while(y>v){y=e(v.bitLength());}return w.add(y);}function e(w){if(w<0){return null;}var u=Math.floor((w+7)/8);var v=c(u);if(w%8>0){v=String.fromCharCode(Math.pow(2,w%8)-1&v.charCodeAt(0))+v.substring(1);}return new BigInteger(f(v),16);}function c(w){var u=\"\";for(var v=0;v<w;v++){u+=String.fromCharCode(b());}return u;}function b(){var u=new Uint32Array(1);window.crypto.getRandomValues(u);return u[0]&255;}function f(y){if(y==null){return\"\";}var v=[];var w=y.length;var z=0;var u;while(z<w){u=y[z++].charCodeAt().toString(16);while(u.length<2){u=\"0\"+u;}v.push(\"\"+u);}return v.join(\"\");}this.getRandomBigIntegerInRange=n;this.getRandomBigInteger=e;this.getRandomBytes=c;};/*! pkcs5pkey-1.0.6.js (c) 2013-2014 Kenji Urushima | kjur.github.com/jsrsasign/license\n */var PKCS5PKEY=function(){var c=function c(n,p,o){return i(CryptoJS.AES,n,p,o);};var d=function d(n,p,o){return i(CryptoJS.TripleDES,n,p,o);};var i=function i(q,v,s,o){var p=CryptoJS.enc.Hex.parse(v);var u=CryptoJS.enc.Hex.parse(s);var n=CryptoJS.enc.Hex.parse(o);var r={};r.key=u;r.iv=n;r.ciphertext=p;var t=q.decrypt(r,u,{iv:n});return CryptoJS.enc.Hex.stringify(t);};var j=function j(n,p,o){return e(CryptoJS.AES,n,p,o);};var m=function m(n,p,o){return e(CryptoJS.TripleDES,n,p,o);};var e=function e(s,x,v,p){var r=CryptoJS.enc.Hex.parse(x);var w=CryptoJS.enc.Hex.parse(v);var o=CryptoJS.enc.Hex.parse(p);var n={};var u=s.encrypt(r,w,{iv:o});var q=CryptoJS.enc.Hex.parse(u.toString());var t=CryptoJS.enc.Base64.stringify(q);return t;};var g={\"AES-256-CBC\":{proc:c,eproc:j,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:c,eproc:j,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:c,eproc:j,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:d,eproc:m,keylen:24,ivlen:8}};var b=function b(n){return g[n][\"proc\"];};var k=function k(n){var p=CryptoJS.lib.WordArray.random(n);var o=CryptoJS.enc.Hex.stringify(p);return o;};var l=function l(q){var r={};if(q.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"))){r.cipher=RegExp.$1;r.ivsalt=RegExp.$2;}if(q.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"))){r.type=RegExp.$1;}var p=-1;var t=0;if(q.indexOf(\"\\r\\n\\r\\n\")!=-1){p=q.indexOf(\"\\r\\n\\r\\n\");t=2;}if(q.indexOf(\"\\n\\n\")!=-1){p=q.indexOf(\"\\n\\n\");t=1;}var o=q.indexOf(\"-----END\");if(p!=-1&&o!=-1){var n=q.substring(p+t*2,o-t);n=n.replace(/\\s+/g,\"\");r.data=n;}return r;};var h=function h(o,w,n){var t=n.substring(0,16);var r=CryptoJS.enc.Hex.parse(t);var p=CryptoJS.enc.Utf8.parse(w);var s=g[o][\"keylen\"]+g[o][\"ivlen\"];var v=\"\";var u=null;for(;;){var q=CryptoJS.algo.MD5.create();if(u!=null){q.update(u);}q.update(p);q.update(r);u=q.finalize();v=v+CryptoJS.enc.Hex.stringify(u);if(v.length>=s*2){break;}}var x={};x.keyhex=v.substr(0,g[o][\"keylen\"]*2);x.ivhex=v.substr(g[o][\"keylen\"]*2,g[o][\"ivlen\"]*2);return x;};var a=function a(n,t,p,u){var q=CryptoJS.enc.Base64.parse(n);var o=CryptoJS.enc.Hex.stringify(q);var s=g[t][\"proc\"];var r=s(o,p,u);return r;};var f=function f(n,q,o,s){var p=g[q][\"eproc\"];var r=p(n,o,s);return r;};return{version:\"1.0.5\",getHexFromPEM:function getHexFromPEM(o,r){var p=o;if(p.indexOf(\"BEGIN \"+r)==-1){throw\"can't find PEM header: \"+r;}p=p.replace(\"-----BEGIN \"+r+\"-----\",\"\");p=p.replace(\"-----END \"+r+\"-----\",\"\");var q=p.replace(/\\s+/g,\"\");var n=b64tohex(q);return n;},getDecryptedKeyHexByKeyIV:function getDecryptedKeyHexByKeyIV(o,r,q,p){var n=b(r);return n(o,q,p);},parsePKCS5PEM:function parsePKCS5PEM(n){return l(n);},getKeyAndUnusedIvByPasscodeAndIvsalt:function getKeyAndUnusedIvByPasscodeAndIvsalt(o,n,p){return h(o,n,p);},decryptKeyB64:function decryptKeyB64(n,p,o,q){return a(n,p,o,q);},getDecryptedKeyHex:function getDecryptedKeyHex(w,v){var o=l(w);var r=o.type;var p=o.cipher;var n=o.ivsalt;var q=o.data;var u=h(p,v,n);var t=u.keyhex;var s=a(q,p,t,n);return s;},getRSAKeyFromEncryptedPKCS5PEM:function getRSAKeyFromEncryptedPKCS5PEM(p,o){var q=this.getDecryptedKeyHex(p,o);var n=new RSAKey();n.readPrivateKeyFromASN1HexString(q);return n;},getEryptedPKCS5PEMFromPrvKeyHex:function getEryptedPKCS5PEMFromPrvKeyHex(q,x,r,p){var n=\"\";if(typeof r==\"undefined\"||r==null){r=\"AES-256-CBC\";}if(typeof g[r]==\"undefined\"){throw\"PKCS5PKEY unsupported algorithm: \"+r;}if(typeof p==\"undefined\"||p==null){var t=g[r][\"ivlen\"];var s=k(t);p=s.toUpperCase();}var w=h(r,x,p);var v=w.keyhex;var u=f(q,r,v,p);var o=u.replace(/(.{64})/g,\"$1\\r\\n\");var n=\"-----BEGIN RSA PRIVATE KEY-----\\r\\n\";n+=\"Proc-Type: 4,ENCRYPTED\\r\\n\";n+=\"DEK-Info: \"+r+\",\"+p+\"\\r\\n\";n+=\"\\r\\n\";n+=o;n+=\"\\r\\n-----END RSA PRIVATE KEY-----\\r\\n\";return n;},getEryptedPKCS5PEMFromRSAKey:function getEryptedPKCS5PEMFromRSAKey(C,D,o,s){var A=new KJUR.asn1.DERInteger({\"int\":0});var v=new KJUR.asn1.DERInteger({bigint:C.n});var z=new KJUR.asn1.DERInteger({\"int\":C.e});var B=new KJUR.asn1.DERInteger({bigint:C.d});var t=new KJUR.asn1.DERInteger({bigint:C.p});var r=new KJUR.asn1.DERInteger({bigint:C.q});var y=new KJUR.asn1.DERInteger({bigint:C.dmp1});var u=new KJUR.asn1.DERInteger({bigint:C.dmq1});var x=new KJUR.asn1.DERInteger({bigint:C.coeff});var E=new KJUR.asn1.DERSequence({array:[A,v,z,B,t,r,y,u,x]});var w=E.getEncodedHex();return this.getEryptedPKCS5PEMFromPrvKeyHex(w,D,o,s);},newEncryptedPKCS5PEM:function newEncryptedPKCS5PEM(n,o,r,s){if(typeof o==\"undefined\"||o==null){o=1024;}if(typeof r==\"undefined\"||r==null){r=\"10001\";}var p=new RSAKey();p.generate(o,r);var q=null;if(typeof s==\"undefined\"||s==null){q=this.getEncryptedPKCS5PEMFromRSAKey(pkey,n);}else{q=this.getEncryptedPKCS5PEMFromRSAKey(pkey,n,s);}return q;},getRSAKeyFromPlainPKCS8PEM:function getRSAKeyFromPlainPKCS8PEM(p){if(p.match(/ENCRYPTED/)){throw\"pem shall be not ENCRYPTED\";}var o=this.getHexFromPEM(p,\"PRIVATE KEY\");var n=this.getRSAKeyFromPlainPKCS8Hex(o);return n;},getRSAKeyFromPlainPKCS8Hex:function getRSAKeyFromPlainPKCS8Hex(q){var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=3){throw\"outer DERSequence shall have 3 elements: \"+p.length;}var o=ASN1HEX.getHexOfTLV_AtObj(q,p[1]);if(o!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmIdentifier is not rsaEnc: \"+o;}var o=ASN1HEX.getHexOfTLV_AtObj(q,p[1]);var r=ASN1HEX.getHexOfTLV_AtObj(q,p[2]);var s=ASN1HEX.getHexOfV_AtObj(r,0);var n=new RSAKey();n.readPrivateKeyFromASN1HexString(s);return n;},parseHexOfEncryptedPKCS8:function parseHexOfEncryptedPKCS8(u){var q={};var p=ASN1HEX.getPosArrayOfChildren_AtObj(u,0);if(p.length!=2){throw\"malformed format: SEQUENCE(0).items != 2: \"+p.length;}q.ciphertext=ASN1HEX.getHexOfV_AtObj(u,p[1]);var w=ASN1HEX.getPosArrayOfChildren_AtObj(u,p[0]);if(w.length!=2){throw\"malformed format: SEQUENCE(0.0).items != 2: \"+w.length;}if(ASN1HEX.getHexOfV_AtObj(u,w[0])!=\"2a864886f70d01050d\"){throw\"this only supports pkcs5PBES2\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(u,w[1]);if(w.length!=2){throw\"malformed format: SEQUENCE(0.0.1).items != 2: \"+n.length;}var o=ASN1HEX.getPosArrayOfChildren_AtObj(u,n[1]);if(o.length!=2){throw\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+o.length;}if(ASN1HEX.getHexOfV_AtObj(u,o[0])!=\"2a864886f70d0307\"){throw\"this only supports TripleDES\";}q.encryptionSchemeAlg=\"TripleDES\";q.encryptionSchemeIV=ASN1HEX.getHexOfV_AtObj(u,o[1]);var r=ASN1HEX.getPosArrayOfChildren_AtObj(u,n[0]);if(r.length!=2){throw\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+r.length;}if(ASN1HEX.getHexOfV_AtObj(u,r[0])!=\"2a864886f70d01050c\"){throw\"this only supports pkcs5PBKDF2\";}var v=ASN1HEX.getPosArrayOfChildren_AtObj(u,r[1]);if(v.length<2){throw\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+v.length;}q.pbkdf2Salt=ASN1HEX.getHexOfV_AtObj(u,v[0]);var s=ASN1HEX.getHexOfV_AtObj(u,v[1]);try{q.pbkdf2Iter=parseInt(s,16);}catch(t){throw\"malformed format pbkdf2Iter: \"+s;}return q;},getPBKDF2KeyHexFromParam:function getPBKDF2KeyHexFromParam(s,n){var r=CryptoJS.enc.Hex.parse(s.pbkdf2Salt);var o=s.pbkdf2Iter;var q=CryptoJS.PBKDF2(n,r,{keySize:192/32,iterations:o});var p=CryptoJS.enc.Hex.stringify(q);return p;},getPlainPKCS8HexFromEncryptedPKCS8PEM:function getPlainPKCS8HexFromEncryptedPKCS8PEM(v,w){var p=this.getHexFromPEM(v,\"ENCRYPTED PRIVATE KEY\");var n=this.parseHexOfEncryptedPKCS8(p);var s=PKCS5PKEY.getPBKDF2KeyHexFromParam(n,w);var t={};t.ciphertext=CryptoJS.enc.Hex.parse(n.ciphertext);var r=CryptoJS.enc.Hex.parse(s);var q=CryptoJS.enc.Hex.parse(n.encryptionSchemeIV);var u=CryptoJS.TripleDES.decrypt(t,r,{iv:q});var o=CryptoJS.enc.Hex.stringify(u);return o;},getRSAKeyFromEncryptedPKCS8PEM:function getRSAKeyFromEncryptedPKCS8PEM(q,p){var o=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(q,p);var n=this.getRSAKeyFromPlainPKCS8Hex(o);return n;},getKeyFromEncryptedPKCS8PEM:function getKeyFromEncryptedPKCS8PEM(q,o){var n=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(q,o);var p=this.getKeyFromPlainPrivatePKCS8Hex(n);return p;},parsePlainPrivatePKCS8Hex:function parsePlainPrivatePKCS8Hex(q){var o={};o.algparam=null;if(q.substr(0,2)!=\"30\"){throw\"malformed plain PKCS8 private key(code:001)\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=3){throw\"malformed plain PKCS8 private key(code:002)\";}if(q.substr(p[1],2)!=\"30\"){throw\"malformed PKCS8 private key(code:003)\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(q,p[1]);if(n.length!=2){throw\"malformed PKCS8 private key(code:004)\";}if(q.substr(n[0],2)!=\"06\"){throw\"malformed PKCS8 private key(code:005)\";}o.algoid=ASN1HEX.getHexOfV_AtObj(q,n[0]);if(q.substr(n[1],2)==\"06\"){o.algparam=ASN1HEX.getHexOfV_AtObj(q,n[1]);}if(q.substr(p[2],2)!=\"04\"){throw\"malformed PKCS8 private key(code:006)\";}o.keyidx=ASN1HEX.getStartPosOfV_AtObj(q,p[2]);return o;},getKeyFromPlainPrivatePKCS8PEM:function getKeyFromPlainPrivatePKCS8PEM(o){var n=this.getHexFromPEM(o,\"PRIVATE KEY\");var p=this.getKeyFromPlainPrivatePKCS8Hex(n);return p;},getKeyFromPlainPrivatePKCS8Hex:function getKeyFromPlainPrivatePKCS8Hex(n){var p=this.parsePlainPrivatePKCS8Hex(n);if(p.algoid==\"2a864886f70d010101\"){this.parsePrivateRawRSAKeyHexAtObj(n,p);var o=p.key;var q=new RSAKey();q.setPrivateEx(o.n,o.e,o.d,o.p,o.q,o.dp,o.dq,o.co);return q;}else{if(p.algoid==\"2a8648ce3d0201\"){this.parsePrivateRawECKeyHexAtObj(n,p);if(KJUR.crypto.OID.oidhex2name[p.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+p.algparam;}var r=KJUR.crypto.OID.oidhex2name[p.algparam];var q=new KJUR.crypto.ECDSA({curve:r,prv:p.key});return q;}else{throw\"unsupported private key algorithm\";}}},getRSAKeyFromPublicPKCS8PEM:function getRSAKeyFromPublicPKCS8PEM(o){var p=this.getHexFromPEM(o,\"PUBLIC KEY\");var n=this.getRSAKeyFromPublicPKCS8Hex(p);return n;},getKeyFromPublicPKCS8PEM:function getKeyFromPublicPKCS8PEM(o){var p=this.getHexFromPEM(o,\"PUBLIC KEY\");var n=this.getKeyFromPublicPKCS8Hex(p);return n;},getKeyFromPublicPKCS8Hex:function getKeyFromPublicPKCS8Hex(o){var n=this.parsePublicPKCS8Hex(o);if(n.algoid==\"2a864886f70d010101\"){var r=this.parsePublicRawRSAKeyHex(n.key);var p=new RSAKey();p.setPublic(r.n,r.e);return p;}else{if(n.algoid==\"2a8648ce3d0201\"){if(KJUR.crypto.OID.oidhex2name[n.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+n.algparam;}var q=KJUR.crypto.OID.oidhex2name[n.algparam];var p=new KJUR.crypto.ECDSA({curve:q,pub:n.key});return p;}else{throw\"unsupported public key algorithm\";}}},parsePublicRawRSAKeyHex:function parsePublicRawRSAKeyHex(p){var n={};if(p.substr(0,2)!=\"30\"){throw\"malformed RSA key(code:001)\";}var o=ASN1HEX.getPosArrayOfChildren_AtObj(p,0);if(o.length!=2){throw\"malformed RSA key(code:002)\";}if(p.substr(o[0],2)!=\"02\"){throw\"malformed RSA key(code:003)\";}n.n=ASN1HEX.getHexOfV_AtObj(p,o[0]);if(p.substr(o[1],2)!=\"02\"){throw\"malformed RSA key(code:004)\";}n.e=ASN1HEX.getHexOfV_AtObj(p,o[1]);return n;},parsePrivateRawRSAKeyHexAtObj:function parsePrivateRawRSAKeyHexAtObj(o,q){var p=q.keyidx;if(o.substr(p,2)!=\"30\"){throw\"malformed RSA private key(code:001)\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(o,p);if(n.length!=9){throw\"malformed RSA private key(code:002)\";}q.key={};q.key.n=ASN1HEX.getHexOfV_AtObj(o,n[1]);q.key.e=ASN1HEX.getHexOfV_AtObj(o,n[2]);q.key.d=ASN1HEX.getHexOfV_AtObj(o,n[3]);q.key.p=ASN1HEX.getHexOfV_AtObj(o,n[4]);q.key.q=ASN1HEX.getHexOfV_AtObj(o,n[5]);q.key.dp=ASN1HEX.getHexOfV_AtObj(o,n[6]);q.key.dq=ASN1HEX.getHexOfV_AtObj(o,n[7]);q.key.co=ASN1HEX.getHexOfV_AtObj(o,n[8]);},parsePrivateRawECKeyHexAtObj:function parsePrivateRawECKeyHexAtObj(o,q){var p=q.keyidx;if(o.substr(p,2)!=\"30\"){throw\"malformed ECC private key(code:001)\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(o,p);if(n.length!=3){throw\"malformed ECC private key(code:002)\";}if(o.substr(n[1],2)!=\"04\"){throw\"malformed ECC private key(code:003)\";}q.key=ASN1HEX.getHexOfV_AtObj(o,n[1]);},parsePublicPKCS8Hex:function parsePublicPKCS8Hex(q){var o={};o.algparam=null;var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,0);if(p.length!=2){throw\"outer DERSequence shall have 2 elements: \"+p.length;}var r=p[0];if(q.substr(r,2)!=\"30\"){throw\"malformed PKCS8 public key(code:001)\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(q,r);if(n.length!=2){throw\"malformed PKCS8 public key(code:002)\";}if(q.substr(n[0],2)!=\"06\"){throw\"malformed PKCS8 public key(code:003)\";}o.algoid=ASN1HEX.getHexOfV_AtObj(q,n[0]);if(q.substr(n[1],2)==\"06\"){o.algparam=ASN1HEX.getHexOfV_AtObj(q,n[1]);}if(q.substr(p[1],2)!=\"03\"){throw\"malformed PKCS8 public key(code:004)\";}o.key=ASN1HEX.getHexOfV_AtObj(q,p[1]).substr(2);return o;},getRSAKeyFromPublicPKCS8Hex:function getRSAKeyFromPublicPKCS8Hex(r){var q=ASN1HEX.getPosArrayOfChildren_AtObj(r,0);if(q.length!=2){throw\"outer DERSequence shall have 2 elements: \"+q.length;}var p=ASN1HEX.getHexOfTLV_AtObj(r,q[0]);if(p!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmId is not rsaEncryption\";}if(r.substr(q[1],2)!=\"03\"){throw\"PKCS8 Public Key is not BITSTRING encapslated.\";}var t=ASN1HEX.getStartPosOfV_AtObj(r,q[1])+2;if(r.substr(t,2)!=\"30\"){throw\"PKCS8 Public Key is not SEQUENCE.\";}var n=ASN1HEX.getPosArrayOfChildren_AtObj(r,t);if(n.length!=2){throw\"inner DERSequence shall have 2 elements: \"+n.length;}if(r.substr(n[0],2)!=\"02\"){throw\"N is not ASN.1 INTEGER\";}if(r.substr(n[1],2)!=\"02\"){throw\"E is not ASN.1 INTEGER\";}var u=ASN1HEX.getHexOfV_AtObj(r,n[0]);var s=ASN1HEX.getHexOfV_AtObj(r,n[1]);var o=new RSAKey();o.setPublic(u,s);return o;}};}();/*! keyutil-1.0.12.js (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */var KEYUTIL=function(){var d=function d(p,r,q){return k(CryptoJS.AES,p,r,q);};var e=function e(p,r,q){return k(CryptoJS.TripleDES,p,r,q);};var a=function a(p,r,q){return k(CryptoJS.DES,p,r,q);};var k=function k(s,x,u,q){var r=CryptoJS.enc.Hex.parse(x);var w=CryptoJS.enc.Hex.parse(u);var p=CryptoJS.enc.Hex.parse(q);var t={};t.key=w;t.iv=p;t.ciphertext=r;var v=s.decrypt(t,w,{iv:p});return CryptoJS.enc.Hex.stringify(v);};var l=function l(p,r,q){return g(CryptoJS.AES,p,r,q);};var o=function o(p,r,q){return g(CryptoJS.TripleDES,p,r,q);};var f=function f(p,r,q){return g(CryptoJS.DES,p,r,q);};var g=function g(t,y,v,q){var s=CryptoJS.enc.Hex.parse(y);var x=CryptoJS.enc.Hex.parse(v);var p=CryptoJS.enc.Hex.parse(q);var w=t.encrypt(s,x,{iv:p});var r=CryptoJS.enc.Hex.parse(w.toString());var u=CryptoJS.enc.Base64.stringify(r);return u;};var i={\"AES-256-CBC\":{proc:d,eproc:l,keylen:32,ivlen:16},\"AES-192-CBC\":{proc:d,eproc:l,keylen:24,ivlen:16},\"AES-128-CBC\":{proc:d,eproc:l,keylen:16,ivlen:16},\"DES-EDE3-CBC\":{proc:e,eproc:o,keylen:24,ivlen:8},\"DES-CBC\":{proc:a,eproc:f,keylen:8,ivlen:8}};var c=function c(p){return i[p][\"proc\"];};var m=function m(p){var r=CryptoJS.lib.WordArray.random(p);var q=CryptoJS.enc.Hex.stringify(r);return q;};var n=function n(t){var u={};if(t.match(new RegExp(\"DEK-Info: ([^,]+),([0-9A-Fa-f]+)\",\"m\"))){u.cipher=RegExp.$1;u.ivsalt=RegExp.$2;}if(t.match(new RegExp(\"-----BEGIN ([A-Z]+) PRIVATE KEY-----\"))){u.type=RegExp.$1;}var r=-1;var v=0;if(t.indexOf(\"\\r\\n\\r\\n\")!=-1){r=t.indexOf(\"\\r\\n\\r\\n\");v=2;}if(t.indexOf(\"\\n\\n\")!=-1){r=t.indexOf(\"\\n\\n\");v=1;}var q=t.indexOf(\"-----END\");if(r!=-1&&q!=-1){var p=t.substring(r+v*2,q-v);p=p.replace(/\\s+/g,\"\");u.data=p;}return u;};var j=function j(q,y,p){var v=p.substring(0,16);var t=CryptoJS.enc.Hex.parse(v);var r=CryptoJS.enc.Utf8.parse(y);var u=i[q][\"keylen\"]+i[q][\"ivlen\"];var x=\"\";var w=null;for(;;){var s=CryptoJS.algo.MD5.create();if(w!=null){s.update(w);}s.update(r);s.update(t);w=s.finalize();x=x+CryptoJS.enc.Hex.stringify(w);if(x.length>=u*2){break;}}var z={};z.keyhex=x.substr(0,i[q][\"keylen\"]*2);z.ivhex=x.substr(i[q][\"keylen\"]*2,i[q][\"ivlen\"]*2);return z;};var b=function b(p,v,r,w){var s=CryptoJS.enc.Base64.parse(p);var q=CryptoJS.enc.Hex.stringify(s);var u=i[v][\"proc\"];var t=u(q,r,w);return t;};var h=function h(p,s,q,u){var r=i[s][\"eproc\"];var t=r(p,q,u);return t;};return{version:\"1.0.0\",getHexFromPEM:function getHexFromPEM(q,u){var r=q;if(r.indexOf(\"-----BEGIN \")==-1){throw\"can't find PEM header: \"+u;}if(typeof u==\"string\"&&u!=\"\"){r=r.replace(\"-----BEGIN \"+u+\"-----\",\"\");r=r.replace(\"-----END \"+u+\"-----\",\"\");}else{r=r.replace(/-----BEGIN [^-]+-----/,\"\");r=r.replace(/-----END [^-]+-----/,\"\");}var t=r.replace(/\\s+/g,\"\");var p=b64tohex(t);return p;},getDecryptedKeyHexByKeyIV:function getDecryptedKeyHexByKeyIV(q,t,s,r){var p=c(t);return p(q,s,r);},parsePKCS5PEM:function parsePKCS5PEM(p){return n(p);},getKeyAndUnusedIvByPasscodeAndIvsalt:function getKeyAndUnusedIvByPasscodeAndIvsalt(q,p,r){return j(q,p,r);},decryptKeyB64:function decryptKeyB64(p,r,q,s){return b(p,r,q,s);},getDecryptedKeyHex:function getDecryptedKeyHex(y,x){var q=n(y);var t=q.type;var r=q.cipher;var p=q.ivsalt;var s=q.data;var w=j(r,x,p);var v=w.keyhex;var u=b(s,r,v,p);return u;},getRSAKeyFromEncryptedPKCS5PEM:function getRSAKeyFromEncryptedPKCS5PEM(r,q){var s=this.getDecryptedKeyHex(r,q);var p=new RSAKey();p.readPrivateKeyFromASN1HexString(s);return p;},getEncryptedPKCS5PEMFromPrvKeyHex:function getEncryptedPKCS5PEMFromPrvKeyHex(x,s,A,t,r){var p=\"\";if(typeof t==\"undefined\"||t==null){t=\"AES-256-CBC\";}if(typeof i[t]==\"undefined\"){throw\"KEYUTIL unsupported algorithm: \"+t;}if(typeof r==\"undefined\"||r==null){var v=i[t][\"ivlen\"];var u=m(v);r=u.toUpperCase();}var z=j(t,A,r);var y=z.keyhex;var w=h(s,t,y,r);var q=w.replace(/(.{64})/g,\"$1\\r\\n\");var p=\"-----BEGIN \"+x+\" PRIVATE KEY-----\\r\\n\";p+=\"Proc-Type: 4,ENCRYPTED\\r\\n\";p+=\"DEK-Info: \"+t+\",\"+r+\"\\r\\n\";p+=\"\\r\\n\";p+=q;p+=\"\\r\\n-----END \"+x+\" PRIVATE KEY-----\\r\\n\";return p;},getEncryptedPKCS5PEMFromRSAKey:function getEncryptedPKCS5PEMFromRSAKey(D,E,r,t){var B=new KJUR.asn1.DERInteger({\"int\":0});var w=new KJUR.asn1.DERInteger({bigint:D.n});var A=new KJUR.asn1.DERInteger({\"int\":D.e});var C=new KJUR.asn1.DERInteger({bigint:D.d});var u=new KJUR.asn1.DERInteger({bigint:D.p});var s=new KJUR.asn1.DERInteger({bigint:D.q});var z=new KJUR.asn1.DERInteger({bigint:D.dmp1});var v=new KJUR.asn1.DERInteger({bigint:D.dmq1});var y=new KJUR.asn1.DERInteger({bigint:D.coeff});var F=new KJUR.asn1.DERSequence({array:[B,w,A,C,u,s,z,v,y]});var x=F.getEncodedHex();return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",x,E,r,t);},newEncryptedPKCS5PEM:function newEncryptedPKCS5PEM(p,q,t,u){if(typeof q==\"undefined\"||q==null){q=1024;}if(typeof t==\"undefined\"||t==null){t=\"10001\";}var r=new RSAKey();r.generate(q,t);var s=null;if(typeof u==\"undefined\"||u==null){s=this.getEncryptedPKCS5PEMFromRSAKey(r,p);}else{s=this.getEncryptedPKCS5PEMFromRSAKey(r,p,u);}return s;},getRSAKeyFromPlainPKCS8PEM:function getRSAKeyFromPlainPKCS8PEM(r){if(r.match(/ENCRYPTED/)){throw\"pem shall be not ENCRYPTED\";}var q=this.getHexFromPEM(r,\"PRIVATE KEY\");var p=this.getRSAKeyFromPlainPKCS8Hex(q);return p;},getRSAKeyFromPlainPKCS8Hex:function getRSAKeyFromPlainPKCS8Hex(s){var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=3){throw\"outer DERSequence shall have 3 elements: \"+r.length;}var q=ASN1HEX.getHexOfTLV_AtObj(s,r[1]);if(q!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmIdentifier is not rsaEnc: \"+q;}var q=ASN1HEX.getHexOfTLV_AtObj(s,r[1]);var t=ASN1HEX.getHexOfTLV_AtObj(s,r[2]);var u=ASN1HEX.getHexOfV_AtObj(t,0);var p=new RSAKey();p.readPrivateKeyFromASN1HexString(u);return p;},parseHexOfEncryptedPKCS8:function parseHexOfEncryptedPKCS8(w){var s={};var r=ASN1HEX.getPosArrayOfChildren_AtObj(w,0);if(r.length!=2){throw\"malformed format: SEQUENCE(0).items != 2: \"+r.length;}s.ciphertext=ASN1HEX.getHexOfV_AtObj(w,r[1]);var y=ASN1HEX.getPosArrayOfChildren_AtObj(w,r[0]);if(y.length!=2){throw\"malformed format: SEQUENCE(0.0).items != 2: \"+y.length;}if(ASN1HEX.getHexOfV_AtObj(w,y[0])!=\"2a864886f70d01050d\"){throw\"this only supports pkcs5PBES2\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(w,y[1]);if(y.length!=2){throw\"malformed format: SEQUENCE(0.0.1).items != 2: \"+p.length;}var q=ASN1HEX.getPosArrayOfChildren_AtObj(w,p[1]);if(q.length!=2){throw\"malformed format: SEQUENCE(0.0.1.1).items != 2: \"+q.length;}if(ASN1HEX.getHexOfV_AtObj(w,q[0])!=\"2a864886f70d0307\"){throw\"this only supports TripleDES\";}s.encryptionSchemeAlg=\"TripleDES\";s.encryptionSchemeIV=ASN1HEX.getHexOfV_AtObj(w,q[1]);var t=ASN1HEX.getPosArrayOfChildren_AtObj(w,p[0]);if(t.length!=2){throw\"malformed format: SEQUENCE(0.0.1.0).items != 2: \"+t.length;}if(ASN1HEX.getHexOfV_AtObj(w,t[0])!=\"2a864886f70d01050c\"){throw\"this only supports pkcs5PBKDF2\";}var x=ASN1HEX.getPosArrayOfChildren_AtObj(w,t[1]);if(x.length<2){throw\"malformed format: SEQUENCE(0.0.1.0.1).items < 2: \"+x.length;}s.pbkdf2Salt=ASN1HEX.getHexOfV_AtObj(w,x[0]);var u=ASN1HEX.getHexOfV_AtObj(w,x[1]);try{s.pbkdf2Iter=parseInt(u,16);}catch(v){throw\"malformed format pbkdf2Iter: \"+u;}return s;},getPBKDF2KeyHexFromParam:function getPBKDF2KeyHexFromParam(u,p){var t=CryptoJS.enc.Hex.parse(u.pbkdf2Salt);var q=u.pbkdf2Iter;var s=CryptoJS.PBKDF2(p,t,{keySize:192/32,iterations:q});var r=CryptoJS.enc.Hex.stringify(s);return r;},getPlainPKCS8HexFromEncryptedPKCS8PEM:function getPlainPKCS8HexFromEncryptedPKCS8PEM(x,y){var r=this.getHexFromPEM(x,\"ENCRYPTED PRIVATE KEY\");var p=this.parseHexOfEncryptedPKCS8(r);var u=KEYUTIL.getPBKDF2KeyHexFromParam(p,y);var v={};v.ciphertext=CryptoJS.enc.Hex.parse(p.ciphertext);var t=CryptoJS.enc.Hex.parse(u);var s=CryptoJS.enc.Hex.parse(p.encryptionSchemeIV);var w=CryptoJS.TripleDES.decrypt(v,t,{iv:s});var q=CryptoJS.enc.Hex.stringify(w);return q;},getRSAKeyFromEncryptedPKCS8PEM:function getRSAKeyFromEncryptedPKCS8PEM(s,r){var q=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(s,r);var p=this.getRSAKeyFromPlainPKCS8Hex(q);return p;},getKeyFromEncryptedPKCS8PEM:function getKeyFromEncryptedPKCS8PEM(s,q){var p=this.getPlainPKCS8HexFromEncryptedPKCS8PEM(s,q);var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r;},parsePlainPrivatePKCS8Hex:function parsePlainPrivatePKCS8Hex(s){var q={};q.algparam=null;if(s.substr(0,2)!=\"30\"){throw\"malformed plain PKCS8 private key(code:001)\";}var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=3){throw\"malformed plain PKCS8 private key(code:002)\";}if(s.substr(r[1],2)!=\"30\"){throw\"malformed PKCS8 private key(code:003)\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(s,r[1]);if(p.length!=2){throw\"malformed PKCS8 private key(code:004)\";}if(s.substr(p[0],2)!=\"06\"){throw\"malformed PKCS8 private key(code:005)\";}q.algoid=ASN1HEX.getHexOfV_AtObj(s,p[0]);if(s.substr(p[1],2)==\"06\"){q.algparam=ASN1HEX.getHexOfV_AtObj(s,p[1]);}if(s.substr(r[2],2)!=\"04\"){throw\"malformed PKCS8 private key(code:006)\";}q.keyidx=ASN1HEX.getStartPosOfV_AtObj(s,r[2]);return q;},getKeyFromPlainPrivatePKCS8PEM:function getKeyFromPlainPrivatePKCS8PEM(q){var p=this.getHexFromPEM(q,\"PRIVATE KEY\");var r=this.getKeyFromPlainPrivatePKCS8Hex(p);return r;},getKeyFromPlainPrivatePKCS8Hex:function getKeyFromPlainPrivatePKCS8Hex(p){var w=this.parsePlainPrivatePKCS8Hex(p);if(w.algoid==\"2a864886f70d010101\"){this.parsePrivateRawRSAKeyHexAtObj(p,w);var u=w.key;var z=new RSAKey();z.setPrivateEx(u.n,u.e,u.d,u.p,u.q,u.dp,u.dq,u.co);return z;}else{if(w.algoid==\"2a8648ce3d0201\"){this.parsePrivateRawECKeyHexAtObj(p,w);if(KJUR.crypto.OID.oidhex2name[w.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+w.algparam;}var v=KJUR.crypto.OID.oidhex2name[w.algparam];var z=new KJUR.crypto.ECDSA({curve:v});z.setPublicKeyHex(w.pubkey);z.setPrivateKeyHex(w.key);z.isPublic=false;return z;}else{if(w.algoid==\"2a8648ce380401\"){var t=ASN1HEX.getVbyList(p,0,[1,1,0],\"02\");var s=ASN1HEX.getVbyList(p,0,[1,1,1],\"02\");var y=ASN1HEX.getVbyList(p,0,[1,1,2],\"02\");var B=ASN1HEX.getVbyList(p,0,[2,0],\"02\");var r=new BigInteger(t,16);var q=new BigInteger(s,16);var x=new BigInteger(y,16);var A=new BigInteger(B,16);var z=new KJUR.crypto.DSA();z.setPrivate(r,q,x,null,A);return z;}else{throw\"unsupported private key algorithm\";}}}},getRSAKeyFromPublicPKCS8PEM:function getRSAKeyFromPublicPKCS8PEM(q){var r=this.getHexFromPEM(q,\"PUBLIC KEY\");var p=this.getRSAKeyFromPublicPKCS8Hex(r);return p;},getKeyFromPublicPKCS8PEM:function getKeyFromPublicPKCS8PEM(q){var r=this.getHexFromPEM(q,\"PUBLIC KEY\");var p=this.getKeyFromPublicPKCS8Hex(r);return p;},getKeyFromPublicPKCS8Hex:function getKeyFromPublicPKCS8Hex(q){var p=this.parsePublicPKCS8Hex(q);if(p.algoid==\"2a864886f70d010101\"){var u=this.parsePublicRawRSAKeyHex(p.key);var r=new RSAKey();r.setPublic(u.n,u.e);return r;}else{if(p.algoid==\"2a8648ce3d0201\"){if(KJUR.crypto.OID.oidhex2name[p.algparam]===undefined){throw\"KJUR.crypto.OID.oidhex2name undefined: \"+p.algparam;}var s=KJUR.crypto.OID.oidhex2name[p.algparam];var r=new KJUR.crypto.ECDSA({curve:s,pub:p.key});return r;}else{if(p.algoid==\"2a8648ce380401\"){var t=p.algparam;var v=ASN1HEX.getHexOfV_AtObj(p.key,0);var r=new KJUR.crypto.DSA();r.setPublic(new BigInteger(t.p,16),new BigInteger(t.q,16),new BigInteger(t.g,16),new BigInteger(v,16));return r;}else{throw\"unsupported public key algorithm\";}}}},parsePublicRawRSAKeyHex:function parsePublicRawRSAKeyHex(r){var p={};if(r.substr(0,2)!=\"30\"){throw\"malformed RSA key(code:001)\";}var q=ASN1HEX.getPosArrayOfChildren_AtObj(r,0);if(q.length!=2){throw\"malformed RSA key(code:002)\";}if(r.substr(q[0],2)!=\"02\"){throw\"malformed RSA key(code:003)\";}p.n=ASN1HEX.getHexOfV_AtObj(r,q[0]);if(r.substr(q[1],2)!=\"02\"){throw\"malformed RSA key(code:004)\";}p.e=ASN1HEX.getHexOfV_AtObj(r,q[1]);return p;},parsePrivateRawRSAKeyHexAtObj:function parsePrivateRawRSAKeyHexAtObj(q,s){var r=s.keyidx;if(q.substr(r,2)!=\"30\"){throw\"malformed RSA private key(code:001)\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(q,r);if(p.length!=9){throw\"malformed RSA private key(code:002)\";}s.key={};s.key.n=ASN1HEX.getHexOfV_AtObj(q,p[1]);s.key.e=ASN1HEX.getHexOfV_AtObj(q,p[2]);s.key.d=ASN1HEX.getHexOfV_AtObj(q,p[3]);s.key.p=ASN1HEX.getHexOfV_AtObj(q,p[4]);s.key.q=ASN1HEX.getHexOfV_AtObj(q,p[5]);s.key.dp=ASN1HEX.getHexOfV_AtObj(q,p[6]);s.key.dq=ASN1HEX.getHexOfV_AtObj(q,p[7]);s.key.co=ASN1HEX.getHexOfV_AtObj(q,p[8]);},parsePrivateRawECKeyHexAtObj:function parsePrivateRawECKeyHexAtObj(p,t){var q=t.keyidx;var r=ASN1HEX.getVbyList(p,q,[1],\"04\");var s=ASN1HEX.getVbyList(p,q,[2,0],\"03\").substr(2);t.key=r;t.pubkey=s;},parsePublicPKCS8Hex:function parsePublicPKCS8Hex(s){var q={};q.algparam=null;var r=ASN1HEX.getPosArrayOfChildren_AtObj(s,0);if(r.length!=2){throw\"outer DERSequence shall have 2 elements: \"+r.length;}var t=r[0];if(s.substr(t,2)!=\"30\"){throw\"malformed PKCS8 public key(code:001)\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(s,t);if(p.length!=2){throw\"malformed PKCS8 public key(code:002)\";}if(s.substr(p[0],2)!=\"06\"){throw\"malformed PKCS8 public key(code:003)\";}q.algoid=ASN1HEX.getHexOfV_AtObj(s,p[0]);if(s.substr(p[1],2)==\"06\"){q.algparam=ASN1HEX.getHexOfV_AtObj(s,p[1]);}else{if(s.substr(p[1],2)==\"30\"){q.algparam={};q.algparam.p=ASN1HEX.getVbyList(s,p[1],[0],\"02\");q.algparam.q=ASN1HEX.getVbyList(s,p[1],[1],\"02\");q.algparam.g=ASN1HEX.getVbyList(s,p[1],[2],\"02\");}}if(s.substr(r[1],2)!=\"03\"){throw\"malformed PKCS8 public key(code:004)\";}q.key=ASN1HEX.getHexOfV_AtObj(s,r[1]).substr(2);return q;},getRSAKeyFromPublicPKCS8Hex:function getRSAKeyFromPublicPKCS8Hex(t){var s=ASN1HEX.getPosArrayOfChildren_AtObj(t,0);if(s.length!=2){throw\"outer DERSequence shall have 2 elements: \"+s.length;}var r=ASN1HEX.getHexOfTLV_AtObj(t,s[0]);if(r!=\"300d06092a864886f70d0101010500\"){throw\"PKCS8 AlgorithmId is not rsaEncryption\";}if(t.substr(s[1],2)!=\"03\"){throw\"PKCS8 Public Key is not BITSTRING encapslated.\";}var v=ASN1HEX.getStartPosOfV_AtObj(t,s[1])+2;if(t.substr(v,2)!=\"30\"){throw\"PKCS8 Public Key is not SEQUENCE.\";}var p=ASN1HEX.getPosArrayOfChildren_AtObj(t,v);if(p.length!=2){throw\"inner DERSequence shall have 2 elements: \"+p.length;}if(t.substr(p[0],2)!=\"02\"){throw\"N is not ASN.1 INTEGER\";}if(t.substr(p[1],2)!=\"02\"){throw\"E is not ASN.1 INTEGER\";}var w=ASN1HEX.getHexOfV_AtObj(t,p[0]);var u=ASN1HEX.getHexOfV_AtObj(t,p[1]);var q=new RSAKey();q.setPublic(w,u);return q;}};}();KEYUTIL.getKey=function(f,e,h){if(typeof RSAKey!=\"undefined\"&&f instanceof RSAKey){return f;}if(typeof KJUR.crypto.ECDSA!=\"undefined\"&&f instanceof KJUR.crypto.ECDSA){return f;}if(typeof KJUR.crypto.DSA!=\"undefined\"&&f instanceof KJUR.crypto.DSA){return f;}if(f.curve!==undefined&&f.xy!==undefined&&f.d===undefined){return new KJUR.crypto.ECDSA({pub:f.xy,curve:f.curve});}if(f.curve!==undefined&&f.d!==undefined){return new KJUR.crypto.ECDSA({prv:f.d,curve:f.curve});}if(f.kty===undefined&&f.n!==undefined&&f.e!==undefined&&f.d===undefined){var w=new RSAKey();w.setPublic(f.n,f.e);return w;}if(f.kty===undefined&&f.n!==undefined&&f.e!==undefined&&f.d!==undefined&&f.p!==undefined&&f.q!==undefined&&f.dp!==undefined&&f.dq!==undefined&&f.co!==undefined&&f.qi===undefined){var w=new RSAKey();w.setPrivateEx(f.n,f.e,f.d,f.p,f.q,f.dp,f.dq,f.co);return w;}if(f.kty===undefined&&f.n!==undefined&&f.e!==undefined&&f.d!==undefined&&f.p===undefined){var w=new RSAKey();w.setPrivate(f.n,f.e,f.d);return w;}if(f.p!==undefined&&f.q!==undefined&&f.g!==undefined&&f.y!==undefined&&f.x===undefined){var w=new KJUR.crypto.DSA();w.setPublic(f.p,f.q,f.g,f.y);return w;}if(f.p!==undefined&&f.q!==undefined&&f.g!==undefined&&f.y!==undefined&&f.x!==undefined){var w=new KJUR.crypto.DSA();w.setPrivate(f.p,f.q,f.g,f.y,f.x);return w;}if(f.kty===\"RSA\"&&f.n!==undefined&&f.e!==undefined&&f.d===undefined){var w=new RSAKey();w.setPublic(b64utohex(f.n),b64utohex(f.e));return w;}if(f.kty===\"RSA\"&&f.n!==undefined&&f.e!==undefined&&f.d!==undefined&&f.p!==undefined&&f.q!==undefined&&f.dp!==undefined&&f.dq!==undefined&&f.qi!==undefined){var w=new RSAKey();w.setPrivateEx(b64utohex(f.n),b64utohex(f.e),b64utohex(f.d),b64utohex(f.p),b64utohex(f.q),b64utohex(f.dp),b64utohex(f.dq),b64utohex(f.qi));return w;}if(f.kty===\"RSA\"&&f.n!==undefined&&f.e!==undefined&&f.d!==undefined){var w=new RSAKey();w.setPrivate(b64utohex(f.n),b64utohex(f.e),b64utohex(f.d));return w;}if(f.kty===\"EC\"&&f.crv!==undefined&&f.x!==undefined&&f.y!==undefined&&f.d===undefined){var d=new KJUR.crypto.ECDSA({curve:f.crv});var l=d.ecparams.keylen/4;var r=(\"0000000000\"+b64utohex(f.x)).slice(-l);var n=(\"0000000000\"+b64utohex(f.y)).slice(-l);var m=\"04\"+r+n;d.setPublicKeyHex(m);return d;}if(f.kty===\"EC\"&&f.crv!==undefined&&f.x!==undefined&&f.y!==undefined&&f.d!==undefined){var d=new KJUR.crypto.ECDSA({curve:f.crv});var l=d.ecparams.keylen/4;var a=(\"0000000000\"+b64utohex(f.d)).slice(-l);d.setPrivateKeyHex(a);return d;}if(f.indexOf(\"-END CERTIFICATE-\",0)!=-1||f.indexOf(\"-END X509 CERTIFICATE-\",0)!=-1||f.indexOf(\"-END TRUSTED CERTIFICATE-\",0)!=-1){return X509.getPublicKeyFromCertPEM(f);}if(h===\"pkcs8pub\"){return KEYUTIL.getKeyFromPublicPKCS8Hex(f);}if(f.indexOf(\"-END PUBLIC KEY-\")!=-1){return KEYUTIL.getKeyFromPublicPKCS8PEM(f);}if(h===\"pkcs5prv\"){var w=new RSAKey();w.readPrivateKeyFromASN1HexString(f);return w;}if(h===\"pkcs5prv\"){var w=new RSAKey();w.readPrivateKeyFromASN1HexString(f);return w;}if(f.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&f.indexOf(\"4,ENCRYPTED\")==-1){var i=KEYUTIL.getHexFromPEM(f,\"RSA PRIVATE KEY\");return KEYUTIL.getKey(i,null,\"pkcs5prv\");}if(f.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&f.indexOf(\"4,ENCRYPTED\")==-1){var u=this.getHexFromPEM(f,\"DSA PRIVATE KEY\");var t=ASN1HEX.getVbyList(u,0,[1],\"02\");var s=ASN1HEX.getVbyList(u,0,[2],\"02\");var v=ASN1HEX.getVbyList(u,0,[3],\"02\");var j=ASN1HEX.getVbyList(u,0,[4],\"02\");var k=ASN1HEX.getVbyList(u,0,[5],\"02\");var w=new KJUR.crypto.DSA();w.setPrivate(new BigInteger(t,16),new BigInteger(s,16),new BigInteger(v,16),new BigInteger(j,16),new BigInteger(k,16));return w;}if(f.indexOf(\"-END PRIVATE KEY-\")!=-1){return KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(f);}if(f.indexOf(\"-END RSA PRIVATE KEY-\")!=-1&&f.indexOf(\"4,ENCRYPTED\")!=-1){return KEYUTIL.getRSAKeyFromEncryptedPKCS5PEM(f,e);}if(f.indexOf(\"-END EC PRIVATE KEY-\")!=-1&&f.indexOf(\"4,ENCRYPTED\")!=-1){var u=KEYUTIL.getDecryptedKeyHex(f,e);var w=ASN1HEX.getVbyList(u,0,[1],\"04\");var c=ASN1HEX.getVbyList(u,0,[2,0],\"06\");var o=ASN1HEX.getVbyList(u,0,[3,0],\"03\").substr(2);var b=\"\";if(KJUR.crypto.OID.oidhex2name[c]!==undefined){b=KJUR.crypto.OID.oidhex2name[c];}else{throw\"undefined OID(hex) in KJUR.crypto.OID: \"+c;}var d=new KJUR.crypto.ECDSA({name:b});d.setPublicKeyHex(o);d.setPrivateKeyHex(w);d.isPublic=false;return d;}if(f.indexOf(\"-END DSA PRIVATE KEY-\")!=-1&&f.indexOf(\"4,ENCRYPTED\")!=-1){var u=KEYUTIL.getDecryptedKeyHex(f,e);var t=ASN1HEX.getVbyList(u,0,[1],\"02\");var s=ASN1HEX.getVbyList(u,0,[2],\"02\");var v=ASN1HEX.getVbyList(u,0,[3],\"02\");var j=ASN1HEX.getVbyList(u,0,[4],\"02\");var k=ASN1HEX.getVbyList(u,0,[5],\"02\");var w=new KJUR.crypto.DSA();w.setPrivate(new BigInteger(t,16),new BigInteger(s,16),new BigInteger(v,16),new BigInteger(j,16),new BigInteger(k,16));return w;}if(f.indexOf(\"-END ENCRYPTED PRIVATE KEY-\")!=-1){return KEYUTIL.getKeyFromEncryptedPKCS8PEM(f,e);}throw\"not supported argument\";};KEYUTIL.generateKeypair=function(a,c){if(a==\"RSA\"){var b=c;var h=new RSAKey();h.generate(b,\"10001\");h.isPrivate=true;h.isPublic=true;var f=new RSAKey();var e=h.n.toString(16);var i=h.e.toString(16);f.setPublic(e,i);f.isPrivate=false;f.isPublic=true;var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k;}else{if(a==\"EC\"){var d=c;var g=new KJUR.crypto.ECDSA({curve:d});var j=g.generateKeyPairHex();var h=new KJUR.crypto.ECDSA({curve:d});h.setPrivateKeyHex(j.ecprvhex);h.isPrivate=true;h.isPublic=false;var f=new KJUR.crypto.ECDSA({curve:d});f.setPublicKeyHex(j.ecpubhex);f.isPrivate=false;f.isPublic=true;var k={};k.prvKeyObj=h;k.pubKeyObj=f;return k;}else{throw\"unknown algorithm: \"+a;}}};KEYUTIL.getPEM=function(a,r,o,g,j){var v=KJUR.asn1;var u=KJUR.crypto;function p(s){var w=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{\"int\":{bigint:s.n}},{\"int\":s.e},{\"int\":{bigint:s.d}},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.dmp1}},{\"int\":{bigint:s.dmq1}},{\"int\":{bigint:s.coeff}}]});return w;}function q(w){var s=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":1},{octstr:{hex:w.prvKeyHex}},{tag:[\"a0\",true,{oid:{name:w.curveName}}]},{tag:[\"a1\",true,{bitstr:{hex:\"00\"+w.pubKeyHex}}]}]});return s;}function n(s){var w=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{\"int\":{bigint:s.p}},{\"int\":{bigint:s.q}},{\"int\":{bigint:s.g}},{\"int\":{bigint:s.y}},{\"int\":{bigint:s.x}}]});return w;}if((typeof RSAKey!=\"undefined\"&&a instanceof RSAKey||typeof u.DSA!=\"undefined\"&&a instanceof u.DSA||typeof u.ECDSA!=\"undefined\"&&a instanceof u.ECDSA)&&a.isPublic==true&&(r===undefined||r==\"PKCS8PUB\")){var t=new KJUR.asn1.x509.SubjectPublicKeyInfo(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"PUBLIC KEY\");}if(r==\"PKCS1PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&(o===undefined||o==null)&&a.isPrivate==true){var t=p(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"RSA PRIVATE KEY\");}if(r==\"PKCS1PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&(o===undefined||o==null)&&a.isPrivate==true){var f=new KJUR.asn1.DERObjectIdentifier({name:a.curveName});var l=f.getEncodedHex();var e=q(a);var k=e.getEncodedHex();var i=\"\";i+=v.ASN1Util.getPEMStringFromHex(l,\"EC PARAMETERS\");i+=v.ASN1Util.getPEMStringFromHex(k,\"EC PRIVATE KEY\");return i;}if(r==\"PKCS1PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&(o===undefined||o==null)&&a.isPrivate==true){var t=n(a);var m=t.getEncodedHex();return v.ASN1Util.getPEMStringFromHex(m,\"DSA PRIVATE KEY\");}if(r==\"PKCS5PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&o!==undefined&&o!=null&&a.isPrivate==true){var t=p(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\";}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"RSA\",m,o,g);}if(r==\"PKCS5PRV\"&&typeof KJUR.crypto.ECDSA!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&o!==undefined&&o!=null&&a.isPrivate==true){var t=q(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\";}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"EC\",m,o,g);}if(r==\"PKCS5PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&o!==undefined&&o!=null&&a.isPrivate==true){var t=n(a);var m=t.getEncodedHex();if(g===undefined){g=\"DES-EDE3-CBC\";}return this.getEncryptedPKCS5PEMFromPrvKeyHex(\"DSA\",m,o,g);}var h=function h(w,s){var y=b(w,s);var x=new KJUR.asn1.ASN1Util.newObject({seq:[{seq:[{oid:{name:\"pkcs5PBES2\"}},{seq:[{seq:[{oid:{name:\"pkcs5PBKDF2\"}},{seq:[{octstr:{hex:y.pbkdf2Salt}},{\"int\":y.pbkdf2Iter}]}]},{seq:[{oid:{name:\"des-EDE3-CBC\"}},{octstr:{hex:y.encryptionSchemeIV}}]}]}]},{octstr:{hex:y.ciphertext}}]});return x.getEncodedHex();};var b=function b(D,E){var x=100;var C=CryptoJS.lib.WordArray.random(8);var B=\"DES-EDE3-CBC\";var s=CryptoJS.lib.WordArray.random(8);var y=CryptoJS.PBKDF2(E,C,{keySize:192/32,iterations:x});var z=CryptoJS.enc.Hex.parse(D);var A=CryptoJS.TripleDES.encrypt(z,y,{iv:s})+\"\";var w={};w.ciphertext=A;w.pbkdf2Salt=CryptoJS.enc.Hex.stringify(C);w.pbkdf2Iter=x;w.encryptionSchemeAlg=B;w.encryptionSchemeIV=CryptoJS.enc.Hex.stringify(s);return w;};if(r==\"PKCS8PRV\"&&typeof RSAKey!=\"undefined\"&&a instanceof RSAKey&&a.isPrivate==true){var d=p(a);var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"rsaEncryption\"}},{\"null\":true}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\");}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\");}}if(r==\"PKCS8PRV\"&&typeof KJUR.crypto.ECDSA!=\"undefined\"&&a instanceof KJUR.crypto.ECDSA&&a.isPrivate==true){var d=new KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":1},{octstr:{hex:a.prvKeyHex}},{tag:[\"a1\",true,{bitstr:{hex:\"00\"+a.pubKeyHex}}]}]});var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"ecPublicKey\"}},{oid:{name:a.curveName}}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\");}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\");}}if(r==\"PKCS8PRV\"&&typeof KJUR.crypto.DSA!=\"undefined\"&&a instanceof KJUR.crypto.DSA&&a.isPrivate==true){var d=new KJUR.asn1.DERInteger({bigint:a.x});var c=d.getEncodedHex();var t=KJUR.asn1.ASN1Util.newObject({seq:[{\"int\":0},{seq:[{oid:{name:\"dsa\"}},{seq:[{\"int\":{bigint:a.p}},{\"int\":{bigint:a.q}},{\"int\":{bigint:a.g}}]}]},{octstr:{hex:c}}]});var m=t.getEncodedHex();if(o===undefined||o==null){return v.ASN1Util.getPEMStringFromHex(m,\"PRIVATE KEY\");}else{var k=h(m,o);return v.ASN1Util.getPEMStringFromHex(k,\"ENCRYPTED PRIVATE KEY\");}}throw\"unsupported object nor format\";};KEYUTIL.getKeyFromCSRPEM=function(b){var a=KEYUTIL.getHexFromPEM(b,\"CERTIFICATE REQUEST\");var c=KEYUTIL.getKeyFromCSRHex(a);return c;};KEYUTIL.getKeyFromCSRHex=function(a){var c=KEYUTIL.parseCSRHex(a);var b=KEYUTIL.getKey(c.p8pubkeyhex,null,\"pkcs8pub\");return b;};KEYUTIL.parseCSRHex=function(c){var b={};var e=c;if(e.substr(0,2)!=\"30\"){throw\"malformed CSR(code:001)\";}var d=ASN1HEX.getPosArrayOfChildren_AtObj(e,0);if(d.length<1){throw\"malformed CSR(code:002)\";}if(e.substr(d[0],2)!=\"30\"){throw\"malformed CSR(code:003)\";}var a=ASN1HEX.getPosArrayOfChildren_AtObj(e,d[0]);if(a.length<3){throw\"malformed CSR(code:004)\";}b.p8pubkeyhex=ASN1HEX.getHexOfTLV_AtObj(e,a[2]);return b;};/*! rsapem-1.1.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license\n */function _rsapem_pemToBase64(b){var a=b;a=a.replace(\"-----BEGIN RSA PRIVATE KEY-----\",\"\");a=a.replace(\"-----END RSA PRIVATE KEY-----\",\"\");a=a.replace(/[ \\n]+/g,\"\");return a;}function _rsapem_getPosArrayOfChildrenFromHex(d){var j=new Array();var k=ASN1HEX.getStartPosOfV_AtObj(d,0);var f=ASN1HEX.getPosOfNextSibling_AtObj(d,k);var h=ASN1HEX.getPosOfNextSibling_AtObj(d,f);var b=ASN1HEX.getPosOfNextSibling_AtObj(d,h);var l=ASN1HEX.getPosOfNextSibling_AtObj(d,b);var e=ASN1HEX.getPosOfNextSibling_AtObj(d,l);var g=ASN1HEX.getPosOfNextSibling_AtObj(d,e);var c=ASN1HEX.getPosOfNextSibling_AtObj(d,g);var i=ASN1HEX.getPosOfNextSibling_AtObj(d,c);j.push(k,f,h,b,l,e,g,c,i);return j;}function _rsapem_getHexValueArrayOfChildrenFromHex(i){var o=_rsapem_getPosArrayOfChildrenFromHex(i);var r=ASN1HEX.getHexOfV_AtObj(i,o[0]);var f=ASN1HEX.getHexOfV_AtObj(i,o[1]);var j=ASN1HEX.getHexOfV_AtObj(i,o[2]);var k=ASN1HEX.getHexOfV_AtObj(i,o[3]);var c=ASN1HEX.getHexOfV_AtObj(i,o[4]);var b=ASN1HEX.getHexOfV_AtObj(i,o[5]);var h=ASN1HEX.getHexOfV_AtObj(i,o[6]);var g=ASN1HEX.getHexOfV_AtObj(i,o[7]);var l=ASN1HEX.getHexOfV_AtObj(i,o[8]);var m=new Array();m.push(r,f,j,k,c,b,h,g,l);return m;}function _rsapem_readPrivateKeyFromASN1HexString(c){var b=_rsapem_getHexValueArrayOfChildrenFromHex(c);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8]);}function _rsapem_readPrivateKeyFromPEMString(e){var c=_rsapem_pemToBase64(e);var d=b64tohex(c);var b=_rsapem_getHexValueArrayOfChildrenFromHex(d);this.setPrivateEx(b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8]);}RSAKey.prototype.readPrivateKeyFromPEMString=_rsapem_readPrivateKeyFromPEMString;RSAKey.prototype.readPrivateKeyFromASN1HexString=_rsapem_readPrivateKeyFromASN1HexString;/*! rsasign-1.2.7.js (c) 2012 Kenji Urushima | kjur.github.com/jsrsasign/license\n */var _RE_HEXDECONLY=new RegExp(\"\");_RE_HEXDECONLY.compile(\"[^0-9a-f]\",\"gi\");function _rsasign_getHexPaddedDigestInfoForString(d,e,a){var b=function b(f){return KJUR.crypto.Util.hashString(f,a);};var c=b(d);return KJUR.crypto.Util.getPaddedDigestInfoHex(c,a,e);}function _zeroPaddingOfSignature(e,d){var c=\"\";var a=d/4-e.length;for(var b=0;b<a;b++){c=c+\"0\";}return c+e;}function _rsasign_signString(d,a){var b=function b(e){return KJUR.crypto.Util.hashString(e,a);};var c=b(d);return this.signWithMessageHash(c,a);}function _rsasign_signWithMessageHash(e,c){var f=KJUR.crypto.Util.getPaddedDigestInfoHex(e,c,this.n.bitLength());var b=parseBigInt(f,16);var d=this.doPrivate(b);var a=d.toString(16);return _zeroPaddingOfSignature(a,this.n.bitLength());}function _rsasign_signStringWithSHA1(a){return _rsasign_signString.call(this,a,\"sha1\");}function _rsasign_signStringWithSHA256(a){return _rsasign_signString.call(this,a,\"sha256\");}function pss_mgf1_str(c,a,e){var b=\"\",d=0;while(b.length<a){b+=hextorstr(e(rstrtohex(c+String.fromCharCode.apply(String,[(d&4278190080)>>24,(d&16711680)>>16,(d&65280)>>8,d&255]))));d+=1;}return b;}function _rsasign_signStringPSS(e,a,d){var c=function c(f){return KJUR.crypto.Util.hashHex(f,a);};var b=c(rstrtohex(e));if(d===undefined){d=-1;}return this.signWithMessageHashPSS(b,a,d);}function _rsasign_signWithMessageHashPSS(l,a,k){var b=hextorstr(l);var g=b.length;var m=this.n.bitLength()-1;var c=Math.ceil(m/8);var d;var o=function o(i){return KJUR.crypto.Util.hashHex(i,a);};if(k===-1||k===undefined){k=g;}else{if(k===-2){k=c-g-2;}else{if(k<-2){throw\"invalid salt length\";}}}if(c<g+k+2){throw\"data too long\";}var f=\"\";if(k>0){f=new Array(k);new SecureRandom().nextBytes(f);f=String.fromCharCode.apply(String,f);}var n=hextorstr(o(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+b+f)));var j=[];for(d=0;d<c-k-g-2;d+=1){j[d]=0;}var e=String.fromCharCode.apply(String,j)+\"\\x01\"+f;var h=pss_mgf1_str(n,e.length,o);var q=[];for(d=0;d<e.length;d+=1){q[d]=e.charCodeAt(d)^h.charCodeAt(d);}var p=65280>>8*c-m&255;q[0]&=~p;for(d=0;d<g;d++){q.push(n.charCodeAt(d));}q.push(188);return _zeroPaddingOfSignature(this.doPrivate(new BigInteger(q)).toString(16),this.n.bitLength());}function _rsasign_getDecryptSignatureBI(a,d,c){var b=new RSAKey();b.setPublic(d,c);var e=b.doPublic(a);return e;}function _rsasign_getHexDigestInfoFromSig(a,c,b){var e=_rsasign_getDecryptSignatureBI(a,c,b);var d=e.toString(16).replace(/^1f+00/,\"\");return d;}function _rsasign_getAlgNameAndHashFromHexDisgestInfo(f){for(var e in KJUR.crypto.Util.DIGESTINFOHEAD){var d=KJUR.crypto.Util.DIGESTINFOHEAD[e];var b=d.length;if(f.substring(0,b)==d){var c=[e,f.substring(b)];return c;}}return[];}function _rsasign_verifySignatureWithArgs(f,b,g,j){var e=_rsasign_getHexDigestInfoFromSig(b,g,j);var h=_rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if(h.length==0){return false;}var d=h[0];var i=h[1];var a=function a(k){return KJUR.crypto.Util.hashString(k,d);};var c=a(f);return i==c;}function _rsasign_verifyHexSignatureForMessage(c,b){var d=parseBigInt(c,16);var a=_rsasign_verifySignatureWithArgs(b,d,this.n.toString(16),this.e.toString(16));return a;}function _rsasign_verifyString(f,j){j=j.replace(_RE_HEXDECONLY,\"\");j=j.replace(/[ \\n]+/g,\"\");var b=parseBigInt(j,16);if(b.bitLength()>this.n.bitLength()){return 0;}var i=this.doPublic(b);var e=i.toString(16).replace(/^1f+00/,\"\");var g=_rsasign_getAlgNameAndHashFromHexDisgestInfo(e);if(g.length==0){return false;}var d=g[0];var h=g[1];var a=function a(k){return KJUR.crypto.Util.hashString(k,d);};var c=a(f);return h==c;}function _rsasign_verifyWithMessageHash(e,a){a=a.replace(_RE_HEXDECONLY,\"\");a=a.replace(/[ \\n]+/g,\"\");var b=parseBigInt(a,16);if(b.bitLength()>this.n.bitLength()){return 0;}var h=this.doPublic(b);var g=h.toString(16).replace(/^1f+00/,\"\");var c=_rsasign_getAlgNameAndHashFromHexDisgestInfo(g);if(c.length==0){return false;}var d=c[0];var f=c[1];return f==e;}function _rsasign_verifyStringPSS(c,b,a,f){var e=function e(g){return KJUR.crypto.Util.hashHex(g,a);};var d=e(rstrtohex(c));if(f===undefined){f=-1;}return this.verifyWithMessageHashPSS(d,b,a,f);}function _rsasign_verifyWithMessageHashPSS(f,s,l,c){var k=new BigInteger(s,16);if(k.bitLength()>this.n.bitLength()){return false;}var r=function r(i){return KJUR.crypto.Util.hashHex(i,l);};var j=hextorstr(f);var h=j.length;var g=this.n.bitLength()-1;var m=Math.ceil(g/8);var q;if(c===-1||c===undefined){c=h;}else{if(c===-2){c=m-h-2;}else{if(c<-2){throw\"invalid salt length\";}}}if(m<h+c+2){throw\"data too long\";}var a=this.doPublic(k).toByteArray();for(q=0;q<a.length;q+=1){a[q]&=255;}while(a.length<m){a.unshift(0);}if(a[m-1]!==188){throw\"encoded message does not end in 0xbc\";}a=String.fromCharCode.apply(String,a);var d=a.substr(0,m-h-1);var e=a.substr(d.length,h);var p=65280>>8*m-g&255;if((d.charCodeAt(0)&p)!==0){throw\"bits beyond keysize not zero\";}var n=pss_mgf1_str(e,d.length,r);var o=[];for(q=0;q<d.length;q+=1){o[q]=d.charCodeAt(q)^n.charCodeAt(q);}o[0]&=~p;var b=m-h-c-2;for(q=0;q<b;q+=1){if(o[q]!==0){throw\"leftmost octets not zero\";}}if(o[b]!==1){throw\"0x01 marker not found\";}return e===hextorstr(r(rstrtohex(\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"+j+String.fromCharCode.apply(String,o.slice(-c)))));}RSAKey.prototype.signWithMessageHash=_rsasign_signWithMessageHash;RSAKey.prototype.signString=_rsasign_signString;RSAKey.prototype.signStringWithSHA1=_rsasign_signStringWithSHA1;RSAKey.prototype.signStringWithSHA256=_rsasign_signStringWithSHA256;RSAKey.prototype.sign=_rsasign_signString;RSAKey.prototype.signWithSHA1=_rsasign_signStringWithSHA1;RSAKey.prototype.signWithSHA256=_rsasign_signStringWithSHA256;RSAKey.prototype.signWithMessageHashPSS=_rsasign_signWithMessageHashPSS;RSAKey.prototype.signStringPSS=_rsasign_signStringPSS;RSAKey.prototype.signPSS=_rsasign_signStringPSS;RSAKey.SALT_LEN_HLEN=-1;RSAKey.SALT_LEN_MAX=-2;RSAKey.prototype.verifyWithMessageHash=_rsasign_verifyWithMessageHash;RSAKey.prototype.verifyString=_rsasign_verifyString;RSAKey.prototype.verifyHexSignatureForMessage=_rsasign_verifyHexSignatureForMessage;RSAKey.prototype.verify=_rsasign_verifyString;RSAKey.prototype.verifyHexSignatureForByteArrayMessage=_rsasign_verifyHexSignatureForMessage;RSAKey.prototype.verifyWithMessageHashPSS=_rsasign_verifyWithMessageHashPSS;RSAKey.prototype.verifyStringPSS=_rsasign_verifyStringPSS;RSAKey.prototype.verifyPSS=_rsasign_verifyStringPSS;RSAKey.SALT_LEN_RECOVER=-2;/*! x509-1.1.6.js (c) 2012-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */function X509(){this.subjectPublicKeyRSA=null;this.subjectPublicKeyRSA_hN=null;this.subjectPublicKeyRSA_hE=null;this.hex=null;this.getSerialNumberHex=function(){return ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,1]);};this.getIssuerHex=function(){return ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,3]);};this.getIssuerString=function(){return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,3]));};this.getSubjectHex=function(){return ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,5]);};this.getSubjectString=function(){return X509.hex2dn(ASN1HEX.getDecendantHexTLVByNthList(this.hex,0,[0,5]));};this.getNotBefore=function(){var a=ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,4,0]);a=a.replace(/(..)/g,\"%$1\");a=decodeURIComponent(a);return a;};this.getNotAfter=function(){var a=ASN1HEX.getDecendantHexVByNthList(this.hex,0,[0,4,1]);a=a.replace(/(..)/g,\"%$1\");a=decodeURIComponent(a);return a;};this.readCertPEM=function(c){var e=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(e);var d=new RSAKey();d.setPublic(b[0],b[1]);this.subjectPublicKeyRSA=d;this.subjectPublicKeyRSA_hN=b[0];this.subjectPublicKeyRSA_hE=b[1];this.hex=e;};this.readCertPEMWithoutRSAInit=function(c){var d=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(d);this.subjectPublicKeyRSA.setPublic(b[0],b[1]);this.subjectPublicKeyRSA_hN=b[0];this.subjectPublicKeyRSA_hE=b[1];this.hex=d;};}X509.pemToBase64=function(a){var b=a;b=b.replace(\"-----BEGIN CERTIFICATE-----\",\"\");b=b.replace(\"-----END CERTIFICATE-----\",\"\");b=b.replace(/[ \\n]+/g,\"\");return b;};X509.pemToHex=function(a){var c=X509.pemToBase64(a);var b=b64tohex(c);return b;};X509.getSubjectPublicKeyPosFromCertHex=function(f){var e=X509.getSubjectPublicKeyInfoPosFromCertHex(f);if(e==-1){return-1;}var b=ASN1HEX.getPosArrayOfChildren_AtObj(f,e);if(b.length!=2){return-1;}var d=b[1];if(f.substring(d,d+2)!=\"03\"){return-1;}var c=ASN1HEX.getStartPosOfV_AtObj(f,d);if(f.substring(c,c+2)!=\"00\"){return-1;}return c+2;};X509.getSubjectPublicKeyInfoPosFromCertHex=function(d){var c=ASN1HEX.getStartPosOfV_AtObj(d,0);var b=ASN1HEX.getPosArrayOfChildren_AtObj(d,c);if(b.length<1){return-1;}if(d.substring(b[0],b[0]+10)==\"a003020102\"){if(b.length<6){return-1;}return b[6];}else{if(b.length<5){return-1;}return b[5];}};X509.getPublicKeyHexArrayFromCertHex=function(f){var e=X509.getSubjectPublicKeyPosFromCertHex(f);var b=ASN1HEX.getPosArrayOfChildren_AtObj(f,e);if(b.length!=2){return[];}var d=ASN1HEX.getHexOfV_AtObj(f,b[0]);var c=ASN1HEX.getHexOfV_AtObj(f,b[1]);if(d!=null&&c!=null){return[d,c];}else{return[];}};X509.getHexTbsCertificateFromCert=function(b){var a=ASN1HEX.getStartPosOfV_AtObj(b,0);return a;};X509.getPublicKeyHexArrayFromCertPEM=function(c){var d=X509.pemToHex(c);var b=X509.getPublicKeyHexArrayFromCertHex(d);return b;};X509.hex2dn=function(e){var f=\"\";var c=ASN1HEX.getPosArrayOfChildren_AtObj(e,0);for(var d=0;d<c.length;d++){var b=ASN1HEX.getHexOfTLV_AtObj(e,c[d]);f=f+\"/\"+X509.hex2rdn(b);}return f;};X509.hex2rdn=function(a){var f=ASN1HEX.getDecendantHexTLVByNthList(a,0,[0,0]);var e=ASN1HEX.getDecendantHexVByNthList(a,0,[0,1]);var c=\"\";try{c=X509.DN_ATTRHEX[f];}catch(b){c=f;}e=e.replace(/(..)/g,\"%$1\");var d=decodeURIComponent(e);return c+\"=\"+d;};X509.DN_ATTRHEX={\"0603550406\":\"C\",\"060355040a\":\"O\",\"060355040b\":\"OU\",\"0603550403\":\"CN\",\"0603550405\":\"SN\",\"0603550408\":\"ST\",\"0603550407\":\"L\"};X509.getPublicKeyFromCertPEM=function(f){var c=X509.getPublicKeyInfoPropOfCertPEM(f);if(c.algoid==\"2a864886f70d010101\"){var i=KEYUTIL.parsePublicRawRSAKeyHex(c.keyhex);var j=new RSAKey();j.setPublic(i.n,i.e);return j;}else{if(c.algoid==\"2a8648ce3d0201\"){var e=KJUR.crypto.OID.oidhex2name[c.algparam];var j=new KJUR.crypto.ECDSA({curve:e,info:c.keyhex});j.setPublicKeyHex(c.keyhex);return j;}else{if(c.algoid==\"2a8648ce380401\"){var b=ASN1HEX.getVbyList(c.algparam,0,[0],\"02\");var a=ASN1HEX.getVbyList(c.algparam,0,[1],\"02\");var d=ASN1HEX.getVbyList(c.algparam,0,[2],\"02\");var h=ASN1HEX.getHexOfV_AtObj(c.keyhex,0);h=h.substr(2);var j=new KJUR.crypto.DSA();j.setPublic(new BigInteger(b,16),new BigInteger(a,16),new BigInteger(d,16),new BigInteger(h,16));return j;}else{throw\"unsupported key\";}}}};X509.getPublicKeyInfoPropOfCertPEM=function(e){var c={};c.algparam=null;var g=X509.pemToHex(e);var d=ASN1HEX.getPosArrayOfChildren_AtObj(g,0);if(d.length!=3){throw\"malformed X.509 certificate PEM (code:001)\";}if(g.substr(d[0],2)!=\"30\"){throw\"malformed X.509 certificate PEM (code:002)\";}var b=ASN1HEX.getPosArrayOfChildren_AtObj(g,d[0]);if(b.length<7){throw\"malformed X.509 certificate PEM (code:003)\";}var h=ASN1HEX.getPosArrayOfChildren_AtObj(g,b[6]);if(h.length!=2){throw\"malformed X.509 certificate PEM (code:004)\";}var f=ASN1HEX.getPosArrayOfChildren_AtObj(g,h[0]);if(f.length!=2){throw\"malformed X.509 certificate PEM (code:005)\";}c.algoid=ASN1HEX.getHexOfV_AtObj(g,f[0]);if(g.substr(f[1],2)==\"06\"){c.algparam=ASN1HEX.getHexOfV_AtObj(g,f[1]);}else{if(g.substr(f[1],2)==\"30\"){c.algparam=ASN1HEX.getHexOfTLV_AtObj(g,f[1]);}}if(g.substr(h[1],2)!=\"03\"){throw\"malformed X.509 certificate PEM (code:006)\";}var a=ASN1HEX.getHexOfV_AtObj(g,h[1]);c.keyhex=a.substr(2);return c;};X509.getPublicKeyInfoPosOfCertHEX=function(c){var b=ASN1HEX.getPosArrayOfChildren_AtObj(c,0);if(b.length!=3){throw\"malformed X.509 certificate PEM (code:001)\";}if(c.substr(b[0],2)!=\"30\"){throw\"malformed X.509 certificate PEM (code:002)\";}var a=ASN1HEX.getPosArrayOfChildren_AtObj(c,b[0]);if(a.length<7){throw\"malformed X.509 certificate PEM (code:003)\";}return a[6];};X509.getV3ExtInfoListOfCertHex=function(g){var b=ASN1HEX.getPosArrayOfChildren_AtObj(g,0);if(b.length!=3){throw\"malformed X.509 certificate PEM (code:001)\";}if(g.substr(b[0],2)!=\"30\"){throw\"malformed X.509 certificate PEM (code:002)\";}var a=ASN1HEX.getPosArrayOfChildren_AtObj(g,b[0]);if(a.length<8){throw\"malformed X.509 certificate PEM (code:003)\";}if(g.substr(a[7],2)!=\"a3\"){throw\"malformed X.509 certificate PEM (code:004)\";}var h=ASN1HEX.getPosArrayOfChildren_AtObj(g,a[7]);if(h.length!=1){throw\"malformed X.509 certificate PEM (code:005)\";}if(g.substr(h[0],2)!=\"30\"){throw\"malformed X.509 certificate PEM (code:006)\";}var f=ASN1HEX.getPosArrayOfChildren_AtObj(g,h[0]);var e=f.length;var d=new Array(e);for(var c=0;c<e;c++){d[c]=X509.getV3ExtItemInfo_AtObj(g,f[c]);}return d;};X509.getV3ExtItemInfo_AtObj=function(f,g){var e={};e.posTLV=g;var b=ASN1HEX.getPosArrayOfChildren_AtObj(f,g);if(b.length!=2&&b.length!=3){throw\"malformed X.509v3 Ext (code:001)\";}if(f.substr(b[0],2)!=\"06\"){throw\"malformed X.509v3 Ext (code:002)\";}var d=ASN1HEX.getHexOfV_AtObj(f,b[0]);e.oid=ASN1HEX.hextooidstr(d);e.critical=false;if(b.length==3){e.critical=true;}var c=b[b.length-1];if(f.substr(c,2)!=\"04\"){throw\"malformed X.509v3 Ext (code:003)\";}e.posV=ASN1HEX.getStartPosOfV_AtObj(f,c);return e;};X509.getHexOfTLV_V3ExtValue=function(b,a){var c=X509.getPosOfTLV_V3ExtValue(b,a);if(c==-1){return\"\";}return ASN1HEX.getHexOfTLV_AtObj(b,c);};X509.getHexOfV_V3ExtValue=function(b,a){var c=X509.getPosOfTLV_V3ExtValue(b,a);if(c==-1){return\"\";}return ASN1HEX.getHexOfV_AtObj(b,c);};X509.getPosOfTLV_V3ExtValue=function(f,b){var d=b;if(!b.match(/^[0-9.]+$/)){d=KJUR.asn1.x509.OID.name2oid(b);}if(d==\"\"){return-1;}var c=X509.getV3ExtInfoListOfCertHex(f);for(var a=0;a<c.length;a++){var e=c[a];if(e.oid==d){return e.posV;}}return-1;};X509.KEYUSAGE_NAME=[\"digitalSignature\",\"nonRepudiation\",\"keyEncipherment\",\"dataEncipherment\",\"keyAgreement\",\"keyCertSign\",\"cRLSign\",\"encipherOnly\",\"decipherOnly\"];X509.getExtKeyUsageBin=function(d){var b=X509.getHexOfV_V3ExtValue(d,\"keyUsage\");if(b==\"\"){return\"\";}if(b.length%2!=0||b.length<=2){throw\"malformed key usage value\";}var a=parseInt(b.substr(0,2));var c=parseInt(b.substr(2),16).toString(2);return c.substr(0,c.length-a);};X509.getExtKeyUsageString=function(e){var d=X509.getExtKeyUsageBin(e);var b=new Array();for(var c=0;c<d.length;c++){if(d.substr(c,1)==\"1\"){b.push(X509.KEYUSAGE_NAME[c]);}}return b.join(\",\");};X509.getExtAIAInfo=function(g){var j={};j.ocsp=[];j.caissuer=[];var h=X509.getPosOfTLV_V3ExtValue(g,\"authorityInfoAccess\");if(h==-1){return null;}if(g.substr(h,2)!=\"30\"){throw\"malformed AIA Extn Value\";}var d=ASN1HEX.getPosArrayOfChildren_AtObj(g,h);for(var c=0;c<d.length;c++){var a=d[c];var b=ASN1HEX.getPosArrayOfChildren_AtObj(g,a);if(b.length!=2){throw\"malformed AccessDescription of AIA Extn\";}var e=b[0];var f=b[1];if(ASN1HEX.getHexOfV_AtObj(g,e)==\"2b06010505073001\"){if(g.substr(f,2)==\"86\"){j.ocsp.push(hextoutf8(ASN1HEX.getHexOfV_AtObj(g,f)));}}if(ASN1HEX.getHexOfV_AtObj(g,e)==\"2b06010505073002\"){if(g.substr(f,2)==\"86\"){j.caissuer.push(hextoutf8(ASN1HEX.getHexOfV_AtObj(g,f)));}}}return j;};/*! Mike Samuel (c) 2009 | code.google.com/p/json-sans-eval\n */var jsonParse=function(){var e=\"(?:-?\\\\b(?:0|[1-9][0-9]*)(?:\\\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\\\b)\";var j='(?:[^\\\\0-\\\\x08\\\\x0a-\\\\x1f\"\\\\\\\\]|\\\\\\\\(?:[\"/\\\\\\\\bfnrt]|u[0-9A-Fa-f]{4}))';var i='(?:\"'+j+'*\")';var d=new RegExp(\"(?:false|true|null|[\\\\{\\\\}\\\\[\\\\]]|\"+e+\"|\"+i+\")\",\"g\");var k=new RegExp(\"\\\\\\\\(?:([^u])|u(.{4}))\",\"g\");var g={'\"':'\"',\"/\":\"/\",\"\\\\\":\"\\\\\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"};function h(l,m,n){return m?g[m]:String.fromCharCode(parseInt(n,16));}var c=new String(\"\");var a=\"\\\\\";var f={\"{\":Object,\"[\":Array};var b=Object.hasOwnProperty;return function(u,q){var p=u.match(d);var x;var v=p[0];var l=false;if(\"{\"===v){x={};}else{if(\"[\"===v){x=[];}else{x=[];l=true;}}var t;var r=[x];for(var o=1-l,m=p.length;o<m;++o){v=p[o];var w;switch(v.charCodeAt(0)){default:w=r[0];w[t||w.length]=+v;t=void 0;break;case 34:v=v.substring(1,v.length-1);if(v.indexOf(a)!==-1){v=v.replace(k,h);}w=r[0];if(!t){if(w instanceof Array){t=w.length;}else{t=v||c;break;}}w[t]=v;t=void 0;break;case 91:w=r[0];r.unshift(w[t||w.length]=[]);t=void 0;break;case 93:r.shift();break;case 102:w=r[0];w[t||w.length]=false;t=void 0;break;case 110:w=r[0];w[t||w.length]=null;t=void 0;break;case 116:w=r[0];w[t||w.length]=true;t=void 0;break;case 123:w=r[0];r.unshift(w[t||w.length]={});t=void 0;break;case 125:r.shift();break;}}if(l){if(r.length!==1){throw new Error();}x=x[0];}else{if(r.length){throw new Error();}}if(q){var s=function s(C,B){var D=C[B];if(D&&(typeof D===\"undefined\"?\"undefined\":_typeof(D))===\"object\"){var n=null;for(var z in D){if(b.call(D,z)&&D!==C){var y=s(D,z);if(y!==void 0){D[z]=y;}else{if(!n){n=[];}n.push(z);}}}if(n){for(var A=n.length;--A>=0;){delete D[n[A]];}}}return q.call(C,B,D);};x=s({\"\":x},\"\");}return x;};}();/*! jws-3.3.1 (c) 2013-2015 Kenji Urushima | kjur.github.com/jsrsasign/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.jws==\"undefined\"||!KJUR.jws){KJUR.jws={};}KJUR.jws.JWS=function(){var b=KJUR.jws.JWS;this.parseJWS=function(f,h){if(this.parsedJWS!==undefined&&(h||this.parsedJWS.sigvalH!==undefined)){return;}if(f.match(/^([^.]+)\\.([^.]+)\\.([^.]+)$/)==null){throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\";}var i=RegExp.$1;var d=RegExp.$2;var j=RegExp.$3;var l=i+\".\"+d;this.parsedJWS={};this.parsedJWS.headB64U=i;this.parsedJWS.payloadB64U=d;this.parsedJWS.sigvalB64U=j;this.parsedJWS.si=l;if(!h){var g=b64utohex(j);var e=parseBigInt(g,16);this.parsedJWS.sigvalH=g;this.parsedJWS.sigvalBI=e;}var c=b64utoutf8(i);var k=b64utoutf8(d);this.parsedJWS.headS=c;this.parsedJWS.payloadS=k;if(!b.isSafeJSONString(c,this.parsedJWS,\"headP\")){throw\"malformed JSON string for JWS Head: \"+c;}};};KJUR.jws.JWS.sign=function(b,j,d,n,m){var l=KJUR.jws.JWS;var r,f,k;if(typeof j!=\"string\"&&(typeof j===\"undefined\"?\"undefined\":_typeof(j))!=\"object\"){throw\"spHeader must be JSON string or object: \"+j;}if((typeof j===\"undefined\"?\"undefined\":_typeof(j))==\"object\"){f=j;r=JSON.stringify(f);}if(typeof j==\"string\"){r=j;if(!l.isSafeJSONString(r)){throw\"JWS Head is not safe JSON string: \"+r;}f=l.readSafeJSONString(r);}k=d;if((typeof d===\"undefined\"?\"undefined\":_typeof(d))==\"object\"){k=JSON.stringify(d);}if((b==\"\"||b==null)&&f.alg!==undefined){b=f.alg;}if(b!=\"\"&&b!=null&&f.alg===undefined){f.alg=b;r=JSON.stringify(f);}if(b!==f.alg){throw\"alg and sHeader.alg doesn't match: \"+b+\"!=\"+f.alg;}var e=null;if(l.jwsalg2sigalg[b]===undefined){throw\"unsupported alg name: \"+b;}else{e=l.jwsalg2sigalg[b];}var c=utf8tob64u(r);var h=utf8tob64u(k);var p=c+\".\"+h;var o=\"\";if(e.substr(0,4)==\"Hmac\"){if(n===undefined){throw\"mac key shall be specified for HS* alg\";}var i=new KJUR.crypto.Mac({alg:e,prov:\"cryptojs\",pass:n});i.updateString(p);o=i.doFinal();}else{if(e.indexOf(\"withECDSA\")!=-1){var q=new KJUR.crypto.Signature({alg:e});q.init(n,m);q.updateString(p);hASN1Sig=q.sign();o=KJUR.crypto.ECDSA.asn1SigToConcatSig(hASN1Sig);}else{if(e!=\"none\"){var q=new KJUR.crypto.Signature({alg:e});q.init(n,m);q.updateString(p);o=q.sign();}}}var g=hextob64u(o);return p+\".\"+g;};KJUR.jws.JWS.verify=function(p,t,j){var m=KJUR.jws.JWS;var q=p.split(\".\");var d=q[0];var l=q[1];var b=d+\".\"+l;var r=b64utohex(q[2]);var i=m.readSafeJSONString(b64utoutf8(q[0]));var h=null;var s=null;if(i.alg===undefined){throw\"algorithm not specified in header\";}else{h=i.alg;s=h.substr(0,2);}if(j!=null&&Object.prototype.toString.call(j)===\"[object Array]\"&&j.length>0){var c=\":\"+j.join(\":\")+\":\";if(c.indexOf(\":\"+h+\":\")==-1){throw\"algorithm '\"+h+\"' not accepted in the list\";}}if(h!=\"none\"&&t===null){throw\"key shall be specified to verify.\";}if(typeof t==\"string\"&&t.indexOf(\"-----BEGIN \")!=-1){t=KEYUTIL.getKey(t);}if(s==\"RS\"||s==\"PS\"){if(!(t instanceof RSAKey)){throw\"key shall be a RSAKey obj for RS* and PS* algs\";}}if(s==\"ES\"){if(!(t instanceof KJUR.crypto.ECDSA)){throw\"key shall be a ECDSA obj for ES* algs\";}}if(h==\"none\"){}var n=null;if(m.jwsalg2sigalg[i.alg]===undefined){throw\"unsupported alg name: \"+h;}else{n=m.jwsalg2sigalg[h];}if(n==\"none\"){throw\"not supported\";}else{if(n.substr(0,4)==\"Hmac\"){var k=null;if(t===undefined){throw\"hexadecimal key shall be specified for HMAC\";}var g=new KJUR.crypto.Mac({alg:n,pass:t});g.updateString(b);k=g.doFinal();return r==k;}else{if(n.indexOf(\"withECDSA\")!=-1){var f=null;try{f=KJUR.crypto.ECDSA.concatSigToASN1Sig(r);}catch(o){return false;}var e=new KJUR.crypto.Signature({alg:n});e.init(t);e.updateString(b);return e.verify(f);}else{var e=new KJUR.crypto.Signature({alg:n});e.init(t);e.updateString(b);return e.verify(r);}}}};KJUR.jws.JWS.verifyJWT=function(d,j,l){var h=KJUR.jws.JWS;var i=d.split(\".\");var c=i[0];var g=i[1];var m=c+\".\"+g;var k=b64utohex(i[2]);var f=h.readSafeJSONString(b64utoutf8(c));var e=h.readSafeJSONString(b64utoutf8(g));if(f.alg===undefined){return false;}if(l.alg===undefined){throw\"acceptField.alg shall be specified\";}if(!h.inArray(f.alg,l.alg)){return false;}if(e.iss!==undefined&&_typeof(l.iss)===\"object\"){if(!h.inArray(e.iss,l.iss)){return false;}}if(e.sub!==undefined&&_typeof(l.sub)===\"object\"){if(!h.inArray(e.sub,l.sub)){return false;}}if(e.aud!==undefined&&_typeof(l.aud)===\"object\"){if(typeof e.aud==\"string\"){if(!h.inArray(e.aud,l.aud)){return false;}}else{if(_typeof(e.aud)==\"object\"){if(!h.includedArray(e.aud,l.aud)){return false;}}}}var b=KJUR.jws.IntDate.getNow();if(l.verifyAt!==undefined&&typeof l.verifyAt==\"number\"){b=l.verifyAt;}if(e.exp!==undefined&&typeof e.exp==\"number\"){if(e.exp<b){return false;}}if(e.nbf!==undefined&&typeof e.nbf==\"number\"){if(b<e.nbf){return false;}}if(e.iat!==undefined&&typeof e.iat==\"number\"){if(b<e.iat){return false;}}if(e.jti!==undefined&&l.jti!==undefined){if(e.jti!==l.jti){return false;}}if(!KJUR.jws.JWS.verify(d,j,l.alg)){return false;}return true;};KJUR.jws.JWS.includedArray=function(c,b){var e=KJUR.jws.JWS.inArray;if(c===null){return false;}if((typeof c===\"undefined\"?\"undefined\":_typeof(c))!==\"object\"){return false;}if(typeof c.length!==\"number\"){return false;}for(var d=0;d<c.length;d++){if(!e(c[d],b)){return false;}}return true;};KJUR.jws.JWS.inArray=function(d,b){if(b===null){return false;}if((typeof b===\"undefined\"?\"undefined\":_typeof(b))!==\"object\"){return false;}if(typeof b.length!==\"number\"){return false;}for(var c=0;c<b.length;c++){if(b[c]==d){return true;}}return false;};KJUR.jws.JWS.jwsalg2sigalg={HS256:\"HmacSHA256\",HS384:\"HmacSHA384\",HS512:\"HmacSHA512\",RS256:\"SHA256withRSA\",RS384:\"SHA384withRSA\",RS512:\"SHA512withRSA\",ES256:\"SHA256withECDSA\",ES384:\"SHA384withECDSA\",PS256:\"SHA256withRSAandMGF1\",PS384:\"SHA384withRSAandMGF1\",PS512:\"SHA512withRSAandMGF1\",none:\"none\"};KJUR.jws.JWS.isSafeJSONString=function(d,c,e){var f=null;try{f=jsonParse(d);if((typeof f===\"undefined\"?\"undefined\":_typeof(f))!=\"object\"){return 0;}if(f.constructor===Array){return 0;}if(c){c[e]=f;}return 1;}catch(b){return 0;}};KJUR.jws.JWS.readSafeJSONString=function(c){var d=null;try{d=jsonParse(c);if((typeof d===\"undefined\"?\"undefined\":_typeof(d))!=\"object\"){return null;}if(d.constructor===Array){return null;}return d;}catch(b){return null;}};KJUR.jws.JWS.getEncodedSignatureValueFromJWS=function(b){if(b.match(/^[^.]+\\.[^.]+\\.([^.]+)$/)==null){throw\"JWS signature is not a form of 'Head.Payload.SigValue'.\";}return RegExp.$1;};KJUR.jws.IntDate={};KJUR.jws.IntDate.get=function(b){if(b==\"now\"){return KJUR.jws.IntDate.getNow();}else{if(b==\"now + 1hour\"){return KJUR.jws.IntDate.getNow()+60*60;}else{if(b==\"now + 1day\"){return KJUR.jws.IntDate.getNow()+60*60*24;}else{if(b==\"now + 1month\"){return KJUR.jws.IntDate.getNow()+60*60*24*30;}else{if(b==\"now + 1year\"){return KJUR.jws.IntDate.getNow()+60*60*24*365;}else{if(b.match(/Z$/)){return KJUR.jws.IntDate.getZulu(b);}else{if(b.match(/^[0-9]+$/)){return parseInt(b);}}}}}}}throw\"unsupported format: \"+b;};KJUR.jws.IntDate.getZulu=function(h){if(a=h.match(/(\\d{4})(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)Z/)){var g=parseInt(RegExp.$1);var i=parseInt(RegExp.$2)-1;var c=parseInt(RegExp.$3);var b=parseInt(RegExp.$4);var e=parseInt(RegExp.$5);var f=parseInt(RegExp.$6);var j=new Date(Date.UTC(g,i,c,b,e,f));return~~(j/1000);}throw\"unsupported format: \"+h;};KJUR.jws.IntDate.getNow=function(){var b=~~(new Date()/1000);return b;};KJUR.jws.IntDate.intDate2UTCString=function(b){var c=new Date(b*1000);return c.toUTCString();};KJUR.jws.IntDate.intDate2Zulu=function(f){var j=new Date(f*1000);var i=(\"0000\"+j.getUTCFullYear()).slice(-4);var h=(\"00\"+(j.getUTCMonth()+1)).slice(-2);var c=(\"00\"+j.getUTCDate()).slice(-2);var b=(\"00\"+j.getUTCHours()).slice(-2);var e=(\"00\"+j.getUTCMinutes()).slice(-2);var g=(\"00\"+j.getUTCSeconds()).slice(-2);return i+h+c+b+e+g+\"Z\";};/*! jwsjs-2.0.1 (c) 2010-2015 Kenji Urushima | kjur.github.com/jsjws/license\n */if(typeof KJUR==\"undefined\"||!KJUR){KJUR={};}if(typeof KJUR.jws==\"undefined\"||!KJUR.jws){KJUR.jws={};}KJUR.jws.JWSJS=function(){var a=KJUR.jws.JWS;this.aHeader=[];this.sPayload=\"\";this.aSignature=[];this.init=function(){this.aHeader=[];this.sPayload=\"\";this.aSignature=[];};this.initWithJWS=function(c){this.init();var b=new KJUR.jws.JWS();b.parseJWS(c);this.aHeader.push(b.parsedJWS.headB64U);this.sPayload=b.parsedJWS.payloadB64U;this.aSignature.push(b.parsedJWS.sigvalB64U);};this.addSignatureByHeaderKey=function(e,b){var d=b64utoutf8(this.sPayload);var c=new KJUR.jws.JWS();var f=c.generateJWSByP1PrvKey(e,d,b);this.aHeader.push(c.parsedJWS.headB64U);this.aSignature.push(c.parsedJWS.sigvalB64U);};this.addSignatureByHeaderPayloadKey=function(e,d,b){var c=new KJUR.jws.JWS();var f=c.generateJWSByP1PrvKey(e,d,b);this.aHeader.push(c.parsedJWS.headB64U);this.sPayload=c.parsedJWS.payloadB64U;this.aSignature.push(c.parsedJWS.sigvalB64U);};this.verifyWithCerts=function(c){if(this.aHeader.length!=c.length){throw\"num headers does not match with num certs\";}if(this.aSignature.length!=c.length){throw\"num signatures does not match with num certs\";}var k=this.sPayload;var g=\"\";for(var d=0;d<c.length;d++){var e=c[d];var f=this.aHeader[d];var m=this.aSignature[d];var b=f+\".\"+k+\".\"+m;var j=new KJUR.jws.JWS();try{var l=j.verifyJWSByPemX509Cert(b,e);if(l!=1){g+=d+1+\"th signature unmatch. \";}}catch(h){g+=d+1+\"th signature fail(\"+h+\"). \";}}if(g==\"\"){return 1;}else{throw g;}};this.readJWSJS=function(b){var c=a.readSafeJSONString(b);if(c==null){throw\"argument is not JSON string: \"+b;}this.aHeader=c.headers;this.sPayload=c.payload;this.aSignature=c.signatures;};this.getJSON=function(){return{headers:this.aHeader,payload:this.sPayload,signatures:this.aSignature};};this.isEmpty=function(){if(this.aHeader.length==0){return 1;}return 0;};};exports.BigInteger=BigInteger;exports.RSAKey=RSAKey;exports.ECDSA=KJUR.crypto.ECDSA;exports.DSA=KJUR.crypto.DSA;exports.Signature=KJUR.crypto.Signature;exports.MessageDigest=KJUR.crypto.MessageDigest;exports.Mac=KJUR.crypto.Mac;exports.KEYUTIL=KEYUTIL;exports.ASN1HEX=ASN1HEX;exports.X509=X509;// ext/base64.js\nexports.b64tohex=b64tohex;exports.b64toBA=b64toBA;// base64x.js\nexports.stoBA=stoBA;exports.BAtos=BAtos;exports.BAtohex=BAtohex;exports.stohex=stohex;exports.stob64=stob64;exports.stob64u=stob64u;exports.b64utos=b64utos;exports.b64tob64u=b64tob64u;exports.b64utob64=b64utob64;exports.hex2b64=hex2b64;exports.hextob64u=hextob64u;exports.b64utohex=b64utohex;exports.b64tohex=b64tohex;exports.utf8tob64u=utf8tob64u;exports.b64utoutf8=b64utoutf8;exports.utf8tob64=utf8tob64;exports.b64toutf8=b64toutf8;exports.utf8tohex=utf8tohex;exports.hextoutf8=hextoutf8;exports.hextorstr=hextorstr;exports.rstrtohex=rstrtohex;exports.newline_toUnix=newline_toUnix;exports.newline_toDos=newline_toDos;exports.strdiffidx=strdiffidx;exports.crypto=KJUR.crypto;exports.asn1=KJUR.asn1;exports.jws=KJUR.jws;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/~/jsrsasign/lib/jsrsasign.js\n ** module id = 42\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/~/jsrsasign/lib/jsrsasign.js?");

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\"use strict\";\n\nmodule.exports = {\n\n    split: function split(urn) {\n        if (urn.indexOf(':') < 0) return false;else {\n            return {\n                cat: urn.split(\":\")[0],\n                subCats: urn.split(\":\").slice(1, -1),\n                id: urn.split(\":\")[urn.split(\":\").length - 1]\n            };\n        }\n    },\n\n    check: function check(urn) {\n        if (splited) return false;else {\n            return true;\n        }\n    },\n\n    create: function create(cat, subCats, id) {\n        var newURN = cat;\n        for (var i = 0; i < subCats.length; i++) {\n            newURN += \":\" + subCats[i];\n        }\n        newURN += \":\" + new Buffer(id).toString('base64');\n        return newURN;\n    },\n\n    toBase64: function toBase64(urn) {\n        var splited = split(urn);\n        if (splited) return false;else {\n            return splited.cat + \":\" + splited.subCats + \":\" + new Buffer(splited.id).toString('base64');\n        }\n    },\n\n    packer: {\n        encode: function encode(identity) {\n            var schemaLength = identity.lastIndexOf(':');\n\n            if (schemaLength <= 0) {\n                throw new Error(\"Wrong fomatting\");\n            }\n\n            if (schemaLength > 255) {\n                throw new Error(\"Maximum length of URN schema is 255\");\n            }\n\n            // Each hex char is 4 bits\n            var idLength = (identity.length - schemaLength - 1) / 2;\n\n            if (idLength != idLength.toFixed()) {\n                throw new Error(\"Hex chars are of odd count\");\n            }\n\n            if (idLength <= 0) {\n                throw new Error(\"ID is empty\");\n            }\n\n            if (idLength > 65535) {\n                throw new Error(\"Maximum length of ID is 65535\");\n            }\n\n            return ('0' + schemaLength.toString(16)).slice(-2) + stringToHex(identity.slice(0, schemaLength)) + ('000' + idLength.toString(16)).slice(-4) + identity.slice(schemaLength + 1);\n        },\n\n        chunk: function chunk(hex) {\n            var chunks = hex.match(/.{2,64}/g);\n            // Pad with zeros\n            var last = chunks[chunks.length - 1];\n            chunks[chunks.length - 1] = last + Array(64 + 1 - last.length).join('0');\n            return chunks.map(function (chunk) {\n                return '0x' + chunk;\n            });\n        },\n\n        encodeAndChunk: function encodeAndChunk(identities) {\n            if (typeof identities == 'string') {\n                identities = [identities];\n            }\n\n            var result = [];\n            identities.forEach(function (identity) {\n                result = result.concat(this.chunk(this.encode(identity)));\n            }.bind(this));\n\n            return result;\n        },\n\n        // Accepts both chunks array and hex string\n        decode: function decode(encoded) {\n            if (encoded instanceof Array) {\n                encoded = encoded.map(function (chunk) {\n                    return chunk.replace(/^0x/g, '');\n                }).join('');\n            }\n\n            // Each symbol is 4 bits\n            var result = [];\n            var nextIndex = 0;\n            while (nextIndex < encoded.length) {\n                var schemaLength = parseInt(encoded.slice(nextIndex, nextIndex + 1 * 2), 16);\n                var idLength = parseInt(encoded.slice(nextIndex + (1 + schemaLength) * 2, nextIndex + (1 + schemaLength + 2) * 2), 16);\n\n                var schema = encoded.slice(nextIndex + 1 * 2, nextIndex + (1 + schemaLength) * 2);\n                // Convert to string\n                schema = hexToString(schema);\n                var id = encoded.slice(nextIndex + (1 + schemaLength + 2) * 2, nextIndex + (1 + schemaLength + 2 + idLength) * 2);\n\n                result.push(schema + ':' + id);\n\n                // Get full cells\n                var cellsPerId = Math.ceil((1 + schemaLength + 2 + idLength) / 32);\n                nextIndex += cellsPerId * 32 * 2;\n            }\n\n            return result;\n        }\n    }\n};\n\nfunction stringToHex(str) {\n    var hex, i;\n\n    var result = \"\";\n    for (i = 0; i < str.length; i++) {\n        hex = str.charCodeAt(i).toString(16);\n        result += (\"00\" + hex).slice(-2);\n    }\n\n    return result;\n}\n\nfunction hexToString(hex) {\n    var j;\n    var hexes = hex.match(/.{1,2}/g) || [];\n    var back = \"\";\n    for (j = 0; j < hexes.length; j++) {\n        back += String.fromCharCode(parseInt(hexes[j], 16));\n    }\n\n    return back;\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/lib/urn.js\n ** module id = 43\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/lib/urn.js?");

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';\n\nvar jsrsasign = __webpack_require__(42);\n\nmodule.exports = {\n\n    generate: function generate(type) {\n\n        if (type == 'secp256r1') {\n            var curve = new jsrsasign.ECDSA({ 'curve': 'secp256r1' });\n            var pair = curve.generateKeyPairHex();\n            pair.pub64 = new Buffer(pair.ecpubhex).toString('base64');\n            return pair;\n        } else if (type == 'secp256k1') {\n            var curve = new jsrsasign.ECDSA({ 'curve': 'secp256k1' });\n            var pair = curve.generateKeyPairHex();\n            pair.pub64 = new Buffer(pair.ecpubhex).toString('base64');\n            return pair;\n        } else if (type == 'secp384r1') {\n            var curve = new jsrsasign.ECDSA({ 'curve': 'secp384r1' });\n            var pair = curve.generateKeyPairHex();\n            pair.pub64 = new Buffer(pair.ecpubhex).toString('base64');\n            return pair;\n        } else {\n            throw 'Invalid algorithm type';\n        }\n    }\n\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/lib/keyPair.js\n ** module id = 44\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/lib/keyPair.js?");

/***/ },
/* 45 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = {\n  slice: function slice(bytes) {\n    bytes = bytes.replace('0x', '');\n    var slices = [];\n    while (bytes.length > 64) {\n      slices.push('0x' + bytes.substring(0, 64));\n      bytes = bytes.substring(64, bytes.length);\n    }\n    slices.push('0x' + bytes);\n    return slices;\n  },\n  merge: function merge(bytes32Array) {\n    var merged = '0x';\n    for (var i = 0; i < bytes32Array.length; i++) {\n      merged += bytes32Array[i].replace('0x', '');\n    }\n    return merged;\n  }\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/open-registry-utils/lib/bytes32Array.js\n ** module id = 45\n ** module chunks = 0 2\n **/\n//# sourceURL=webpack:///./~/open-registry-utils/lib/bytes32Array.js?");

/***/ },
/* 46 */,
/* 47 */
/***/ function(module, exports) {

	eval("module.exports = {\n\t\"package\": \"Schema\",\n\t\"messages\": [\n\t\t{\n\t\t\t\"name\": \"Schema\",\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"rule\": \"required\",\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"id\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"rule\": \"required\",\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"name\": \"description\",\n\t\t\t\t\t\"id\": 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"rule\": \"required\",\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"name\": \"definition\",\n\t\t\t\t\t\"id\": 3\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./schemas/schema.proto.json\n ** module id = 47\n ** module chunks = 0 2 3\n **/\n//# sourceURL=webpack:///./schemas/schema.proto.json?");

/***/ }
/******/ ]);